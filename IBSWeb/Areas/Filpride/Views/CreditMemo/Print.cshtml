@using IBS.Models
@using IBS.Utility.Constants
@using IBS.Utility.Enums
@using IBS.Utility.Helpers
@using Microsoft.AspNetCore.Identity
@model FilprideCreditMemo
@inject SignInManager<ApplicationUser> SignInManager
@inject UserManager<ApplicationUser> UserManager

@{
    ViewData["Title"] = "Print Credit Memo";
    
    var customerType = (Model.SalesInvoice?.CustomerOrderSlip?.CustomerType ?? Model.SalesInvoice?.Customer?.CustomerType) ?? Model.ServiceInvoice!.Customer!.CustomerType;
    var customerName = (Model.SalesInvoice?.CustomerOrderSlip?.CustomerName ?? Model.SalesInvoice?.Customer?.CustomerName) ?? Model.ServiceInvoice!.CustomerName;
    var customerAddress = (Model.SalesInvoice?.CustomerOrderSlip?.CustomerAddress ?? Model.SalesInvoice?.Customer?.CustomerAddress) ?? Model.ServiceInvoice!.CustomerAddress;
    var customerTin = (Model.SalesInvoice?.CustomerOrderSlip?.CustomerTin ?? Model.SalesInvoice?.Customer?.CustomerTin) ?? Model.ServiceInvoice!.CustomerTin;
    var customerBusinessStyle = (Model.SalesInvoice?.CustomerOrderSlip?.BusinessStyle ?? Model.SalesInvoice?.Customer?.BusinessStyle) ?? Model.ServiceInvoice?.CustomerBusinessStyle;
    var customerVatType = (Model.SalesInvoice?.CustomerOrderSlip?.VatType ?? Model.SalesInvoice?.Customer?.VatType) ?? Model.ServiceInvoice!.VatType;

    var netOfVatAmount = customerVatType == SD.VatType_Vatable ? Model.CreditAmount / 1.12m : Model.CreditAmount;
    var vatAmount = customerVatType == SD.VatType_Vatable ? netOfVatAmount * 0.12m : 0m;

    var selectedCompany = string.Empty;

    if (SignInManager.IsSignedIn(User))
    {
        selectedCompany = User.Claims.FirstOrDefault(c => c.Type == "Company")?.Value;
    }
    
    var decimalFormat = customerType != nameof(CustomerType.Government) ? SD.Two_Decimal_Format : SD.Four_Decimal_Format;
}

<br />
<div class="text-end">
    @if (selectedCompany == "Filpride")
    {
        <img src="~/img/Filpride.jpg" height="" width="130px" />
    }
    @if (selectedCompany == "Mobility")
    {
        <img src="~/img/usa88-logo.png" height="" width="130px" />
    }
</div>
<div class="text-center">
    @if (selectedCompany == "Filpride")
    {
        <h2><u><b>&nbsp;FILPRIDE RESOURCES INC.&nbsp;</b></u></h2>
        <p style="line-height: 1; margin-top:-7px;">
            57 Westgate Office, Sampson Road, CBD, Subic Bay Freeport Zone,<br />
            Kalaklan, Olongapo City, 2200 Zambales, Philippines<br />
            VAT Reg. TIN: 000-216-589-00000
        </p>
    }
    @if (selectedCompany == "Mobility")
    {
        <h2><u><b>&nbsp;MOBILITY GROUP CORP.&nbsp;</b></u></h2>
        <p style="line-height: 1; margin-top:-7px;">
            Tower B Phoenix Sun Business Park Eulogio Rodriguez JR, ave.,<br />
            Bagumbayan Libis 1110 Quezon City NCR, Second District Philippines<br />
            VAT Reg. TIN: 776-536-510-00000
        </p>
    }
    <h3><span style="display: inline-block;"><b>CREDIT MEMO</b></span></h3>
    <div class="text-end" style="margin-top:-60px;">
        <h6><b>No.&nbsp;@Html.DisplayFor(model => model.CreditMemoNo)</b></h6>
    </div>
</div>
<br />
<div class="table-responsive">
        <table class="w-100" style="margin-top:20px;">
            <tbody>
                <tr>
                    <td>
                        <span><b>Sold to:</b></span>
                        &nbsp;@customerName &nbsp;<br />

                        <span><b>Address:</b></span>
                        &nbsp;@customerAddress &nbsp;<br />

                        <span><b>TIN:</b></span>
                        &nbsp;@customerTin &nbsp;<br />

                        <span><b>Business Style:</b></span>
                        &nbsp;@customerBusinessStyle &nbsp;
                    </td>

                    <td class="w-25 text-nowrap">

                        <b>Date :</b> @Model.TransactionDate.ToString(SD.Date_Format)
                    </td>
                </tr>
            </tbody>
        </table>
    </div>

    <div class="table-responsive" style="margin-top:20px;">
        <table class="table-bordered w-100 text-center">
            <thead>
                <tr>
                    <th>INVOICE NO.</th>
                    <th>INVOICE DATE</th>
                    <th>PRODUCT</th>
                    <th>DESCRIPTION</th>
                    <th>AMOUNT</th>
                </tr>
            </thead>
            <tbody>
                <tr style="height:80px;">
                    <td>@Html.DisplayFor(model => model.SalesInvoice!.SalesInvoiceNo)</td>
                    <td>@Model.SalesInvoice!.TransactionDate.ToString(SD.Date_Format)</td>
                    <td>@Html.DisplayFor(model => model.SalesInvoice!.CustomerOrderSlip!.ProductName)</td>
                    <td>@Html.DisplayFor(model => model.Description)</td>
                    <td>@Math.Abs(Model.CreditAmount).ToString(decimalFormat)</td>
                </tr>
            </tbody>
        </table>
    </div>

    <div style="margin-top:20px;">
        <table class="w-100">
            <tbody>
                <tr>
                    <td>
                    </td>
                    <td style="width:40%;">
                        <div>
                            <table class="w-100">
                                <tbody class="text-nowrap">
                                    <tr>
                                        <td class="w-50"><p style="height: 9px; margin-left:8%;"><b>Vatable Sales: </b></p></td>
                                        @if (netOfVatAmount != 0)
                                        {
                                            <td class="text-end">@Math.Abs(netOfVatAmount).ToString(decimalFormat)</td>
                                        }
                                        else
                                        {
                                            <td class="text-end"></td>
                                        }
                                    </tr>
                                    <tr>
                                        <td><p style="height: 9px; margin-left:8%;"><b>Zero-Rated Sales: </b></p></td>
                                        @if (customerVatType == SD.VatType_ZeroRated)
                                        {
                                            <td class="text-end">@Math.Abs(Model.CreditAmount).ToString(decimalFormat)</td>
                                        }
                                        else
                                        {
                                            <td class="text-end"></td>
                                        }
                                    </tr>
                                    <tr>
                                        <td><p style="height: 9px; margin-left:8%;"><b>VAT-Exempt Sales: </b></p></td>

                                        @if (customerVatType == SD.VatType_Exempt)
                                        {
                                            <td class="text-end">@Math.Abs(Model.CreditAmount).ToString(decimalFormat)</td>
                                        }
                                        else
                                        {
                                            <td class="text-end"></td>
                                        }
                                    </tr>
                                    <tr>
                                        <td><p style="height: 9px; margin-left:8%;"><b>VAT Amount: </b></p></td>

                                        @if (vatAmount != 0)
                                        {
                                            <td class="text-end">@Math.Abs(vatAmount).ToString(decimalFormat)</td>
                                        }
                                        else
                                        {
                                            <td class="text-end"></td>
                                        }
                                    </tr>
                                    <tr>
                                        <td><p style="height: 9px; margin-left:8%;"><b>TOTAL SALES: </b></p></td>
                                        <td class="text-end">@Math.Abs(Model.CreditAmount).ToString(decimalFormat)</td>
                                    </tr>
                                </tbody>
                            </table>
                        </div>
                    </td>
                </tr>
            </tbody>
        </table>
    </div>

@if (Model.Type == nameof(DocumentType.Documented))
{
    <div style="margin-top:20px;">
        <p>
            <i>This is a system generated invoice, no signature required.</i>
        </p>
    </div>

    <br />
    <div class="text-center w-100" style="margin-top:20px;">
        <em><strong>"THIS DOCUMENT IS NOT VALID FOR CLAIM OF INPUT TAX"</strong></em><br/>
        @if (selectedCompany == "Filpride")
        {
            <p>
                <span>Acknowledgement Certificate No:</span>
                <span style="display: inline-block; width:150px;"> @CS.ACCN </span>
                <span>&nbsp;&nbsp;Date Issued:</span>
                <span style="display: inline-block; width:50px;"> @CS.DateIssued </span><br/>
                Series: CM0000000001 - CM9999999999
                Date and Time Created:&nbsp;@DateTimeHelper.GetCurrentPhilippineTimeFormatted(Model.CreatedDate)
            </p>
        }
    </div>
    <br />

    if (selectedCompany == "Filpride")
    {
        <div class="text-start w-100 footer" style="margin-top:50px;">
            <p style="line-height: 1;">
                <em>
                    <strong>Software Name :</strong> @CS.AAS
                    <br/>
                    <strong>Version :</strong> @CS.Version
                    <br/>
                    <strong>Printed By :</strong> @UserManager.GetUserName(User)!.ToUpper()
                    <br/>
                    <strong>Date & Time Printed :</strong> @DateTimeHelper.GetCurrentPhilippineTimeFormatted()
                </em>
            </p>
        </div>
    }

    @if (!Model.IsPrinted)
    {
        <div class="text-end">
            ORIGINAL COPY
        </div>
    }
    else
    {
        <div class="text-end">
            REPRINT COPY
        </div>
    }
}

<div class="row pt-2">
    @{
        if (Model.PostedBy == null)
        {
            <div class="col-6 col-md-3">
                <a id="approveButton" class="btn btn-primary form-control buttons" onclick="confirmPost(@Model.CreditMemoId)">Post</a>
            </div>
        }
        else
        {
            <div class="col-6 col-md-3">
                <a onclick="confirmPrint(@Model.CreditMemoId)" class="btn btn-primary form-control buttons">Print</a>
            </div>
        }
    }

    <div class="col-6 col-md-3">
        <a asp-area="Filpride" asp-controller="CreditMemo" asp-action="Index" class="btn btn-outline-primary border form-control buttons">Back to List</a>
    </div>
</div>

@section Scripts {
    <script>
        function confirmPost(id) {
            Swal.fire({
                title: 'Are you sure?',
                text: "You won't be able to revert this!",
                icon: 'warning',
                showCancelButton: true,
                confirmButtonColor: '#3085d6',
                cancelButtonColor: '#d33',
                confirmButtonText: 'Yes'
            }).then((result) => {
                if (result.isConfirmed) {
                    // Replace with the actual URL that you want to redirect to
                    var url = `@Url.Action("Post", "CreditMemo", new { area = "Filpride" })/${id}`;
                    window.location.href = url;
                }
            })
        }
    </script>
    @if (Model.Type == nameof(DocumentType.Documented) && !Model.IsPrinted)
    {
        <script>
        function confirmPrint(id) {
            Swal.fire({
                title: 'Are you sure?',
                text: "This will mark the document as reprinted and can't be undone.",
                icon: 'warning',
                showCancelButton: true,
                confirmButtonColor: '#3085d6',
                cancelButtonColor: '#d33',
                confirmButtonText: 'Yes'
            }).then((result) => {
                if (result.isConfirmed) {
                    const afterPrintHandler = () => {
                        window.removeEventListener('afterprint', afterPrintHandler);
                        var url = `@Url.Action("Printed", "CreditMemo", new { area = "Filpride" })/${id}`;
                        window.location.href = url;
                    };

                    window.addEventListener('afterprint', afterPrintHandler);

                    // Close Swal before printing to avoid blank overlay
                    Swal.close();
                    setTimeout(() => {
                        window.print();
                    }, 200); // small delay to ensure Swal fully closes before print
                }
            });
        }
    </script>
    }
    else
    {
        <script>
        function confirmPrint(id) {
            // Call the print function
            window.print();
        }
        </script>
    }
    <script src="~/js/disable-dev-tools-in-print.js" asp-append-version="true"></script>
}