@model IEnumerable<FilprideSalesInvoice>
@using IBS.Utility.Enums
@using Microsoft.AspNetCore.Identity
@inject SignInManager<IdentityUser> SignInManager
@inject UserManager<IdentityUser> UserManager
@{
    ViewData["Title"] = "AR Per Customer Report";

    string currencyFormat = "N4";
    string currencyFormatTwoDecimal = "N2";
    
    decimal totalQuantity = 0m;
    decimal totalUnitPrice = 0m;
    decimal totalFreight = 0m;
    decimal totalFreightPerLiter = 0m;
    decimal totalVatPerLiter = 0m;
    decimal totalVatAmount = 0m;
    decimal totalGrossAmount = 0m;
    decimal totalAmountPaid = 0m;
    decimal totalBalance = 0m;
    decimal totalEwtAmount = 0m;
    decimal totalEwtAmountPaid = 0m;
    decimal totalewtBalance = 0m;
}
<style>
    .container {
        max-width: none;
    }

    .table-responsive {
        overflow-y: auto;
        max-height: 70vh;
    }

    table thead th {
        position: sticky;
        top: 0;
        z-index: 10;
        background: white;
    }

    @@media print {
        body * {
            visibility: hidden;
        }

        .print-header, .table-responsive, .table-responsive * {
            visibility: visible;
        }

        .print-header {
            position: absolute;
            top: 0;
            left: 0;
            width: 100%;
        }

        .table-responsive {
            position: absolute;
            top: 0; /* Adjust this value based on your header's height */
            left: 0;
            width: 100%;
            height: auto;
            overflow: visible;
        }
    }
</style>

@if (Model.Any())
{
    <div class="table-responsive">
        <h5>AR PER CUSTOMER REPORT</h5>
        <h6>Date Range: @ViewData["DateFrom"] - @ViewData["DateTo"]</h6>
        <table id="ledgerTable" class="table">
            <thead>
            <tr class="table-primary text-center text-nowrap sticky-top">
                <th>CUSTOMER No.</th>
                <th>CUSTOMER NAME</th>
                <th>ACCT. TYPE</th>
                <th>TERMS</th>
                <th>TRAN. DATE</th>
                <th>DUE DATE</th>
                <th>INVOICE No.</th>
                <th>DR No.</th>
                <th>PO No.</th>
                <th>COS No.</th>
                <th>REMARKS</th>
                <th>PRODUCT</th>
                <th>QTY</th>
                <th>UNIT</th>
                <th>UNIT PRICE</th>
                <th>FREIGHT</th>
                <th>FREIGHT/LTR</th>
                <th>VAT/LTR</th>
                <th>VAT AMT.</th>
                <th>TOTAL AMT.</th>
                <th>AMT. PAID</th>
                <th>SI BALANCE</th>
                <th>EWT AMT.</th>
                <th>EWT PAID</th>
                <th>CWT BALANCE</th>
            </tr>
            </thead>
            <tbody>

            @foreach (var invoice in Model)
            {
                var freight = invoice.DeliveryReceipt?.Freight * invoice.DeliveryReceipt?.Quantity;
                var grossAmount = invoice.Amount;
                var vatableAmount = grossAmount / 1.12m;
                var vatAmount = vatableAmount * .12m;
                var vatPerLiter = vatAmount * invoice.Quantity;
                var ewtAmount = vatableAmount * .01m;
                var isEwtAmountPaid = invoice.IsTaxAndVatPaid ? ewtAmount : 0m;
                var ewtBalance = ewtAmount - isEwtAmountPaid;
                
                <tr class="align-text-bottom">
                    <td>@Html.DisplayFor(model => invoice.Customer.CustomerCode)</td>
                    <td>@Html.DisplayFor(model => invoice.Customer.CustomerName)</td>
                    <td>@Html.DisplayFor(model => invoice.Customer.CustomerType)</td>
                    <td>@Html.DisplayFor(model => invoice.Customer.CustomerTerms)</td>
                    <td>@Html.DisplayFor(model => invoice.TransactionDate)</td>
                    <td>@Html.DisplayFor(model => invoice.DueDate)</td>
                    <td>@Html.DisplayFor(model => invoice.SalesInvoiceNo)</td>
                    <td>@Html.DisplayFor(model => invoice.DeliveryReceipt.DeliveryReceiptNo)</td>
                    <td>@Html.DisplayFor(model => invoice.DeliveryReceipt.CustomerOrderSlip.CustomerPoNo)</td>
                    <td>@Html.DisplayFor(model => invoice.DeliveryReceipt.CustomerOrderSlip.CustomerOrderSlipNo)</td>
                    <td>@Html.DisplayFor(model => invoice.Remarks)</td>
                    <td>@Html.DisplayFor(model => invoice.Product.ProductName)</td>
                    <td>@invoice.Quantity.ToString("N0")</td>
                    <td>@Html.DisplayFor(model => invoice.Product.ProductUnit)</td>
                    <td class="text-end">@invoice.UnitPrice.ToString(currencyFormat)</td>
                    <td class="text-end">@(freight?.ToString(currencyFormat) ?? "0.0000")</td>
                    <td class="text-end">@(invoice.DeliveryReceipt?.Freight.ToString(currencyFormat) ?? "0.0000")</td>
                    <td>@vatPerLiter.ToString(currencyFormat)</td>
                    <td>@vatAmount.ToString(currencyFormat)</td>
                    <td>@grossAmount.ToString(currencyFormat)</td>
                    <td>@invoice.AmountPaid.ToString(currencyFormat)</td>
                    <td class="text-end">@invoice.Balance.ToString(currencyFormat)</td>
                    <td>@ewtAmount.ToString(currencyFormat)</td>
                    <td>@isEwtAmountPaid.ToString(currencyFormat)</td>
                    <td>@ewtBalance.ToString(currencyFormat)</td>
                </tr>

                totalQuantity += invoice.Quantity;
                totalFreight += freight ?? 0m;
                totalFreightPerLiter += invoice.DeliveryReceipt?.Freight ?? 0m;
                totalVatPerLiter += vatPerLiter;
                totalVatAmount += vatAmount;
                totalGrossAmount += grossAmount;
                totalAmountPaid += invoice.AmountPaid;
                totalBalance += invoice.Balance;
                totalEwtAmount += ewtAmount;
                totalEwtAmountPaid += isEwtAmountPaid;
                totalewtBalance += ewtBalance;
            }
            <tr class="table-primary" style="border-top: double">
                <td></td>
                <td></td>
                <td></td>
                <td></td>
                <td></td>
                <td></td>
                <td></td>
                <td></td>
                <td></td>
                <td></td>
                <td></td>
                <td class="text-center"><b>TOTAL:</b></td>
                <td class="text-end">@totalQuantity.ToString("N0")</td>
                <td></td>
                <td class="text-end">
                    @{
                        var unitPrice = totalGrossAmount / totalQuantity;
                    }
                    @unitPrice.ToString(currencyFormat)
                </td>
                <td class="text-end">@totalFreight.ToString(currencyFormat)</td>
                <td class="text-end">@totalFreightPerLiter.ToString(currencyFormat)</td>
                <td class="text-end">@totalVatPerLiter.ToString(currencyFormat)</td>
                <td class="text-end">@totalVatAmount.ToString(currencyFormat)</td>
                <td class="text-end">@totalGrossAmount.ToString(currencyFormat)</td>
                <td class="text-end">@totalAmountPaid.ToString(currencyFormat)</td>
                <td class="text-end">@totalBalance.ToString(currencyFormat)</td>
                <td class="text-end">@totalEwtAmount.ToString(currencyFormat)</td>
                <td class="text-end">@totalEwtAmountPaid.ToString(currencyFormat)</td>
                <td class="text-end">@totalewtBalance.ToString(currencyFormat)</td>
            </tr>
            </tbody>
        </table>
    </div>
}
else
{
    <p><i>No data available in report.</i></p>
}

<div class="row mt-5">
    <div class="col-6 col-md-3">
        <a onclick="printTable()" class="btn btn-primary form-control buttons">Print</a>
    </div>
    <div class="col-6 col-md-3">
        <a asp-area="Filpride" asp-controller="Report" asp-action="ArPerCustomer" class="btn btn-outline-primary border form-control buttons">Back</a>
    </div>
</div>
@section Scripts {
    <script>
        function printTable() {
            window.print();
        }
    </script>
}