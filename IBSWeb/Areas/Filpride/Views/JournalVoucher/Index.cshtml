@model IEnumerable<JournalVoucherVM>
@using Microsoft.AspNetCore.Identity
@inject SignInManager<IdentityUser> SignInManager
@inject UserManager<IdentityUser> UserManager
@{
    ViewData["Title"] = "Journal Voucher";
    Layout = "~/Views/Shared/_Layout.cshtml";
}
<h1>Journal Voucher</h1>
<hr />
<p>
    <a asp-action="Create" class="btn btn-primary rounded-3"><i class="bi bi-plus-lg"></i> New</a>
</p>

<div class="table-responsive">
    <table class="table table-hover" id="myOwnTable">
        <thead>
            <tr>
                <th>
                    @Html.DisplayNameFor(model => model.Header.JournalVoucherHeaderNo)
                </th>
                <th>
                    @Html.DisplayNameFor(model => model.Header.Date)
                </th>
                <th>
                    @Html.DisplayNameFor(model => model.Header.CheckVoucherHeader.CheckVoucherHeaderNo)
                </th>
                <th>
                    @Html.DisplayNameFor(model => model.Header.CRNo)
                </th>
                <th>
                    @Html.DisplayNameFor(model => model.Header.JVReason)
                </th>
                <th style="width:25%"></th>
            </tr>
        </thead>
        <tbody>
            @foreach (var item in Model)
            {
                <tr>
                    <td>
                        @Html.DisplayFor(modelItem => item.Header.JournalVoucherHeaderNo)
                    </td>
                    <td>
                        @item.Header.Date.ToString("MM/dd/yyyy")
                    </td>
                    <td>
                        @Html.DisplayFor(modelItem => item.Header.CheckVoucherHeader.CheckVoucherHeaderNo)
                    </td>
                    <td>
                        @Html.DisplayFor(modelItem => item.Header.CRNo)
                    </td>
                    <td>
                        @Html.DisplayFor(modelItem => item.Header.JVReason)
                    </td>
                    <td>
                        @if (item.Header.CreatedBy == UserManager.GetUserName(User))
                        {
                            if (item.Header.PostedBy == null && item.Header.VoidedBy == null && item.Header.CanceledBy == null)
                            {
                                <a asp-action="Edit" asp-route-id="@item.Header.JournalVoucherHeaderId" class="btn btn-light">Edit</a>
                                <button type="button" class="btn btn-light" data-bs-toggle="modal" data-bs-target="#Preview-@item.Header.JournalVoucherHeaderId" data-bs-url="@Url.Action($"Preview/{item.Header.JournalVoucherHeaderId}")">
                                    Preview
                                </button>
                                @await Html.PartialAsync("_Preview", item)
                                <a class="btn btn-light" onclick="confirmPost(@item.Header.JournalVoucherHeaderId)">Post</a>
                                <a class="btn btn-light" onclick="confirmCancel(@item.Header.JournalVoucherHeaderId)">Cancel</a>
                            }
                            if (item.Header.PostedBy != null && item.Header.VoidedBy == null && item.Header.CanceledBy == null)
                            {
                                <a asp-action="Print" asp-route-id="@item.Header.JournalVoucherHeaderId" class="btn btn-light">Print</a>
                                <a class="btn btn-light" onclick="confirmVoid(@item.Header.JournalVoucherHeaderId)">Void</a>
                            }
                        }

                        @if (item.Header.VoidedBy != null)
                        {
                            <span class="badge rounded-pill bg-danger ">VOIDED</span>
                        }
                        else if (item.Header.CanceledBy != null)
                        {
                            <span class="badge rounded-pill bg-warning ">CANCELLED</span>
                        }
                        else
                        {
                            @if (item.Header.CreatedBy != UserManager.GetUserName(User))
                            {
                                <span class="badge rounded-pill bg-info ">VALID</span>
                            }
                        }
                    </td>
                </tr>
            }
        </tbody>
    </table>
</div>


@section Scripts {
    <script>
        function confirmPost(id) {
            Swal.fire({
                title: 'Are you sure?',
                text: "You won't be able to revert this!",
                icon: 'warning',
                showCancelButton: true,
                confirmButtonColor: '#3085d6',
                cancelButtonColor: '#d33',
                confirmButtonText: 'Post'
            }).then((result) => {
                if (result.isConfirmed) {
                    // Replace with the actual URL that you want to redirect to
                    var url = `/JournalVoucher/Post?id=${id}`;
                    window.location.href = url;
                }
            })
        }
    </script>
    <script>
        function confirmVoid(Id) {
            console.log(Id);
            Swal.fire({
                title: 'Are you sure?',
                text: "You won't be able to revert this!",
                icon: 'warning',
                showCancelButton: true,
                confirmButtonColor: '#3085d6',
                cancelButtonColor: '#d33',
                confirmButtonText: 'Yes'
            }).then((result) => {
                if (result.isConfirmed) {
                    // Replace with the actual URL that you want to redirect to
                    var url = `/JournalVoucher/Void?Id=${Id}`;
                    window.location.href = url;
                }
            })
        }
    </script>
    <script>
        function confirmCancel(Id) {
            console.log(Id);
            Swal.fire({
                title: "Please Input Remarks",
                html:
                    "<input id='cancellationRemarks' type='text' class='swal2-input' placeholder='Remarks'>",
                focusConfirm: false,
                allowEscapeKey: false,
                allowOutsideClick: false,
                icon: 'warning',
                showCancelButton: true,
                confirmButtonColor: '#3085d6',
                cancelButtonColor: '#d33',
                confirmButtonText: 'Yes'
            }).then((result) => {
                if (result.isConfirmed) {
                    var cancellationRemarks = $("#cancellationRemarks").val();
                    // Encode the cancellationRemarks to make it URL safe
                    var encodedRemarks = encodeURIComponent(cancellationRemarks);
                    // Append the encoded remarks as a parameter in the URL
                    var url = `/JournalVoucher/Cancel?Id=${Id}&cancellationRemarks=${encodedRemarks}`;
                    window.location.href = url;
                }
            })
        }
    </script>
}
