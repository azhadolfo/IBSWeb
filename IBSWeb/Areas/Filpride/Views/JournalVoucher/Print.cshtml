@using IBS.Models
@using IBS.Utility.Constants
@using IBS.Utility.Enums
@using IBS.Utility.Helpers
@using Microsoft.AspNetCore.Identity
@model JournalVoucherVM
@inject SignInManager<ApplicationUser> SignInManager
@inject UserManager<ApplicationUser> UserManager

@{
    ViewData["Title"] = "Journal Voucher";
    var totalDebit = 0m;
    var totalCredit = 0m;
        
    var selectedCompany = string.Empty;

    if (SignInManager.IsSignedIn(User))
    {
        selectedCompany = User.Claims.FirstOrDefault(c => c.Type == "Company")?.Value;
    }
}
<br />
<div class="text-end">
    @if (selectedCompany == "Filpride")
    {
        <img src="~/img/Filpride.jpg" height="" width="130px" />
    }
    @if (selectedCompany == "Mobility")
    {
        <img src="~/img/usa88-logo.png" height="" width="130px" />
    }
</div>
<div class="text-center">
    @if (selectedCompany == "Filpride")
    {
        <h2><u><b>&nbsp;FILPRIDE RESOURCES INC.&nbsp;</b></u></h2>
        <p style="line-height: 1; margin-top:-7px;">
            57 Westgate Office, Sampson Road, CBD, Subic Bay Freeport Zone,<br />
            Kalaklan, Olongapo City, 2200 Zambales, Philippines<br />
            VAT Reg. TIN: 000-216-589-00000
        </p>
    }
    @if (selectedCompany == "Mobility")
    {
        <h2><u><b>&nbsp;MOBILITY GROUP CORP.&nbsp;</b></u></h2>
        <p style="line-height: 1; margin-top:-7px;">
            Tower B Phoenix Sun Business Park Eulogio Rodriguez JR, ave.,<br />
            Bagumbayan Libis 1110 Quezon City NCR, Second District Philippines<br />
            VAT Reg. TIN: 776-536-510-00000
        </p>
    }
    <h3><span style="display: inline-block;"><b>JOURNAL VOUCHER</b></span></h3>
    <div class="text-end" style="margin-top:-60px;">
        <h6><b>No.&nbsp;@Html.DisplayFor(model => model.Header!.JournalVoucherHeaderNo)</b></h6>
    </div>
</div>

<div class="table-responsive" style="margin-top:50px;">
    <table class="w-100">
        <tbody>
            <tr>
                <td></td>
                <td></td>
                <td></td>
                <td class="w-25 text-end">Date : @Model.Header!.Date.ToString(SD.Date_Format)</td>
            </tr>
            <tr>
                <td>CATEGORY : </td>
                <td>
                    @if (Model.Header.CheckVoucherHeader != null)
                    {
                        @Html.DisplayFor(model => model.Header!.CheckVoucherHeader!.Category)
                    }
                </td>
                <td></td>
                <td></td>
            </tr>
            <tr>
                <td>REFERENCES</td>
                <td></td>
                <td></td>
                <td></td>
            </tr>
            <tr>
                <td>CV # :</td>
                <td>
                    @if (Model.Header.CheckVoucherHeader != null)
                    {
                        @Html.DisplayFor(model => model.Header!.CheckVoucherHeader!.CheckVoucherHeaderNo)
                    }
                </td>
                <td>CR # :</td>
                <td></td>
            </tr>
            <tr>
                <td>CHECK # :</td>
                <td>
                    @if (Model.Header.CheckVoucherHeader != null)
                    {
                        @Html.DisplayFor(model => model.Header!.CheckVoucherHeader!.CheckNo)
                    }
                </td>
                <td>AMOUNT :</td>
                <td>
                    @if (Model.Header.CheckVoucherHeader != null)
                    {
                        @Model.Header.CheckVoucherHeader.Total.ToString(SD.Two_Decimal_Format)
                    }
                </td>
            </tr>
            <tr>
                <td>CV DATE</td>
                <td>
                    @if (Model.Header.CheckVoucherHeader != null)
                    {
                        @Model.Header.CheckVoucherHeader.Date.ToString(SD.Date_Format)
                    }
                </td>
                <td>DATE :</td>
                <td>
                    @if (Model.Header.CheckVoucherHeader != null)
                    {
                        @Model.Header.CheckVoucherHeader.CheckDate?.ToString(SD.Date_Format)
                    }
                </td>
            </tr>
            <tr>
                <td>PAYEE</td>
                <td>
                    @if (Model.Header.CheckVoucherHeader != null)
                    {
                        @Html.DisplayFor(model => model.Header!.CheckVoucherHeader!.Payee)
                    }
                </td>
                <td>JV Reason :</td>
                <td>@Html.DisplayFor(model => model.Header!.JVReason)</td>
            </tr>

            <tr>
                <td>PARTICULARS:</td>
                <td><pre style="margin: 0; padding: 0">@Html.DisplayFor(model => model.Header!.Particulars)</pre></td>
                <td></td>
                <td></td>
            </tr>
        </tbody>
    </table>
</div>

<div class="table-responsive" style="margin-top:20px;">
    <table class="w-100">
        <thead>
            <tr style="border: 1px solid black;">
                <th colspan="4" style="padding-left:20px;">ACCOUNTING ENTRIES</th>
            </tr>
        </thead>
        <tbody>
            <tr>
                <td style="padding-left:20px;"><i>Account Name/Title</i></td>
                <th class="text-end">DEBIT</th>
                <th class="text-end">CREDIT</th>
            </tr>
            @foreach (var jvd in Model.Details!)
            {
                <tr>
                    <td style="width:60%; padding-left:20px;">@jvd.AccountNo&nbsp;@jvd.AccountName</td>
                    <td class="text-end" style="width:7%;">@jvd.Debit.ToString(SD.Two_Decimal_Format)</td>
                    <td class="text-end" style="width:7%;">@jvd.Credit.ToString(SD.Two_Decimal_Format)</td>
                </tr>
                totalDebit += jvd.Debit;
                totalCredit += jvd.Credit;
            }
            <tr style="border-bottom:double;"></tr>
            <tr>
                <th class="text-end">TOTAL</th>
                <th class="text-end">@totalDebit.ToString(SD.Two_Decimal_Format)</th>
                <th class="text-end">@totalCredit.ToString(SD.Two_Decimal_Format)</th>
            </tr>
        </tbody>
    </table>
</div>

<div class="table-responsive" style="margin-top:20px;">
    <table class="w-100">
        <tbody class="text-center">
            <tr>
                <td>Prepared by :</td>
                <td>Reviewed by </td>
                <td>Approved by </td>
            </tr>
            <tr>
                <td style="width:33%;">
                    <br />
                    <span class="underline" style="display: inline-block; width:60%;">&nbsp;</span> <br />
                </td>
                <td style="width:33%;">
                    <br />
                    <span class="underline" style="display: inline-block; width:60%;">&nbsp;</span> <br />
                </td>
                <td style="width:33%;">
                    <br />
                    <span class="underline" style="display: inline-block; width:60%;">&nbsp;</span> <br />
                </td>
            </tr>
        </tbody>
    </table>
</div>
<br />

@if (Model.Header.Type == nameof(DocumentType.Documented))
{
    <div class="text-center w-100" style="margin-top:20px;">
        <em><strong>"THIS DOCUMENT IS NOT VALID FOR CLAIM OF INPUT TAX"</strong></em><br/><br/>
        @if (selectedCompany == "Filpride")
        {
            <p>

                <span>Acknowledgement Certificate No:</span>
                <span style="display: inline-block; width:150px;"> @CS.ACCN </span>
                <span>&nbsp;&nbsp;Date Issued:</span>
                <span style="display: inline-block; width:50px;"> @CS.DateIssued </span><br/>
                Series: JV0000000001 - JV9999999999
                Date and Time Created:&nbsp; @Model.Header.CreatedDate
            </p>
        }
    </div>
    <br/>

    if (selectedCompany == "Filpride")
    {
        <div class="text-start w-100 footer" style="margin-top:50px;">
            <p style="line-height: 1;">
                <em>
                    <strong>Software Name :</strong> @CS.AAS
                    <br/>
                    <strong>Version :</strong> @CS.Version
                    <br/>
                    <strong>Printed By :</strong> @UserManager.GetUserName(User)!.ToUpper()
                    <br/>
                    <strong>Date & Time Printed :</strong> @DateTimeHelper.GetCurrentPhilippineTimeFormatted()
                </em>
            </p>
        </div>
    }

    if (!Model.Header.IsPrinted)
    {
        <div class="text-end">
            ORIGINAL COPY
        </div>
    }
    else
    {
        <div class="text-end">
            REPRINT COPY
        </div>
    }
}
<div class="row pt-2">
    @{
        if (Model.Header.PostedBy == null)
        {
            <div class="col-6 col-md-3">
                <a id="approveButton" class="btn btn-primary form-control buttons" onclick="confirmPost(@Model.Header.JournalVoucherHeaderId)">Post</a>
            </div>
        }
        else
        {
            <div class="col-6 col-md-3">
                <a onclick="confirmPrint(@Model.Header.JournalVoucherHeaderId)" class="btn btn-primary form-control buttons">Print</a>
            </div>
        }
    }

    <div class="col-6 col-md-3">
        <a asp-area="Filpride" asp-controller="JournalVoucher" asp-action="Index" class="btn btn-outline-primary border form-control buttons">Back to List</a>
    </div>
</div>

@section Scripts {
    <script>
        function confirmPost(id) {
            Swal.fire({
                title: 'Are you sure?',
                text: "You won't be able to revert this!",
                icon: 'warning',
                showCancelButton: true,
                confirmButtonColor: '#3085d6',
                cancelButtonColor: '#d33',
                confirmButtonText: 'Post'
            }).then((result) => {
                if (result.isConfirmed) {
                    // Replace with the actual URL that you want to redirect to
                    var url = `@Url.Action("Post", "JournalVoucher", new { area = "Filpride" })/${id}`;
                    window.location.href = url;
                }
            })
        }
    </script>
    @if (Model.Header.Type == nameof(DocumentType.Documented) && !Model.Header.IsPrinted)
    {
        <script>
        function confirmPrint(id) {
            Swal.fire({
                title: 'Are you sure?',
                text: "This will mark the document as reprinted and can't be undone.",
                icon: 'warning',
                showCancelButton: true,
                confirmButtonColor: '#3085d6',
                cancelButtonColor: '#d33',
                confirmButtonText: 'Yes'
            }).then((result) => {
                if (result.isConfirmed) {
                    const afterPrintHandler = () => {
                        window.removeEventListener('afterprint', afterPrintHandler);
                        var url = `@Url.Action("Printed", "JournalVoucher", new { area = "Filpride" })/${id}`;
                        window.location.href = url;
                    };

                    window.addEventListener('afterprint', afterPrintHandler);

                    // Close Swal before printing to avoid blank overlay
                    Swal.close();
                    setTimeout(() => {
                        window.print();
                    }, 200); // small delay to ensure Swal fully closes before print
                }
            });
        }
    </script>
    }
    else
    {
        <script>
        function confirmPrint(id) {
            // Call the print function
            window.print();
        }
        </script>
    }
    <script src="~/js/disable-dev-tools-in-print.js" asp-append-version="true"></script>
}