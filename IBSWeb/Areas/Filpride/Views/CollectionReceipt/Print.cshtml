@using System.Globalization
@using Humanizer
@using IBS.Models
@using IBS.Utility.Constants
@using IBS.Utility.Enums
@using IBS.Utility.Helpers
@using Microsoft.AspNetCore.Identity
@model FilprideCollectionReceipt
@inject SignInManager<ApplicationUser> SignInManager
@inject UserManager<ApplicationUser> UserManager

@{
    ViewData["Title"] = "Collection Receipt - Preview";
   
    var selectedCompany = string.Empty;

    if (SignInManager.IsSignedIn(User))
    {
        selectedCompany = User.Claims.FirstOrDefault(c => c.Type == "Company")?.Value;
    }

    var customerType = Model.SalesInvoice?.CustomerOrderSlip?.CustomerType ?? Model.ServiceInvoice?.Customer?.CustomerType ?? Model.Customer!.CustomerType;
    var customerName = Model.SalesInvoice?.CustomerOrderSlip?.CustomerName ?? Model.ServiceInvoice?.CustomerName ?? Model.Customer!.CustomerName;
    var customerAddress = Model.SalesInvoice?.CustomerOrderSlip?.CustomerAddress ?? Model.ServiceInvoice?.CustomerAddress ?? Model.Customer!.CustomerAddress;
    var customerTin = Model.SalesInvoice?.CustomerOrderSlip?.CustomerTin ?? Model.ServiceInvoice?.CustomerTin ?? Model.Customer!.CustomerTin;
    var customerBusinessStyle = Model.SalesInvoice?.CustomerOrderSlip?.BusinessStyle ?? Model.ServiceInvoice?.Customer!.BusinessStyle ?? Model.Customer!.BusinessStyle;
    var decimalFormat = customerType != nameof(CustomerType.Government) ? SD.Two_Decimal_Format : SD.Four_Decimal_Format;
}

<br />
<div class="text-end">
    @if (selectedCompany == "Filpride")
    {
        <img src="~/img/Filpride.jpg" height="" width="130px" alt=""/>
    }
    else if (selectedCompany == "Mobility")
    {
        <img src="~/img/usa88-logo.png" height="" width="130px" alt=""/>
    }
    else if (selectedCompany == "Bienes")
    {
        <img src="~/img/bienes.jpg" height="" width="100px" alt=""/>
    }
</div>
<div class="text-center">
    @if (selectedCompany == "Filpride")
    {
        <h2><u><b>&nbsp;FILPRIDE RESOURCES INC.&nbsp;</b></u></h2>
        <p style="line-height: 1; margin-top:-7px;">
            57 Westgate Office, Sampson Road, CBD, Subic Bay Freeport Zone,<br />
            Kalaklan, Olongapo City, 2200 Zambales, Philippines<br />
            VAT Reg. TIN: 000-216-589-00000
        </p>
    }
    @if (selectedCompany == "Mobility")
    {
        <h2><u><b>&nbsp;MOBILITY GROUP CORP.&nbsp;</b></u></h2>
        <p style="line-height: 1; margin-top:-7px;">
            Tower B Phoenix Sun Business Park Eulogio Rodriguez JR, ave.,<br />
            Bagumbayan Libis 1110 Quezon City NCR, Second District Philippines<br />
            VAT Reg. TIN: 776-536-510-00000
        </p>
    }
    else if (selectedCompany == "Bienes")
    {
        <h2><u><b>&nbsp;BIENES DE ORO&nbsp;</b></u></h2>
        <p style="line-height: 1; margin-top:-7px;">
            Tower B Phoenix Sun Business Park Eulogio Rodriguez JR, ave.,<br />
            Bagumbayan Libis 1110 Quezon City NCR, Second District Philippines<br />
            VAT Reg. TIN: 776-536-510-00000
        </p>
    }
</div>
<h3><span style="display: inline-block;"><b>COLLECTION RECEIPT</b></span></h3>
<div class="text-end" style="margin-top:-50px;">
    <h6><b>No.&nbsp;@Html.DisplayFor(model => model.CollectionReceiptNo)</b></h6>
</div>
<br />

<div class="w-100 text-end" style="margin-top:-20px; padding-bottom:10px;">
    <span><b>Date:</b></span>
    <span class="underline" style="display: inline-block; width: 20%; text-align:center;">@Model.TransactionDate.ToString(SD.Date_Format)</span><br />
</div>

<div>
    <table class="table-bordered w-100">
        <tbody>
            <tr>
                <td colspan="2" style="padding-left:10px;">
                    Received from: &nbsp;
                    @customerName.ToUpper()
                </td>
            </tr>
            <tr>
                <td colspan="2" class="w-50" style="padding-left:10px;">
                    Address: &nbsp;
                    @customerAddress.ToUpper()
                </td>
            </tr>
            <tr>
                <td style="padding-left:10px;">
                    TIN: &nbsp;
                    @customerTin
                </td>
                <td style="padding-left:10px;">
                    Buss. Style: &nbsp;
                    @customerBusinessStyle?.ToUpper()
                </td>
            </tr>
            @{
                decimal convertToWords = Model.Total;

                int integerPart = Convert.ToInt32(Math.Floor(convertToWords));
                decimal decimalPart = Math.Round((convertToWords - integerPart), 4);

                // Convert integer part to words
                string integerWords = integerPart.ToWords();
                integerWords = CultureInfo.CurrentCulture.TextInfo.ToTitleCase(integerWords.ToLower());

                // Convert and format cents value
                int cents = Convert.ToInt32(decimalPart * 100) % 100;
                string centsWords = cents.ToWords(); // Use ToWords instead of string formatting
                centsWords = CultureInfo.CurrentCulture.TextInfo.ToTitleCase(centsWords.ToLower());

                string upperCaseOne = integerWords;
                string upperCaseTwo = centsWords;

                // Combine words and formatting
                string words;

                if (cents > 0)
                {
                    // If there is a decimal part, include "And" before it
                    words = $"{upperCaseOne} Pesos and {upperCaseTwo} Centavos Only";
                }
                else
                {
                    // If there is no decimal part, exclude "And"
                    words = $"{upperCaseOne} Pesos Only";
                }

                // Capitalize first letters
                // words = System.Globalization.CultureInfo.CurrentCulture.TextInfo.ToTitleCase(words.ToLower());

                words = words.Replace(" And", "");
                words = words.Replace("-", " ");
            }
            <tr>
                <td colspan="2" style="padding-left:10px;">The sum of Pesos:<br /> @words</td>
            </tr>
            <tr>
                <td>&nbsp;</td>
                <td style="padding-left:10px;">(₱&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;  @Model.Total.ToString(decimalFormat))</td>
            </tr>
            <tr>
                <td colspan="2" style="padding-left:10px;">
                    IN FULL/PARTIAL payment of:
                    @if (Model.SalesInvoiceId != null)
                    {
                        @Html.DisplayFor(model => model.SalesInvoice!.SalesInvoiceNo)
                    }
                    else
                    {
                        @Html.DisplayFor(model => model.ServiceInvoice!.ServiceInvoiceNo)
                    }
                </td>
            </tr>
            <tr>
                <td colspan="2">&nbsp;</td>
            </tr>
            <tr>
                <td colspan="2" style="padding-left:10px;">Reference Receipt No.&nbsp; @Model.ReferenceNo.ToUpper()</td>
            </tr>
        </tbody>
    </table>
</div>
<div style="margin-top:10px;">
    <table class="table-bordered w-100">
        <tbody>
            <tr>
                <td class="text-center" style="width:33%">INVOICE DATE</td>
                <td class="text-center" style="width:33%">INVOICE #</td>
                <td class="text-center" style="width:33%">AMOUNT</td>
            </tr>
            <tr class="text-center">
                <td style="width:33%">
                    @if (Model.SalesInvoiceId != null)
                    {
                        @Model.SalesInvoice?.TransactionDate.ToString(SD.Date_Format)
                    }
                    else
                    {
                        @Model.ServiceInvoice?.CreatedDate.ToString(SD.Date_Format)
                    }
                </td>
                <td style="width:33%">
                    @if (Model.SalesInvoiceId != null)
                    {
                        @Html.DisplayFor(model => model.SalesInvoice!.SalesInvoiceNo)
                    }
                    else
                    {
                        @Html.DisplayFor(model => model.ServiceInvoice!.ServiceInvoiceNo)
                    }
                </td>
                <td style="width:33%">@Model.Total.ToString(decimalFormat)</td>
            </tr>
            <tr>
                <td style="width:33%">&nbsp;</td>
                <td style="width:33%"></td>
                <td style="width:33%"></td>
            </tr>
            <tr>
                <td style="width:33%">&nbsp;</td>
                <td style="width:33%"></td>
                <td style="width:33%"></td>
            </tr>
            <tr>
                <td style="width:33%">&nbsp;</td>
                <td style="width:33%"></td>
                <td style="width:33%"></td>
            </tr>
            <tr>
                <td style="width:33%">&nbsp;</td>
                <td style="width:33%"></td>
                <td style="width:33%"></td>
            </tr>
        </tbody>
    </table>
</div>

<div style="margin-top:10px;">
    <table class="table-bordered w-100">
        <tbody>
            <tr>
                <td colspan="6" style="padding-left:20px;">FORM OF PAYMENT</td>
            </tr>
            <tr>
                <td class="text-center" style="width:25%"></td>
                <td class="text-center" style="width:15%">DATE</td>
                <td class="text-center" style="width:15%">CHK #</td>
                <td class="text-center" style="width:15%">BANK</td>
                <td class="text-center" style="width:15%">BRANCH</td>
                <td class="text-center" style="width:15%">AMOUNT</td>
            </tr>

            <tr>
                <td style="padding-left:20px;">Cash</td>
                <td class="text-center"></td>
                <td class="text-center"></td>
                <td class="text-center"></td>
                <td class="text-center"></td>
                <td class="text-center">
                    @if (Model.CashAmount > 0)
                    {
                        <p style="height: 9px;">@Model.CashAmount.ToString(decimalFormat)</p>
                    }
                    else
                    {
                        <p></p>
                    }
                </td>
            </tr>

            <tr>
                <td style="padding-left:20px;">Check</td>
                <td class="text-center">
                    @if (Model.CheckDate != null )
                    {
                        <p style="height: 9px;">@Model.CheckDate</p>
                    }
                    else
                    {
                        <p></p>
                    }
                </td>
                <td class="text-center">
                    @if (Model.CheckNo != null)
                    {
                        <p style="height: 9px;">@Html.DisplayFor(model => model.CheckNo)</p>
                    }
                    else
                    {
                        <p></p>
                    }
                </td>
                <td class="text-center">
                    @if (Model.BankId != null)
                    {
                        <p>@Model.BankAccountName @Model.BankAccountNumber</p>
                    }
                    else
                    {
                        <p></p>
                    }
                </td>
                <td class="text-center">
                    @if (Model.CheckBranch != null)
                    {
                        <p style="height: 9px;">@Html.DisplayFor(model => model.CheckBranch)</p>
                    }
                    else
                    {
                        <p></p>
                    }
                </td>
                <td class="text-center">
                    @if (Model.CheckAmount > 0)
                    {
                        <p style="height: 9px;">@Model.CheckAmount.ToString(decimalFormat)</p>
                    }
                    else
                    {
                        <p></p>
                    }
                </td>
            </tr>

            <tr>
                <td style="padding-left:20px;">EWT</td>
                <td class="text-center"></td>
                <td class="text-center"></td>
                <td class="text-center"></td>
                <td class="text-center"></td>
                <td class="text-center">
                    @if (Model.EWT != 0)
                    {
                        <p style="height: 9px;">@Model.EWT.ToString(decimalFormat)</p>
                    }
                    else
                    {
                        <p></p>
                    }
                </td>
            </tr>
            <tr>
                <td style="padding-left:20px;">WVAT</td>
                <td class="text-center"></td>
                <td class="text-center"></td>
                <td class="text-center"></td>
                <td class="text-center"></td>
                <td class="text-center">
                    @if (Model.WVAT != 0)
                    {
                        <p style="height: 9px;">@Model.WVAT.ToString(decimalFormat)</p>
                    }
                    else
                    {
                        <p></p>
                    }
                </td>
            </tr>
            <tr>
                <td style="padding-left:20px;">TOTAL</td>
                <td class="text-center"></td>
                <td class="text-center"></td>
                <td class="text-center"></td>
                <td class="text-center"></td>
                <td class="text-center">
                    @if (Model.Total != 0)
                    {
                        <p style="height: 9px;">@Model.Total.ToString(decimalFormat)</p>
                    }
                    else
                    {
                        <p></p>
                    }
                </td>
            </tr>
        </tbody>
    </table>
</div>

@if (Model.Type == nameof(DocumentType.Documented))
{
    <div class="text-center w-100" style="margin-top:10px;">
        <em class="p-4"><strong>"THIS DOCUMENT IS NOT VALID FOR CLAIM OF INPUT TAX"</strong><br/></em>
        @if (selectedCompany == "Filpride")
        {
            <p>
                <span>Acknowledgement Certificate No:</span>
                <span style="display: inline-block; width:150px;"> @CS.ACCN </span>
                <span>&nbsp;&nbsp;Date Issued:</span>
                <span style="display: inline-block; width:50px;"> @CS.DateIssued </span><br/>
                Series: CR0000000001 - CR9999999999
                Date and Time Created:&nbsp;@DateTimeHelper.GetCurrentPhilippineTimeFormatted(Model.CreatedDate)
            </p>
        }
    </div>

    if (selectedCompany == "Filpride")
    {
        <br/>
        <div class="text-start footer" style="margin-top:20px;">
            <p style="line-height: 1;">
                <em>
                    <strong>Software Name :</strong> @CS.AAS
                    <br/>
                    <strong>Version :</strong> @CS.Version
                    <br/>
                    <strong>Printed By :</strong> @UserManager.GetUserName(User)!.ToUpper()
                    <br/>
                    <strong>Date & Time Printed :</strong> @DateTimeHelper.GetCurrentPhilippineTimeFormatted()
                </em>
            </p>
        </div>
    }

    @if (!Model.IsPrinted)
    {
        <div class="text-end">
            ORIGINAL COPY
        </div>
    }
    else
    {
        <div class="text-end">
            REPRINT COPY
        </div>
    }
}

<div class="row pt-2">
    @{
        if (Model.PostedBy == null)
        {
            <div class="col-6 col-md-3">
                <a id="approveButton" class="btn btn-primary form-control buttons" onclick="confirmPost(@Model.CollectionReceiptId)">Post</a>
            </div>
        }
        else
        {
            <div class="col-6 col-md-3">
                <a onclick="confirmPrint(@Model.CollectionReceiptId)" class="btn btn-primary form-control buttons">Print</a>
            </div>
        }
    }

    <div class="col-6 col-md-3">
        @if (Model.SVNo != null)
        {
            <a asp-area="Filpride" asp-controller="CollectionReceipt" asp-action="ServiceInvoiceIndex" class="btn btn-outline-primary border form-control buttons">Back to List</a>
        }
        else
        {
            <a asp-area="Filpride" asp-controller="CollectionReceipt" asp-action="Index" class="btn btn-outline-primary border form-control buttons">Back to List</a>
        }
    </div>
</div>

@section Scripts {
    <script>
        function confirmPost(id) {
            Swal.fire({
                title: 'Are you sure?',
                text: "You won't be able to revert this!",
                icon: 'warning',
                showCancelButton: true,
                confirmButtonColor: '#3085d6',
                cancelButtonColor: '#d33',
                confirmButtonText: 'Yes'
            }).then((result) => {
                if (result.isConfirmed) {
                    // Replace with the actual URL that you want to redirect to
                    var url = `@Url.Action("Post", "CollectionReceipt", new { area = "Filpride" })/${id}`;
                    window.location.href = url;
                }
            })
        }
    </script>
    @if (Model.Type == nameof(DocumentType.Documented) && !Model.IsPrinted)
    {
        <script>
        function confirmPrint(id) {
            Swal.fire({
                title: 'Are you sure?',
                text: "This will mark the document as reprinted and can't be undone.",
                icon: 'warning',
                showCancelButton: true,
                confirmButtonColor: '#3085d6',
                cancelButtonColor: '#d33',
                confirmButtonText: 'Yes'
            }).then((result) => {
                if (result.isConfirmed) {
                    const afterPrintHandler = () => {
                        window.removeEventListener('afterprint', afterPrintHandler);
                        var url = `@Url.Action("Printed", "CollectionReceipt", new { area = "Filpride" })/${id}`;
                        window.location.href = url;
                    };

                    window.addEventListener('afterprint', afterPrintHandler);

                    // Close Swal before printing to avoid blank overlay
                    Swal.close();
                    setTimeout(() => {
                        window.print();
                    }, 200); // small delay to ensure Swal fully closes before print
                }
            });
        }
    </script>
    }
    else
    {
        <script>
        function confirmPrint(id) {
            // Call the print function
            window.print();
        }
        </script>
    }
    <script src="~/js/disable-dev-tools-in-print.js" asp-append-version="true"></script>
}