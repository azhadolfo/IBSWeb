@model CollectionReceiptMultipleSiViewModel

@{
ViewData["Title"] = "Edit Multiple Collection For Sales";
Layout = "~/Views/Shared/_Layout.cshtml";
}

<link rel="stylesheet" href="~/css/form-style.css">

<div class="loader-container">
    <div class="loader"></div>
    <div class="loader-text">Loading...</div>
</div>
<div class="card shadow border-0 mt-4">
    <div class="card-header bg-secondary bg-gradient ml-0 py-3">
        <div class="row">
            <div class="col-12 text-center">
                <h2 class="text-white py-2">Edit Multiple Collection For Sales</h2>
            </div>
        </div>
    </div>
    <div class="card-body p-4">
        <form method="post" enctype="multipart/form-data">
            @Html.AntiForgeryToken()
            <input type="hidden" asp-for="CollectionReceiptId" />
            <div class="row">
                <div class="col-md-4">
                    <div asp-validation-summary="ModelOnly" class="text-danger"></div>
                    <div class="form-group mb-3">
                        <label class="control-label">Customers<span class="required">*</span></label>
                        <select asp-for="CustomerId" asp-items="@Model.Customers" class="form-select js-select2" style="width:100%" required>
                            <option></option>
                        </select>
                        <span asp-validation-for="CustomerId" class="text-danger"></span>
                    </div>
                    <div class="form-group mb-3">
                        <label asp-for="TransactionDate" class="control-label">Transaction Date<span class="required">*</span></label>
                        <input asp-for="TransactionDate" type="Date" class="form-control" />
                        <span asp-validation-for="TransactionDate" class="text-danger"></span>
                    </div>
                    <div class="form-floating mb-3">
                        <input asp-for="ReferenceNo" id="floatingInput" type="text" class="form-control" placeholder="Reference #" />
                        <label for="floatingInput" class="control-label">Reference# (Manual CR#)<span class="required">*</span></label>
                        <span asp-validation-for="ReferenceNo" class="text-danger"></span>
                    </div>
                    <div class="form-floating mb-3">
                        <input asp-for="Remarks" id="floatingInput" type="text" class="form-control" placeholder="Optional" />
                        <label for="floatingInput" class="control-label">Remarks</label>
                        <span asp-validation-for="Remarks" class="text-danger"></span>
                    </div>
                    <div class="form-group mb-3">
                        <label class="control-label">SI NO.<span class="required">*</span></label>
                        <select asp-for="MultipleSIId" id="invoices" asp-items="@Model.SalesInvoices" class="form-select js-multiple siNo" multiple="multiple" style="width:100%">
                            <option></option>
                        </select>
                        <span asp-validation-for="MultipleSIId" class="text-danger"></span>
                    </div>
                    <table class="table">
                        <thead>
                        <tr>
                            <th class="w-100">SI List</th>
                            <th class="w-20">Amount</th>
                        </tr>
                        </thead>
                        <tbody class="siList">
                        </tbody>
                    </table>
                </div>

                <div class="col-8">
                    <div class="row mb-3">
                        <table style="border:dotted 1px;">
                            <thead class="m-2">
                            <tr>
                                <th colspan="6" class="text-center py-4">Invoice Details</th>
                            </tr>
                            </thead>
                            <tbody>
                            <tr>
                                <th style="width:14%; padding-left:20px;">SI No's</th>
                                <th class="text-end" style="width:14%;">Invoice Amount</th>
                                <th class="text-end" style="width:14%;">WVat</th>
                                <th class="text-end" style="width:14%;">EWT</th>
                                <th class="text-end" style="width:14%; padding-left:20px;">Less EWT/WVat</th>
                                <th class="text-end" style="width:14%;">Amount Paid</th>
                                <th class="text-end" style="width:14%; padding-right:20px;">Balance</th>
                            </tr>
                            </tbody>
                            <tbody class="siAmount">
                            </tbody>
                            <tbody>
                            <tr style="border-bottom:double;">
                                <td class="pt-1"></td>
                            </tr>
                            <tr>
                                <td class="text-end fw-bold p-3">Grand Total:</td>
                                <td class="text-end" id="grandTotalRRAmount">0.000</td>
                                <td class="text-end" id="grandTotalVatAmount">0.000</td>
                                <td class="text-end" id="grandTotalEWTAmount">0.000</td>
                                <td class="text-end" id="grandTotalNetOfEWT" style="padding-left:20px;">0.000</td>
                                <td class="text-end" id="grandTotalAmountPaid">0.000</td>
                                <td class="text-end" id="grandTotalBalance" style="padding-right:20px;">0.000</td>
                            </tr>
                            </tbody>
                        </table>
                    </div>
                </div>

                <table class="table-bordered w-100">
                    <tbody>
                    <tr>
                        <td colspan="6" style="padding-left:20px;">FORM OF PAYMENT<span class="required">*</span></td>
                    </tr>
                    <tr>
                        <td class="text-center" style="width:25%"></td>
                        <td class="text-center" style="width:15%">DATE</td>
                        <td class="text-center" style="width:15%">CHK #</td>
                        <td class="text-center" style="width:15%">BANK</td>
                        <td class="text-center" style="width:15%">BRANCH</td>
                        <td class="text-center" style="width:15%">AMOUNT</td>
                    </tr>

                    <tr>
                        <td style="padding-left:20px;">Cash</td>
                        <td><input style="border:none" class="form-control" disabled /></td>
                        <td><input style="border:none" class="form-control" disabled /></td>
                        <td><input style="border:none" class="form-control" disabled /></td>
                        <td><input style="border:none" class="form-control" disabled /></td>
                        <td><input asp-for="CashAmount" style="border:none" class="form-control moneyInput" /></td>
                    </tr>

                    <tr>
                        <td style="padding-left:20px;">Check</td>
                        <td><input asp-for="CheckDate" type="date" style="border:none" class="form-control" /></td>
                        <td><input asp-for="CheckNo" style="border:none" class="form-control" /></td>
                        <td>
                            <select asp-for="BankId" asp-items="@Model.BankAccounts"
                                    class="form-select js-select2">
                                <option></option>
                            </select>
                        </td>
                        <td><input asp-for="CheckBranch" style="border:none" class="form-control" /></td>
                        <td><input asp-for="CheckAmount" style="border:none" class="form-control moneyInput" /></td>
                    </tr>

                    <tr>
                        <td style="padding-left:20px;">EWT</td>
                        <td><input style="border:none" class="form-control" disabled /></td>
                        <td><input style="border:none" class="form-control" disabled /></td>
                        <td><input style="border:none" class="form-control" disabled /></td>
                        <td><input style="border:none" class="form-control" disabled /></td>
                        <td><input asp-for="EWT" style="border:none" class="form-control moneyInput" /></td>
                    </tr>
                    <tr>
                        <td style="padding-left:20px;">WVAT</td>
                        <td><input style="border:none" class="form-control" disabled /></td>
                        <td><input style="border:none" class="form-control" disabled /></td>
                        <td><input style="border:none" class="form-control" disabled /></td>
                        <td><input style="border:none" class="form-control" disabled /></td>
                        <td><input asp-for="WVAT" style="border:none" class="form-control moneyInput" /></td>
                    </tr>
                    </tbody>
                </table>

                <div class="form-group my-3">
                    <label class="form-label fst-italic">If applicable, upload the certificate.</label>
                    <div class="mb-3">
                        <label asp-for="Bir2306" class="form-label">BIR 2306 Form @(!Model.HasAlready2306 ? "" : "(Replace existing file)")</label>
                        <input class="form-control form-control-sm w-25" asp-for="Bir2306" type="file">
                    </div>
                    <div class="mb-3">
                        <label asp-for="Bir2307" class="form-label">BIR 2307 Form @(!Model.HasAlready2307 ? "" : "(Replace existing file)")</label>
                        <input class="form-control form-control-sm w-25" asp-for="Bir2307" type="file">
                    </div>
                </div>

                <br />
                <div class="row pt-2">
                    <div class="col-6 col-md-3">
                        <button type="submit" class="btn btn-primary form-control">Update</button>
                    </div>
                    <div class="col-6 col-md-3">
                        <a asp-area="Filpride" asp-controller="CollectionReceipt" asp-action="Index" class="btn btn-outline-primary border form-control">Back to List</a>
                    </div>
                </div>
            </div>
        </form>
    </div>
</div>

<!-- Modal -->
<div class="modal fade" id="AddAccEntry" tabindex="-1" aria-labelledby="AddAccEntryLabel" aria-hidden="true">
    <div class="modal-dialog">
        <div class="modal-content">
            <div class="modal-header">
                <h1 class="modal-title fs-5" id="AddAccEntryLabel">Add Accounting Entry</h1>
                <button type="button" class="btn-close" data-bs-dismiss="modal" aria-label="Close"></button>
            </div>
            <div class="modal-body">
                <form>
                    <div asp-validation-summary="ModelOnly" class="text-danger"></div>
                    <div class="form-group">
                        <label class="control-label">Account Title</label>
                        <select id="AccountTitle" asp-items="@Model.ChartOfAccounts" class="form-select" style="width: 100%">
                            <option></option>
                        </select>
                        <span class="text-danger"></span>
                    </div>
                    <div class="form-group pt-4">
                        <label class="control-label">Amount</label>
                        <input id="AccountAmount" class="form-control moneyInput" value="" placeholder="0.000" />
                        <span class="text-danger"></span>
                    </div>
                </form>
            </div>
            <div class="modal-footer">
                <button type="button" class="btn btn-secondary" data-bs-dismiss="modal">Close</button>
                <button type="button" class="btn btn-primary" onclick="saveAccountingEntry()">Create</button>
            </div>
        </div>
    </div>
</div>

@section Scripts {
@{
await Html.RenderPartialAsync("_ValidationScriptsPartial");
}

<script>
    // Store existing selected invoices for edit mode
    var existingSelectedInvoices = @Html.Raw(Json.Serialize(Model.MultipleSIId));
    var existingSIAmounts = @Html.Raw(Json.Serialize(Model.SIMultipleAmount));
</script>

<script>
    $(document).ready(function () {
        // Initialize customer change handler
        $("#CustomerId").change(function () {
            var customerNo = $(this).val();

            $.ajax({
                url: '@Url.Action("GetSalesInvoices", "CollectionReceipt", new { area = "Filpride" })',
                type: "GET",
                data: { customerNo: customerNo },
                success: function (data) {
                    $("#invoices").empty();

                    if (Array.isArray(data) && data.length > 0) {
                        $("#invoices").append('<option>');

                        $.each(data, function (index, item) {
                            $("#invoices").append($('<option>', {
                                value: item.value,
                                text: item.text
                            }));
                        });

                        // Re-select existing invoices after populating options
                        if (existingSelectedInvoices && existingSelectedInvoices.length > 0) {
                            $("#invoices").val(existingSelectedInvoices).trigger('change');
                        }
                    } else {
                        console.log("No sales invoices found for the selected customer.");
                    }
                }
            });
        });

        // Trigger customer change on page load to populate invoices
        if ($("#CustomerId").val()) {
            $("#CustomerId").trigger('change');
        }
    });
</script>

<script>
    function saveAccountingEntry() {
        var accountTitle = $("#AccountTitle").val();
        var accountTitleText = $("#AccountTitle option:selected").text();
        var accountAmount = parseNumber($("#AccountAmount").val());

        if (accountAmount === 0) {
            event.preventDefault();
            alert('Please input amount');
            return;
        } else if (accountTitleText === "") {
            event.preventDefault();
            alert('Please select Account No.!');
            return;
        }

        var formattedAmount = formatNumber(accountAmount);

        var newRow = `<tr>
                                <td>
                                    <input type='hidden' name='accountTitle' value='${accountTitle}' />
                                    <input type='text' name='accountTitleText' value='${accountTitleText}' style='border:none' readonly />
                                </td>
                                <td><input type='text' name='accountAmount' value='${formattedAmount}' style='border:none' readonly /></td>
                                <td><button type='button' class='btn btn-danger btn-sm' onclick='removeRow(this)'>Remove</button></td>
                             </tr>`;

        $("#accountingEntriesBody").append(newRow);
        $("#AddAccEntry").modal("hide");
        $("#AccountTitle").val("");
        $("#AccountTitle").trigger("change");
        $("#AccountAmount").val("");
    }

    function removeRow(button) {
        $(button).closest("tr").remove();
    }
</script>

<script>
    $(document).ready(function () {
        const $invoices = $("#invoices");
        const $siList = $(".siList");
        const $siAmount = $(".siAmount");

        $invoices.change(function () {
            const selectedInvoices = $invoices.val() || [];
            $siList.empty();
            $siAmount.empty();

            selectedInvoices.forEach(siNo => {
                const siText = $invoices.find(`option[value='${siNo}']`).text();

                appendSIListRow(siNo, siText);
                appendSIAmountRow(siNo, siText);

                if (siNo) {
                    fetchInvoiceBalance(siNo);
                }
            });

            calculateGrandTotalRRAmount();
        });

        function appendSIListRow(siNo, siText) {
            // Get existing amount if available
            var existingAmount = existingSIAmounts[siNo] || '';

            $siList.append(`
                    <tr>
                        <td>
                            <input type='hidden' value='${siNo}' />
                            <input type='text' value='${siText}' style='border:none' readonly />
                        </td>
                        <td><input type='text' name='SIMultipleAmount' class='inputAmount money paymentAmount_${siNo}' value='${existingAmount}'/></td>
                    </tr>`);
        }

        function appendSIAmountRow(siNo, siText) {
            $siAmount.append(`
                    <tr id='row_${siNo}'>
                        <td style='padding-left:20px;'>
                            <input type='hidden' value='${siNo}' />
                            <input type='text' value='${siText}' style='border:none' readonly />
                        </td>
                        <td class="text-end" id='amount_${siNo}'>0.00</td>
                        <td class="text-end" id='vatAmount_${siNo}'>0.00</td>
                        <td class="text-end" id='ewtAmount_${siNo}'>0.00</td>
                        <td class="text-end" id='siAmountNetOfEWT_${siNo}' style="padding-left:20px;">0.00</td>
                        <td class="text-end" id='amountPaid_${siNo}'>0.00</td>
                        <td class="text-end" id='balance_${siNo}' style="padding-right:20px;">0.00</td>
                    </tr>`);
        }

        function fetchInvoiceBalance(siNo) {
            $.ajax({
                url: '@Url.Action("MultipleInvoiceBalance", "CollectionReceipt", new { area = "Filpride" })',
                method: "GET",
                data: { siNo },
                success: function (data) {
                    if (!data) return;

                    const gross = data.amount;
                    const netAmount = gross / 1.12;
                    const vatAmount = data.wvatAmount;
                    const ewtAmount = data.ewtAmount;
                    const netOfEWT = gross - (vatAmount + ewtAmount);
                    const amountPaid = data.amountPaid;
                    const balance = data.balance;

                    $(`#amount_${siNo}`).text(formatNumber(gross));
                    $(`#netAmount_${siNo}`).text(formatNumber(netAmount));
                    $(`#vatAmount_${siNo}`).text(formatNumber(vatAmount));
                    $(`#ewtAmount_${siNo}`).text(formatNumber(ewtAmount));
                    $(`#siAmountNetOfEWT_${siNo}`).text(formatNumber(netOfEWT));
                    $(`#amountPaid_${siNo}`).text(formatNumber(amountPaid));
                    $(`#balance_${siNo}`).text(formatNumber(balance));

                    // Only set balance if no existing amount
                    if (!existingSIAmounts[siNo]) {
                        $(`.paymentAmount_${siNo}`).val(formatNumber(balance));
                    }

                    calculateGrandTotalRRAmount();
                },
                error: function (xhr, status, error) {
                    console.error('Error fetching balance:', error);
                }
            });
        }

        function calculateGrandTotalRRAmount() {
            let grandTotalRRAmount = 0,
                grandTotalNetAmount = 0,
                grandTotalVatAmount = 0,
                grandTotalEWTAmount = 0,
                grandTotalNetOfEWT = 0,
                grandTotalAmountPaid = 0,
                grandTotalBalance = 0;

            $(".siAmount tr").each(function () {
                const $row = $(this);

                grandTotalRRAmount += parseNumber($row.find("[id^='amount_']").text());
                grandTotalNetAmount += parseNumber($row.find("[id^='netAmount_']").text());
                grandTotalVatAmount += parseNumber($row.find("[id^='vatAmount_']").text());
                grandTotalEWTAmount += parseNumber($row.find("[id^='ewtAmount_']").text());
                grandTotalNetOfEWT += parseNumber($row.find("[id^='siAmountNetOfEWT_']").text());
                grandTotalAmountPaid += parseNumber($row.find("[id^='amountPaid_']").text());
                grandTotalBalance += parseNumber($row.find("[id^='balance_']").text());
            });

            $("#grandTotalRRAmount").text(formatNumber(grandTotalRRAmount));
            $("#grandTotalNetAmount").text(formatNumber(grandTotalNetAmount));
            $("#grandTotalVatAmount").text(formatNumber(grandTotalVatAmount));
            $("#grandTotalEWTAmount").text(formatNumber(grandTotalEWTAmount));
            $("#grandTotalNetOfEWT").text(formatNumber(grandTotalNetOfEWT));
            $("#grandTotalAmountPaid").text(formatNumber(grandTotalAmountPaid));
            $("#grandTotalBalance").text(formatNumber(grandTotalBalance));
        }
    });
</script>

<script>
    $('#AccountTitle').select2({
        dropdownParent: $('#AddAccEntry')
    });
</script>
}