@model CollectionReceiptServiceViewModel

@{
    ViewData["Title"] = "Collection Receipt for Service Invoice - Edit";
}

<style>
    .table-bordered tbody tr:last-child,
    .table-bordered tbody tr:last-child td {
        border-left: none !important;
        border-right: none !important;
        border-bottom: none !important;
    }
    .table-bordered tbody tr:last-child,
    .table-bordered tbody tr:last-child td {
        border-bottom: none !important;
    }
</style>

<link rel="stylesheet" href="~/css/form-style.css">

<div class="loader-container">
    <div class="loader"></div>
    <div class="loader-text">Loading...</div>
</div>
<div class="card shadow border-0 mt-4">
    <div class="card-header bg-secondary bg-gradient ml-0 py-3">
        <div class="row">
            <div class="col-12 text-center">
                <h2 class="text-white py-2">@ViewData["Title"]</h2>
            </div>
        </div>
    </div>
    <div class="card-body p-4">
        <form id="myForm" method="post" enctype="multipart/form-data">
            @Html.AntiForgeryToken()
            <div class="row mb-2">
                <div class="col-12 col-md-8">
                    <div asp-validation-summary="ModelOnly" class="text-danger"></div>
                    <input type="hidden" asp-for="CollectionReceiptId" />
                    <div class="form-group mb-3">
                        <label class="control-label">Customers</label>
                        <select asp-for="CustomerId" asp-items="@Model.Customers" class="form-select js-select2" style="width:100%" required>
                            <option></option>
                        </select>
                        <span asp-validation-for="CustomerId" class="text-danger"></span>
                    </div>

                    <div class="form-group mb-3">
                        <label class="control-label">SV NO.</label>
                        <select asp-for="ServiceInvoiceId" id="serviceInvoice" asp-items="@Model.ServiceInvoices" class="form-select js-select2" style="width:100%">
                            <option></option>
                        </select>
                        <span asp-validation-for="ServiceInvoiceId" class="text-danger"></span>
                    </div>

                    <div class="form-group mb-3">
                        <label asp-for="TransactionDate" class="control-label">Transaction Date</label>
                        <input asp-for="TransactionDate"
                               type="Date"
                               class="form-control"
                               min="@Model.MinDate.ToString("yyyy-MM-dd")"/>
                        <span asp-validation-for="TransactionDate" class="text-danger"></span>
                    </div>
                    <div class="form-floating mb-3">
                        <input asp-for="ReferenceNo" id="floatingInput" type="text" class="form-control" placeholder="Reference #" required />
                        <label for="floatingInput" class="control-label">Reference #</label>
                        <span asp-validation-for="ReferenceNo" class="text-danger"></span>
                    </div>
                    <div class="form-floating mb-3">
                        <input asp-for="Remarks" id="floatingInput" type="text" class="form-control" placeholder="Optional" />
                        <label for="floatingInput" class="control-label">Remarks</label>
                        <span asp-validation-for="Remarks" class="text-danger"></span>
                    </div>
                </div>

                <div class="col-12 col-md-4 p-3" style="border:dotted 1px;">
            <pre>
            <b>Invoice Details</b>

Invoice Amount: <span id="amount"></span>
EWT:            <span id="ewt"></span>
WVAT:           <span id="wvat"></span>
==================================
Less EWT/WVAT:  <span id="total"></span>
==================================
Amount Paid:    <span id="amountPaid"></span>
Balance:        <span id="balance"></span>
           </pre>
                </div>
            </div>
            <table class="table-bordered w-100">
                <tbody>
                    <tr>
                        <td colspan="6" style="padding-left:20px;">FORM OF PAYMENT</td>
                    </tr>
                    <tr>
                        <td class="text-center" style="width:25%"></td>
                        <td class="text-center" style="width:15%">DATE</td>
                        <td class="text-center" style="width:15%">CHK #</td>
                        <td class="text-center" style="width:15%">BANK</td>
                        <td class="text-center" style="width:15%">BRANCH</td>
                        <td class="text-center" style="width:15%">AMOUNT</td>
                    </tr>

                    <tr>
                        <td style="padding-left:20px;">Cash</td>
                        <td><input style="border:none" class="form-control" disabled /></td>
                        <td><input style="border:none" class="form-control" disabled /></td>
                        <td><input style="border:none" class="form-control" disabled /></td>
                        <td><input style="border:none" class="form-control" disabled /></td>
                        <td><input asp-for="CashAmount" style="border:none" class="form-control moneyInput" /></td>
                    </tr>

                    <tr>
                        <td style="padding-left:20px;">Check</td>
                        <td><input asp-for="CheckDate" type="date" style="border:none" class="form-control" /></td>
                        <td><input asp-for="CheckNo" style="border:none" class="form-control" /></td>
                        <td><input asp-for="CheckBank" style="border:none" class="form-control" /></td>
                        <td><input asp-for="CheckBranch" style="border:none" class="form-control" /></td>
                        <td><input asp-for="CheckAmount" style="border:none" class="form-control moneyInput" /></td>
                    </tr>

                    <tr>
                        <td style="padding-left:20px;">Manager's Check</td>
                        <td><input asp-for="ManagersCheckDate" type="date" style="border:none" class="form-control"/></td>
                        <td><input asp-for="ManagersCheckNo" style="border:none" class="form-control"/></td>
                        <td><input asp-for="ManagersCheckBank" style="border:none" class="form-control"/></td>
                        <td><input asp-for="ManagersCheckBranch" style="border:none" class="form-control"/></td>
                        <td><input asp-for="ManagersCheckAmount" style="border:none" class="form-control moneyInput"/></td>
                    </tr>

                    <tr>
                        <td style="padding-left:20px;">EWT</td>
                        <td><input style="border:none" class="form-control" disabled /></td>
                        <td><input style="border:none" class="form-control" disabled /></td>
                        <td><input style="border:none" class="form-control" disabled /></td>
                        <td><input style="border:none" class="form-control" disabled /></td>
                        <td><input asp-for="EWT" style="border:none" class="form-control moneyInput" /></td>
                    </tr>
                    <tr>
                        <td style="padding-left:20px;">WVAT</td>
                        <td><input style="border:none" class="form-control" disabled /></td>
                        <td><input style="border:none" class="form-control" disabled /></td>
                        <td><input style="border:none" class="form-control" disabled /></td>
                        <td><input style="border:none" class="form-control" disabled /></td>
                        <td><input asp-for="WVAT" style="border:none" class="form-control moneyInput" /></td>
                    </tr>
                    <tr>
                        <td></td>
                        <td></td>
                        <td></td>
                        <td></td>
                        <td style="padding-left:20px; padding-top: 5px; padding-bottom: 5px;">TOTAL: </td>
                        <td id="checkTotal" style="padding-left:15px; padding-top: 5px; padding-bottom: 5px;"></td>
                    </tr>
                </tbody>
            </table>

            <div class="form-group my-3">
                <label class="form-label fst-italic">If applicable, upload the certificate.</label>
                <div class="mb-3">
                    <label asp-for="Bir2306" class="form-label">BIR 2306 Form @(!Model.HasAlready2306 ? "" : "(Replace existing file)")</label>
                    <input class="form-control form-control-sm w-25" asp-for="Bir2306" type="file">
                </div>
                <div class="mb-3">
                    <label asp-for="Bir2307" class="form-label">BIR 2307 Form @(!Model.HasAlready2307 ? "" : "(Replace existing file)")</label>
                    <input class="form-control form-control-sm w-25" asp-for="Bir2307" type="file">
                </div>
            </div>

            @* <hr /> *@
            @* <div class="form-group"> *@
            @*     <button type="button" class="btn btn-info" data-bs-toggle="modal" data-bs-target="#AddAccEntry"> *@
            @*         Add Entry *@
            @*     </button> *@
            @*     <table class="table"> *@
            @*         <thead> *@
            @*             <tr> *@
            @*                 <th class="w-100">Account Title</th> *@
            @*                 <th class="w-20"> *@
            @*                     Amount *@
            @*                 </th> *@
            @*                 <th></th> *@
            @*             </tr> *@
            @*         </thead> *@
            @*         <tbody id="accountingEntriesBody"> *@
            @*             @for (int i = 0; i < ViewBag.Offsettings.Count; i++) *@
            @*             { *@
            @*                 <tr> *@
            @*                     <td> *@
            @*                         <input type="hidden" name="accountTitle" value="@ViewBag.Offsettings[i].AccountNo" /> *@
            @*                         <input type="text" name="accountTitleText" value="@ViewBag.Offsettings[i].AccountNo  @ViewBag.Offsettings[i].AccountTitle" style="border:none; width: 70%" readonly /> *@
            @*                     </td> *@
            @*                     <td> *@
            @*                         <input type="text" name="accountAmount" value="@ViewBag.Offsettings[i].Amount" style="border:none" readonly /> *@
            @*                     </td> *@
            @*                     <td> *@
            @*                         <button type="button" class="btn btn-danger btn-sm" onclick="removeRow(this)">Remove</button> *@
            @*                     </td> *@
            @*                 </tr> *@
            @*             } *@
            @*         </tbody> *@
            @*     </table> *@
            @* </div> *@

            <br />
            <div class="row pt-2">
                <div class="col-6 col-md-3">
                    <button id="submitButton" type="submit" class="btn btn-primary form-control">Update</button>
                </div>
                <div class="col-6 col-md-3">
                    <a asp-area="Filpride" asp-controller="CollectionReceipt" asp-action="ServiceInvoiceIndex" class="btn btn-outline-primary border  form-control ">Back to List</a>
                </div>
            </div>
        </form>
    </div>
</div>

<!-- Modal -->
<div class="modal fade" id="AddAccEntry" tabindex="-1" aria-labelledby="AddAccEntryLabel" aria-hidden="true">
    <div class="modal-dialog">
        <div class="modal-content">
            <div class="modal-header">
                <h1 class="modal-title fs-5" id="AddAccEntryLabel">Add Accounting Entry</h1>
                <button type="button" class="btn-close" data-bs-dismiss="modal" aria-label="Close"></button>
            </div>
            <div class="modal-body">
                <form>
                    <div asp-validation-summary="ModelOnly" class="text-danger"></div>
                    <div class="form-group">
                        <label class="control-label">Account Title</label>
                        <select id="AccountTitle" asp-items="@Model.ChartOfAccounts" class="form-select" style="width: 100%">
                            <option></option>
                        </select>
                        <span class="text-danger"></span>
                    </div>
                    <div class="form-group pt-4">
                        <label class="control-label">Amount</label>
                        <input id="AccountAmount" class="form-control moneyInput" value="" placeholder="0.000" />
                        <span class="text-danger"></span>
                    </div>
                </form>
            </div>
            <div class="modal-footer">
                <button type="button" class="btn btn-secondary" data-bs-dismiss="modal">Close</button>
                <button type="button" class="btn btn-primary" onclick="saveAccountingEntry()">Create</button>
            </div>
        </div>
    </div>
</div>

@section Scripts {
    @{
        await Html.RenderPartialAsync("_ValidationScriptsPartial");
    }
    <script>
        let collectionReceiptId = @Html.Raw(Json.Serialize(Model.CollectionReceiptId));
        
        $(document).ready(function () {
            $("#CustomerId").change(function () {
                var customerNo = $(this).val();

                $.ajax({
                    url: '@Url.Action("GetServiceInvoices", "CollectionReceipt", new { area = "Filpride" })',
                    type: "GET",
                    data: { customerNo: customerNo, crId: collectionReceiptId },
                    success: function (data) {

                        $("#serviceInvoice").empty();

                        // Check if data is an array and not null
                        if (Array.isArray(data) && data.length > 0) {

                            document.getElementById("amount").innerHTML = "";
                            document.getElementById("amountPaid").innerHTML = "";
                            document.getElementById("balance").innerHTML = "";

                            $("#serviceInvoice").append('<option>');

                            // Iterate over the array and append options
                            $.each(data, function (index, item) {
                                $("#serviceInvoice").append($('<option>', {
                                    value: item.value,   // Use the correct property for value
                                    text: item.text      // Use the correct property for text
                                }));
                            });
                        } else {
                            // Handle the case where data is null or empty
                            console.log("No sales invoices found for the selected customer.");
                        }
                    }
                });
            });

            // Trigger customer change on page load to populate invoices
            if ($("#serviceInvoice").val()) {
                $("#serviceInvoice").trigger('change');
            }
        });
    </script>

    <script>
        function saveAccountingEntry() {
            // Get the values from the modal inputs
            var accountTitle = $("#AccountTitle").val();
            var accountTitleText = $("#AccountTitle option:selected").text();
            var accountAmount = parseNumber($("#AccountAmount").val());

            if (accountAmount === 0) {
                event.preventDefault();
                alert('Please input amount');
                return;
            } else if (accountTitleText === "") {
                event.preventDefault();
                alert('Please select Account No.!');
                return;
            }

            // Format debit and credit values with commas and two decimal places
            var formattedAmount = formatNumber(accountAmount);

            // Create a new row with the text only and a hidden input for the value
            var newRow = `<tr>
                                                                                        <td>
                                                                                            <input type='hidden' name='accountTitle' value='${accountTitle}' />
                                                                                            <input type='text' name='accountTitleText' value='${accountTitleText}' style='border:none; width: 70%' readonly />
                                                                                        </td>
                                                                                                    <td><input type='text' name='accountAmount' value='${formattedAmount}' style='border:none' readonly /></td>
                                                                                        <td><button type='button' class='btn btn-danger btn-sm' onclick='removeRow(this)'>Remove</button></td>
                                                                                     </tr>`;

            // Append the new row to the table body
            $("#accountingEntriesBody").append(newRow);

            // Close the modal
            $("#AddAccEntry").modal("hide");

            // Clear the modal inputs
            $("#AccountTitle").val(""); // Reset the select to its default state
            $("#AccountTitle").trigger("change"); // Trigger change event for the select
            $("#AccountAmount").val("");
        }

        // Function to remove the corresponding row
        function removeRow(button) {
            // Get the reference to the button's parent row and remove it
            $(button).closest("tr").remove();
        }
    </script>

    <script>
        // Function to handle invoice change event
        function handleInvoiceChange() {
            let serviceInvoice = $("#serviceInvoice").val();

            $.ajax({
                url: '@Url.Action("GetInvoiceDetails", "CollectionReceipt", new { area = "Filpride" })',
                type: "GET",
                data: {
                    invoiceNo: serviceInvoice,
                    isServices: true, // or true based on your condition
                    crId: collectionReceiptId
                },
                success: function (data) {
                    document.getElementById("amount").innerHTML = data.amount;
                    document.getElementById("amountPaid").innerHTML = data.amountPaid;
                    document.getElementById("balance").innerHTML = data.balance;
                    document.getElementById("ewt").innerHTML = data.ewt;
                    document.getElementById("wvat").innerHTML = data.wvat;
                    document.getElementById("total").innerHTML = data.total;
                }
            });

        }

        $(document).ready(function () {
            // Call the handleInvoiceChange function on page load
            handleInvoiceChange();
            
            $("#serviceInvoice").change(function () {
                // Call the handleInvoiceChange function when the dropdown changes
                handleInvoiceChange();
            });
        });
    </script>

    <script>
        $('#AccountTitle').select2({
            dropdownParent: $('#AddAccEntry')
        });
    </script>

    <script>
        document.addEventListener("DOMContentLoaded", function () {
            $("#submitButton").on("click", checkIfExceed);
            let inputs = document.querySelectorAll(".moneyInput");
            let totalCell = document.getElementById("checkTotal");

            function updateTotal() {
                let total = 0;
                inputs.forEach(input => {
                    const value = parseFloat(input.value.replace(/,/g, "")) || 0;
                    total += value;
                });
                totalCell.textContent = total.toLocaleString("en-US", {
                    minimumFractionDigits: 2,
                    maximumFractionDigits: 2
                });
            }

            inputs.forEach(input => {
                input.addEventListener("input", updateTotal);
                input.addEventListener("change", updateTotal);
            });

            updateTotal();
        });

        function checkIfExceed (event){
            let balanceValue = parseFloat($("#balance").text().replace(/,/g, "")) || 0;
            let checkTotal = parseFloat($("#checkTotal").text().replace(/,/g, "")) || 0;
            event.preventDefault();
            const form = document.getElementById("myForm");

            if (!form.checkValidity()) {
                form.reportValidity();
                return;
            }

            if (checkTotal > balanceValue){
                Swal.fire({
                    title: "Error",
                    text: "Total payment amount cannot exceed the balance",
                    icon: "error"
                });
            }
            else{
                form.submit();
            }
        }
    </script>
}