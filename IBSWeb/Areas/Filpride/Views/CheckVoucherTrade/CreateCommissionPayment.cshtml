@using IBS.Utility.Enums
@model CommissionPaymentViewModel

@{
    ViewData["Title"] = "Check Voucher Trade Commission Payment - Create";
}

<link rel="stylesheet" href="~/css/form-style.css">

<div class="loader-container">
    <div class="loader"></div>
    <div class="loader-text">Loading...</div>
</div>
<div class="card shadow border-0 mt-4">
    <div class="card-header bg-secondary bg-gradient ml-0 py-3">
        <div class="row">
            <div class="col-12 text-center">
                <h2 class="text-white py-2">@ViewData["Title"]</h2>
            </div>
        </div>
    </div>
    <div class="card-body p-4">
        <form method="post" enctype="multipart/form-data" id="paymentForm">
            @Html.AntiForgeryToken()
            <div class="row">
                <div class="col-md-4">
                    <div asp-validation-summary="ModelOnly" class="text-danger"></div>
                    <div class="form-group mb-3">
                        <label class="control-label">Type<span class="required">*</span></label>
                        <select asp-for="Type" class="form-select js-select2 border-0 shadow" style="width:100%; max-height: 200px;" required>
                            <option value="" selected disabled>Select PO type</option>
                            @foreach (var documentType in Enum.GetValues<DocumentType>())
                            {
                                <option value="@documentType">@documentType.ToString()</option>
                            }
                        </select>
                        <span asp-validation-for="Type" class="text-danger"></span>
                    </div>
                    <div class="form-group mb-3">
                        <label asp-for="SupplierId" class="control-label"></label><span class="required">*</span>
                        <select asp-for="SupplierId" asp-items="@Model.Suppliers" class="form-select js-select2 GetDRList supplier" style="width:100%">
                            <option></option>
                        </select>
                        <span asp-validation-for="SupplierId" class="text-danger"></span>
                    </div>
                    <div class="form-floating mb-3">
                        <input asp-for="Payee" type="text" class="form-control supplierName" placeholder=""/>
                        <label asp-for="Payee" class="control-label"></label>
                    </div>
                    <div class="form-floating mb-3">
                        <input asp-for="SupplierAddress" type="text" class="form-control" placeholder="" readonly/>
                        <label asp-for="SupplierAddress" class="control-label"></label>
                    </div>
                    <div class="form-floating mb-3">
                        <input asp-for="SupplierTinNo" type="text" class="form-control" placeholder="" readonly/>
                        <label asp-for="SupplierTinNo" class="control-label"></label>
                    </div>
                </div>
                <div class="col-8">
                    <div class="row mb-3 overflow-auto" style="max-height: 300px;">
                        <table >
                            <thead class="sticky-top bg-white">
                            <tr>
                                <th colspan="7" class="text-center py-4">DR LIST</th>
                            </tr>
                            <tr>
                                <th><input type="checkbox" id="selectAll" onclick="toggleSelectAll(this)"></th>
                                <th>DR No's</th>
                                <th class="text-end">Amount</th>
                                <th class="text-end">Amount Paid</th>
                                <th class="text-end">Balance</th>
                            </tr>
                            </thead>
                            <tbody class="drList">
                            </tbody>
                        </table>
                    </div>
                </div>
                
                <div class="form-floating mb-3">
                    <input asp-for="OldCVNo" type="text" class="form-control" placeholder="" required/>
                    <span asp-validation-for="OldCVNo" class="text-danger"></span>
                    <label asp-for="OldCVNo" class="control-label mx-2">Old CV #<span class="required">*</span></label>
                </div>
                
                <div class="form-group mb-3">
                    <label asp-for="TransactionDate" class="control-label"></label><span class="required">*</span>
                    <input asp-for="TransactionDate"
                           type="Date" 
                           class="form-control"
                           value="@DateTimeHelper.GetCurrentPhilippineTime().ToString("yyyy-MM-dd")"
                           min="@Model.MinDate.ToString("yyyy-MM-dd")"/>
                    <span asp-validation-for="TransactionDate" class="text-danger"></span>
                </div>
                
                <div class="form-floating mb-3">
                    <textarea asp-for="SiNo" class="form-control" placeholder="Input si no" style="height: 100px"></textarea>
                    <label asp-for="SiNo" class="control-label ms-2">Supplier Invoice No</label>
                    <span asp-validation-for="SiNo" class="text-danger"></span>
                </div>

                <div class="form-group mb-3">
                    <label asp-for="BankId" class="control-label"></label><span class="required">*</span>
                    <select asp-for="BankId" asp-items="@Model.BankAccounts" class="form-select js-select2" id="bankAccounts" style="width:100%">
                        <option></option>
                    </select>
                    <span asp-validation-for="BankId" class="text-danger"></span>
                </div>
                <div class="form-floating mb-3">
                    <input asp-for="CheckNo" type="text" class="form-control" placeholder=""/>
                    <span asp-validation-for="CheckNo" class="text-danger"></span>
                    <label asp-for="CheckNo" class="control-label mx-2">Check No<span class="required">*</span></label>
                </div>
                <div class="form-group mb-3">
                    <label asp-for="CheckDate" class="control-label"></label><span class="required">*</span>
                    <input asp-for="CheckDate" type="date" value="@DateTimeHelper.GetCurrentPhilippineTime().ToString("yyyy-MM-dd")" class="form-control"/>
                    <span asp-validation-for="CheckDate" class="text-danger"></span>
                </div>
                <div class="form-floating mb-3">
                    <input asp-for="Particulars" type="text" class="form-control" placeholder=""/>
                    <span asp-validation-for="Particulars" class="text-danger"></span>
                    <label asp-for="Particulars" class="control-label mx-2">Particulars<span class="required">*</span></label>
                </div>
                <div class="form-group mb-3">
                    <label class="control-label">Upload File (Optional)</label>
                    <input name="file" type="file" class="form-control"/>
                </div>
                <br/>
                <div class="form-group">
                    <table class="table">
                        <thead>
                        <tr>
                            <th>Account No.</th>
                            <th>Account Title</th>
                            <th>
                                Debit
                            </th>
                            <th>
                                Credit
                            </th>
                            <th></th>
                        </tr>
                        </thead>
                        <tbody id="accountingEntriesBody">
                        <tr>
                            <td><input type="text" name="AccountNumber" value="201010200" class="w-100" style='border:none' readonly/></td>
                            <td><input type='text' name="AccountTitle" value='AP - Commision Payable' class="w-100" style='border:none' readonly/></td>
                            <td><input type='text' name="Debit" value='0.000' class="w-100 totalNetOfEWT" style='border:none' readonly/></td>
                            <td><input type='text' name="Credit" value='0.000' class="w-100" style='border:none' readonly/></td>
                            <td></td>
                        </tr>
                        <tr>
                            <td><input type="text" name="AccountNumber" value="101010100" class="w-100" style='border:none' readonly/></td>
                            <td><input type='text' name="AccountTitle" value="Cash in Bank" class="w-100 accountTitle" style='border:none' readonly/></td>
                            <td><input type='text' name="Debit" value='0.000' class="w-100" style='border:none' readonly/></td>
                            <td><input type='text' name="Credit" value="0.000" class="w-100 totalNetOfEWT" style='border:none' readonly/></td>
                            <td></td>
                        </tr>
                        </tbody>
                        <tbody>
                        <tr>
                            <td class="text-end" colspan="2">TOTAL:</td>
                            <td class="totalDebit">0.000</td>
                            <td class="totalCredit">0.000</td>
                            <td></td>
                        </tr>
                        </tbody>
                    </table>
                </div>
                <br/>
                <div class="row pt-2">
                    <div class="col-6 col-md-3">
                        <button type="submit" class="btn btn-primary form-control">Create</button>
                    </div>
                    <div class="col-6 col-md-3">
                        <a asp-area="Filpride" asp-controller="CheckVoucherTrade" asp-action="Index" class="btn btn-outline-primary border  form-control ">Back to List</a>
                    </div>
                </div>
            </div>
        </form>
    </div>
</div>

@section Scripts
{
    @{
        await Html.RenderPartialAsync("_ValidationScriptsPartial");
    }
    <script>
        $('#AccountNo').select2({
            dropdownParent: $('#AddAccEntry')
        });
    </script>
    <script>
        $(function () {
            $(".supplier").change(function () {
                var suppId = $(this).val();
                supplierDetails(suppId);
                displayRecords(suppId);
            });

            function supplierDetails(suppId) {
                if (suppId !== "") {
                    // Make an AJAX request to get the TaxType based on the selected SupplierId
                    $.ajax({
                        url: "@Url.Action("GetSupplierDetails", "CheckVoucherTrade")",
                        method: "GET",
                        data: { supplierId: suppId },
                        success: function (data) {
                            if (data.address !== null || data.tinNo !== null) {
                                $("#SupplierAddress").val(data.address);
                                $("#SupplierTinNo").val(data.tinNo);
                                $(".supplierName").val(data.name);
                            } else {
                                $("#SupplierAddress").val("");
                                $("#SupplierTinNo").val("");
                                $(".supplierName").val("");
                            }
                        },
                        error: function (xhr, status, error) {
                            console.error('Error fetching TaxType:', error);
                        }
                    });
                } else {
                    $("#SupplierAddress").val("");
                    $("#SupplierTinNo").val("");
                    $(".supplierName").val("");
                }
            }
        });

        function displayRecords(commissioneeId) {
            $.ajax({
                url: "@Url.Action("GetCommissioneeDRs", "CheckVoucherTrade")",
                method: "GET",
                data: { commissioneeId: commissioneeId }, // Pass PO numbers to controller
                traditional: true, // Ensure jQuery sends the array properly
                success: function (data) {
                    const tbody = $('.drList');
                    let totalGross = 0;
                    let totalAmountPaid = 0;
                    let totalBalance = 0;

                    tbody.empty();

                    if (data){
                        data.forEach((dr) => {
                            let balance = parseNumber(dr.netOfEwtAmount) - parseNumber(dr.amountPaid);
                            const tr = $(`
                                        <tr>
                                            <td><input type="checkbox" value="${dr.id}" class="selectCheckbox"></td>
                                            <td>${dr.manualDrNo}</td>
                                            <td class="text-end grossAmount">${formatNumberToFour(dr.netOfEwtAmount)}</td>
                                            <td class="text-end"><input type="text" class="paymentAmount text-end" readonly style="display: none"></td>
                                            <td class="text-end balance">${formatNumberToFour(parseNumber(dr.netOfEwtAmount) - parseNumber(dr.amountPaid))}</td>
                                        </tr>
                                    `);
                            tbody.append(tr);

                            totalGross += parseNumber(dr.netOfEwtAmount);
                            totalAmountPaid += parseNumber(dr.amountPaid);
                            totalBalance += balance;
                        });
                    }

                    // Append Grand Total Rows
                    const totalRow = $(`
                <tr style="border-bottom:double;" class="sticky-lg-bottom">
                    <td colspan="7" class="pt-1"></td>
                </tr>
                <tr class="sticky-bottom bg-white">
                    <td ></td>
                    <td class="fw-bold text-end p-2">Grand Total:</td>
                    <td class="text-end grandTotalGross" id="grandTotalRRAmount">${formatNumber(totalGross)}</td>
                    <td class="text-end grandTotalAmountPaid" id="grandTotalNetAmount">0.00</td>
                    <td class="text-end grandTotalBalance" id="grandTotalNetOfEWT">${formatNumber(totalBalance)}</td>
                </tr>
            `);
                    tbody.append(totalRow);
                },
                error: function (xhr, status, error) {
                    console.error('Error fetching DRs:', error);
                }
            });
        }

        let selectedRecords = new Set(); // Store selected records
        let allRecordsSelected = false;  // Flag to check if "Select All" is toggled across all pages

        function toggleSelectAll(selectAllCheckbox) {
            const isChecked = selectAllCheckbox.checked;

            $(".selectCheckbox").each(function () {
                if (isChecked && !this.checked) {
                    // Check unchecked ones only
                    $(this).prop("checked", true).trigger("change");
                } else if (!isChecked && this.checked) {
                    // Uncheck checked ones only
                    $(this).prop("checked", false).trigger("change");
                }
            });

            allRecordsSelected = isChecked;
        }

        $(document).on('change', '.selectCheckbox', function () {
            const row = $(this).closest('tr');
            const inputField = row.find('.paymentAmount');
            const balance = parseNumber(row.find('.balance').text().trim());
            const grossAmount = parseNumber(row.find('.grossAmount').text());

            if (this.checked) {
                selectedRecords.add(this.value);
                inputField.val(balance).addClass("inputAmount").show();
                row.find('.balance').text(formatNumberToFour(grossAmount - balance));
            } else {
                selectedRecords.delete(this.value);
                inputField.removeAttr("name").hide().val('');
                row.find('.selectCheckbox').removeAttr("name");
                row.find('.balance').text(formatNumberToFour(grossAmount));
            }

            reindexSelected();
            updateAmounts();
        });

        function reindexSelected() {
            $(".selectCheckbox:checked").each(function (i) {
                const row = $(this).closest('tr');
                const inputField = row.find('.paymentAmount');

                $(this).attr("name", `DRs[${i}].Id`);
                inputField.attr("name", `DRs[${i}].Amount`);
            });
        }

        $(document).on('input', '.inputAmount', function () {
            updateAmounts();
        });

        function updateAmounts() {
            var amountInputs = document.querySelectorAll('.inputAmount');
            var totalNetOfEWT = 0;
            amountInputs.forEach(function (input) {
                var rawValue = input.value;
                var drAmount = parseNumber(rawValue);
                
                totalNetOfEWT += drAmount;
            });
            $(".totalNetOfEWT").val(formatNumber(totalNetOfEWT));
            $(".grandTotalAmountPaid").text(formatNumber(totalNetOfEWT));
            let grandTotalGross = parseNumber($(".grandTotalGross").text());
            $(".grandTotalBalance").text(formatNumber(Math.abs(grandTotalGross - totalNetOfEWT)));
            updateTotalDebitAndCredit();
            validateDebitAndCredit();
        }

        function updateTotalDebitAndCredit() {
            var totalDebit = 0;
            var totalCredit = 0;

            // Loop through each row in the table body and sum up the debit values
            $("#accountingEntriesBody tr, .defaultEntry tr").each(function () {
                var debitInput = $(this).find("td:eq(2) input").val();
                var creditInput = $(this).find("td:eq(3) input").val();
                // Ensure debitInput and creditInput are strings before using replace
                debitInput = debitInput ? String(debitInput) : ""; // convert to string if not null/undefined
                creditInput = creditInput ? String(creditInput) : "";

                var debit = parseNumber(debitInput);
                var credit = parseNumber(creditInput);

                totalDebit += debit;
                totalCredit += credit;
            });

            // Display the total debit value
            $(".totalDebit").text(formatNumber(totalDebit));
            $(".totalCredit").text(formatNumber(totalCredit));
            $("#debit").val("0.000");
            $("#credit").val("0.000");
        }
    </script>
    <script>
        function validateDebitAndCredit() {
            var totalDebit = parseNumber($(".totalDebit").text());
            var totalCredit = parseNumber($(".totalCredit").text());
            var errorMessage = "";
            var isValid = true;

            if ($("#balance-error-message").length === 0) {
                $("#accountingEntriesBody").after('<div id="balance-error-message" class="text-danger mt-2"></div>');
            }

            if (totalDebit !== totalCredit) {
                errorMessage = "Debit and Credit totals must be equal.";
                isValid = false;
            } else if (totalDebit === 0 && totalCredit === 0) {
                errorMessage = "Debit and Credit cannot both be zero.";
                isValid = false;
            } else if (totalDebit === 0 || totalCredit === 0) {
                errorMessage = "Debit and Credit cannot be zero.";
                isValid = false;
            }

            // Display or clear the error message
            $("#balance-error-message").text(errorMessage);

            // Optionally disable/enable the submit button based on validation
            $("button[type='submit']").prop("disabled", !isValid);

            return isValid;
        }

        $('input[name="CheckNo"]').on('blur', function() {
            var checkNo = $(this).val();
            if (checkNo) {
                $.ajax({
                    url: '@Url.Action("CheckNoIsExist", "CheckVoucherTrade", new { area = "Filpride" })',
                    type: "GET",
                    data: { checkNo: checkNo },
                    success: function(exists) {

                        const submitButton = $('button[type="submit"]');

                        if (exists) {
                            alert("Check # already exists. Please enter a different number.");
                            $('input[name="CheckNo"]').addClass('is-invalid');

                            // Optional: Add error message near the field
                            if ($('input[name="CheckNo"]').next('.text-danger.check-no-exists').length === 0) {
                                $('input[name="CheckNo"]').after('<span class="text-danger check-no-exists">Check # already exists</span>');
                            }

                            // Disable the submit button
                            submitButton.prop('disabled', true);

                        } else {
                            // Clear any error styling/messages
                            $('input[name="CheckNo"]').removeClass('is-invalid');
                            $('.check-no-exists').remove();

                            submitButton.prop('disabled', false);
                        }
                    },
                    error: function(xhr, status, error) {
                        console.log("Error checking CheckNo: " + error);
                    }
                });
            }
        });
        
    </script>
}
