@model ActualInventoryViewModel

@{
    ViewData["Title"] = "Actual Inventory";
}

<div class="card shadow border-0 mt-4">
    <div class="card-header bg-secondary bg-gradient ml-0 py-3">
        <div class="row">
            <div class="col-12 text-center">
                <h2 class="text-white py-2">Create Actual Inventory</h2>
            </div>
        </div>
    </div>
    <div class="card-body p-4">
        <form method="post">
            <div class="row">
                <div asp-validation-summary="ModelOnly" class="text-danger"></div>
                <div class="form-group mb-3">
                    <label asp-for="Date" class="control-label"></label><span class="required">*</span>
                    <input type="date" asp-for="Date" class="form-control" required />
                    <span asp-validation-for="Date" class="text-danger"></span>
                </div>
                <div class="form-group mb-3">
                    <label asp-for="ProductId" class="control-label">Product Name</label><span class="required">*</span>
                    <select asp-for="ProductId" class="form-control js-select2" asp-items="@Model.ProductList">
                        <option></option>
                    </select>
                    <span asp-validation-for="ProductId" class="text-danger"></span>
                </div>
                <div class="form-group mb-3">
                    <label asp-for="POId" class="control-label">Suppliers PO No.<span class="required">*</span></label>
                    <select asp-for="POId" class="form-control js-select2" asp-items="@Model.PO">
                        <option></option>
                    </select>
                    <span asp-validation-for="POId" class="text-danger"></span>
                </div>
                <input asp-for="AverageCost" class="averageCost" type="hidden" />
                <input asp-for="TotalBalance" type="hidden" />
                <div class="form-group mb-3">
                    <label asp-for="PerBook" class="control-label"></label>
                    <input asp-for="PerBook" class="form-control money" value="" placeholder="0.000" readonly />
                </div>
                <div class="form-group mb-3">
                    <label asp-for="ActualVolume" class="control-label"></label><span class="required">*</span>
                    <input asp-for="ActualVolume" class="form-control money" value="" placeholder="0.000" />
                    <span asp-validation-for="ActualVolume" class="text-danger"></span>
                </div>
                <div class="form-group mb-3">
                    <label asp-for="Variance" class="control-label"></label>
                    <input asp-for="Variance" class="form-control money" value="" placeholder="0.000" readonly />
                </div>

                <div class="form-group">
                    <button type="button" class="btn btn-info" data-bs-toggle="modal" data-bs-target="#AddAccEntry">
                        Add Entry
                    </button>
                    <table class="table">
                        <thead>
                            <tr>
                                <th class="w-50">Account No.</th>
                                <th class="w-25">
                                    Debit
                                </th>
                                <th class="w-25">
                                    Credit
                                </th>
                                <th></th>
                            </tr>
                        </thead>
                        <tbody id="accountingEntriesBody">
                            <tr>
                                <input type="hidden" name="AccountNumber" class="accountNumber" value="" />
                                <td><input type="text" name="AccountTitle" value="" class="w-100 accountTitle" style="border:none" readonly /></td>
                                <td><input type="text" name="Debit" value="0.000" class="w-100 debit" style="border:none" readonly /></td>
                                <td><input type="text" name="Credit" value="0.000" class="w-100 credit" style="border:none" readonly /></td>
                                <td></td>
                            </tr>
                        </tbody>
                        <tbody>
                            <tr>
                                <td class="text-end">TOTAL:</td>
                                <td class="totalDebit">0.000</td>
                                <td class="totalCredit">0.000</td>
                                <td></td>
                            </tr>
                        </tbody>
                    </table>
                </div>

                <div class="row pt-2">
                    <div class="col-6 col-md-3">
                        <button type="submit" class="btn btn-primary form-control" onclick="validateDebitAndCredit(event)">Create</button>
                    </div>
                </div>
            </div>
        </form>
    </div>
</div>

<!-- Modal -->
<div class="modal fade" id="AddAccEntry" data-bs-backdrop="static" tabindex="-1" aria-labelledby="AddAccEntryLabel" aria-hidden="true">
    <div class="modal-dialog">
        <div class="modal-content">
            <div class="modal-header">
                <h1 class="modal-title fs-5" id="AddAccEntryLabel">Add Accounting Entry</h1>
                <button type="button" class="btn-close" data-bs-dismiss="modal" aria-label="Close"></button>
            </div>
            <div class="modal-body">
                <form>
                    <div asp-validation-summary="ModelOnly" class="text-danger"></div>
                    <div class="form-group">
                        <label class="control-label">Account No.</label>
                        <select asp-items="@Model.COA" class="form-select" style="width: 100%" id="AccountNo">
                            <option></option>
                        </select>
                        <span class="text-danger"></span>
                    </div>
                    <div class="form-group pt-4">
                        <label class="control-label">Debit</label>
                        <input id="Debit" value="0.000" class="form-control moneyInput" placeholder="0.000" />
                        <span class="text-danger"></span>
                    </div>
                    <div class="form-group pt-4">
                        <label class="control-label">Credit</label>
                        <input id="Credit" value="0.000" class="form-control moneyInput" placeholder="0.000" />
                        <span class="text-danger"></span>
                    </div>
                </form>
            </div>
            <div class="modal-footer">
                <button type="button" class="btn btn-secondary" data-bs-dismiss="modal">Close</button>
                <button type="button" class="btn btn-primary" onclick="saveAccountingEntry(event)">Create</button>
            </div>
        </div>
    </div>
</div>

@section Scripts {
    @{
        await Html.RenderPartialAsync("_ValidationScriptsPartial");
    }

    <script>
        // Get the current date in the format "YYYY-MM-DD" (required for the date input)
        var currentDate = new Date().toISOString().slice(0, 10);

        // Set the default value of the input field
        document.getElementById("Date").value = currentDate;
    </script>
    <script>
        $(document).ready(function () {
            $('#POId').change(function () {
                var productId = $('#ProductId').val();
                var poId = $(this).val();
                var date = $("#Date").val();

                var product = $("#ProductId option:selected").text().replace(/^\S+\s/, '');
                $(".accountTitle").val("Inventory " + product);
                console.log(product)
                if (product = "BIODIESEL") {
                    $(".accountNumber").val("1010401");
                } else if (product = "ECONOGAS") {
                    $(".accountNumber").val("1010402");
                } else {
                    $(".accountNumber").val("1010403");
                }

                $.ajax({
                    url: "/Filpride/Inventory/GetProducts",
                    method: "GET",
                    data: { id: productId, poId: poId, dateTo: date },
                    success: function (data) {
                        if (data.inventoryBalance !== 0.000) {
                            $("#PerBook").val(formatNumber(data.inventoryBalance));
                            $("#AverageCost").val(formatNumber(data.averageCost));
                            $("#TotalBalance").val(formatNumber(data.totalBalance));
                        } else {
                            $("#PerBook").val(formatNumber(data.inventoryBalance));
                            $("#AverageCost").val(formatNumber(data.averageCost));
                            $("#TotalBalance").val(formatNumber(data.totalBalance));
                        }
                    },
                    error: function () {
                        console.error('Error fetching bank account:', error)
                    }

                });
            });
        });
    </script>
    <script>
        $(document).ready(function () {
            $("#ActualVolume").on('input', function () {
                var inputValue = $(this).val();
                var perBookAmount = $("#PerBook").val();
                var perBook = parseNumber(perBookAmount);
                var variance = (inputValue - perBook);
                var averageCost = $(".averageCost").val();
                var total = Math.abs(variance * averageCost);

                if (!inputValue) {
                    $(".credit").val("0.0000");
                    $(".debit").val("0.0000");
                } else if (variance < 0) {
                    $(".credit").val(formatNumber(total));
                    $(".debit").val("0.0000");
                } else {
                    $(".debit").val(formatNumber(total));
                    $(".credit").val("0.0000");
                }
                if (inputValue) {
                    $("#Variance").val(formatNumber(variance));
                } else {
                    $("#Variance").val("0.0000");
                }

                updateTotalDebitAndCredit();
            });
        });
    </script>
    <script>
        $('#AccountNo').select2({
            dropdownParent: $('#AddAccEntry')
        });
    </script>
    <script>
        function saveAccountingEntry(event) {
            // Get the values from the modal inputs
            var accountNumber = $("#AccountNo").val();
            var accountNumberText = $("#AccountNo option:selected").text().replace(/^\S+\s/, '');
            var debit = parseNumber($("#Debit").val());
            var credit = parseNumber($("#Credit").val());

            if (debit === 0 && credit === 0) {
                event.preventDefault();
                alert('Please input amount');
                return;
            } else if (accountNumberText === "") {
                event.preventDefault();
                alert('Please select Account No.!');
                return;
            }

            // Format debit and credit values with commas and two decimal places
            var formattedDebit = formatNumber(debit);
            var formattedCredit = formatNumber(credit);

            // Create a new row with the text only and a hidden input for the value
            var newRow = `<tr>
                                            <td>
                                                <input type='hidden' name='AccountNumber' value='${accountNumber}'/>
                                                <input type='text' name='AccountTitle' value='${accountNumberText}' style='border:none' class='w-100' readonly />
                                            </td>
                                            <td><input name='Debit' id='debit_${accountNumber}' value='${formattedDebit}' style='border:none' class='w-100' readonly /></td>
                                            <td><input name='Credit' id='credit_${accountNumber}' value='${formattedCredit}' style='border:none' class='w-100' readonly /></td>
                                            <td><button type='button' class='btn btn-danger btn-sm' onclick='removeRow(this)'>Remove</button></td>
                                     </tr>`;


            // Append the new row to the table body
            $("#accountingEntriesBody").append(newRow);

            // Close the modal
            $("#AddAccEntry").modal("hide");

            // Clear the modal inputs
            $("#AccountNo").val(""); // Reset the select to its default state
            $("#AccountNo").trigger("change"); // Trigger change event for the select
            $("#Debit").val("0.000");
            $("#Credit").val("0.000");

            updateTotalDebitAndCredit();
        }

        function updateTotalDebitAndCredit() {
            var totalDebit = 0;
            var totalCredit = 0;

            // Loop through each row in the table body and sum up the debit values
            $("#accountingEntriesBody tr").each(function () {
                var debitInput = $(this).find("td:eq(1) input").val();
                var creditInput = $(this).find("td:eq(2) input").val();
                // Ensure debitInput and creditInput are strings before using replace
                debitInput = debitInput ? String(debitInput) : ""; // convert to string if not null/undefined
                creditInput = creditInput ? String(creditInput) : "";

                var debit = parseNumber(debitInput);
                var credit = parseNumber(creditInput);

                totalDebit += debit;
                totalCredit += credit;
            });
            // Display the total debit value
            $(".totalDebit").text(formatNumber(totalDebit));
            $(".totalCredit").text(formatNumber(totalCredit));
        }

        // Function to remove the corresponding row
        function removeRow(button) {
            // Get the reference to the button's parent row and remove it
            $(button).closest("tr").remove();
            updateTotalDebitAndCredit();
        }
    </script>
    <script>
        function validateDebitAndCredit(event) {
            var debit = parseNumber($(".totalDebit").text());
            var credit = parseNumber($(".totalCredit").text());
            if (debit !== credit) {
                event.preventDefault();
                alert('Total Debit and Credit do not match.');
                return;
            }
        }
    </script>
}


