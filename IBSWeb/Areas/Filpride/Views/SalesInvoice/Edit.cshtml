@model FilprideSalesInvoice

@{
    ViewData["Title"] = "Edit Sales Invoice";
    Layout = "~/Views/Shared/_Layout.cshtml";
}

<div class="card shadow border-0 mt-4">
    <div class="card-header bg-secondary bg-gradient ml-0 py-3">
        <div class="row">
            <div class="col-12 text-center">
                <h2 class="text-white py-2">Edit Sales Invoice</h2>
            </div>
        </div>
    </div>
    <div class="card-body p-4">
        <form asp-action="Edit">
            <div asp-validation-summary="ModelOnly" class="text-danger"></div>
            <div class="mb-3">
                <div class="row">
                    <div class="col">
                        <div class="form-group mb-3">
                            <label asp-for="SalesInvoiceNo" class="control-label"></label>
                            <input asp-for="SalesInvoiceNo" class="form-control" disabled readonly />
                            <span asp-validation-for="SalesInvoiceNo" class="text-danger"></span>
                        </div>
                        <div class="form-group mb-3">
                            <label class="control-label">Customer Name<span class="required">*</span></label>
                            <select asp-for="CustomerId" asp-items="@Model.Customers" class="form-control js-select2" style="width:100%">
                                <option></option>
                            </select>
                            <span asp-validation-for="CustomerId" class="text-danger"></span>
                        </div>

                        <input type="hidden" id="soldTo" class="form-control" readonly disabled />

                        <div class="form-group mb-3">
                            <label class="control-label">Tin No</label>
                            <input id="tinNo" class="form-control" value="@Model.Customer.CustomerTin" readonly disabled />
                        </div>

                        <div class="form-group mb-3">
                            <label class="control-label">Customer Type</label>
                            <input id="customerType" class="form-control" value="@Model.Customer.CustomerType" readonly disabled />
                        </div>

                        <div class="form-group mb-3">
                            <label class="control-label">Address</label>
                            <input id="address" class="form-control" value="@Model.Customer.CustomerAddress" readonly disabled />
                        </div>

                        <div class="form-group mb-3">
                            <label class="control-label">Business Style</label>
                            <input id="businessStyle" class="form-control" value="@Model.Customer.BusinessStyle" readonly disabled />
                        </div>

                        <div class="form-group mb-3">
                            <label class="control-label">Terms</label>
                            <input id="terms" class="form-control" value="@Model.Customer.CustomerTerms" readonly disabled />
                        </div>
                    </div>
                    <div class="col">
                        <div class="form-group mb-3">
                            <label class="control-label">Product Name<span class="required">*</span></label>
                            <select asp-for="ProductId" asp-items="@Model.Products" class="form-control GetPOList js-select2" style="width:100%">
                                <option></option>
                            </select>
                            <span asp-validation-for="ProductId" class="text-danger"></span>
                        </div>

                        <input type="hidden" id="productName" class="form-control" readonly disabled />

                        <div class="form-group mb-3">
                            <label class="control-label">Unit</label>
                            <input id="productUnit" class="form-control" value="@Model.Product.ProductUnit" readonly disabled />
                        </div>
                        <div class="form-group mb-3">
                            <label asp-for="Quantity" class="control-label"></label>
                            <input asp-for="Quantity" class="form-control money" />
                            <span asp-validation-for="Quantity" class="text-danger"></span>
                        </div>
                        <div class="form-group mb-3">
                            <label asp-for="UnitPrice" class="control-label"></label>
                            <input asp-for="UnitPrice" class="form-control money" />
                            <span asp-validation-for="UnitPrice" class="text-danger"></span>
                        </div>
                        <div class="form-group mb-3">
                            <label asp-for="Discount" class="control-label"></label>
                            <input asp-for="Discount" class="form-control moneyInput" />
                            <span asp-validation-for="Discount" class="text-danger"></span>
                        </div>
                    </div>

                    @*   column 3 *@
                    <div class="col">
                        <div class="form-group mb-3">
                            <label asp-for="TransactionDate" class="control-label"></label>
                            <input type="date" asp-for="TransactionDate" class="form-control" data-existing-id="@Model.SalesInvoiceId" />
                            <span asp-validation-for="TransactionDate" class="text-danger"></span>
                        </div>
                        <div class="form-group mb-3">
                            <label asp-for="PurchaseOrderId" class="control-label">Suppliers PO No.<span class="required">*</span></label>
                            <select asp-for="PurchaseOrderId" class="form-control js-select2" asp-items="@Model.PO">
                                <option></option>
                            </select>
                            <span asp-validation-for="PurchaseOrderId" class="text-danger"></span>
                        </div>
                        <div class="form-group mb-3">
                            <label asp-for="OtherRefNo" class="control-label"></label>
                            <input asp-for="OtherRefNo" class="form-control" />
                            <span asp-validation-for="OtherRefNo" class="text-danger"></span>
                        </div>
                    </div>
                </div>
            </div>
            <div class="form-group">
                <label asp-for="Remarks" class="control-label"></label>
                <textarea asp-for="Remarks" class="form-control" placeholder="Leave a remarks here" style="height: 100px"></textarea>
                <span asp-validation-for="Remarks" class="text-danger"></span>
            </div>
            <br />

            <input type="hidden" asp-for="PurchaseOrderId" />
            <div class="form-group">
                <input type="submit" value="Save" class="btn btn-primary" />
                <a asp-action="Index" class="btn btn-secondary">Back to List</a>
            </div>
        </form>
    </div>
</div>

@section Scripts {
    @{
        await Html.RenderPartialAsync("_ValidationScriptsPartial");
    }
    <script>
        $(function () {
            $("#CustomerId").change(function () {
                var customerId = $(this).val();
                if (customerId !== "") {
                    // Make an AJAX request to get the customer details based on the selected CustomerId
                    $.ajax({
                        url: "/SalesInvoice/GetCustomerDetails", // Replace with the actual controller and action names
                        method: "GET",
                        data: { customerId: customerId },
                        success: function (data) {
                            console.log(data);
                            if (data) {
                                $("#soldTo").val(data.soldTo);
                                $("#address").val(data.address);
                                $("#tinNo").val(data.tinNo);
                                $("#businessStyle").val(data.businessStyle);
                                $("#terms").val(data.terms);
                                $("#customerType").val(data.customerType);
                                $("#withHoldingTax").val(data.withHoldingTax);
                                // Populate other fields as needed
                            } else {
                                // Clear the fields if no customer is selected
                                $("#soldTo").val("");
                                $("#address").val("");
                                $("#tinNo").val("");
                                $("#businessStyle").val("");
                                $("#terms").val("");
                                $("#customerType").val("");
                                $("#withHoldingTax").val(data.withHoldingTax);
                                // Clear other fields as needed
                            }
                        }
                    });
                } else {
                    // Clear the fields if no customer is selected
                    $("#soldTo").val("");
                    $("#address").val("");
                    $("#tinNo").val("");
                    $("#businessStyle").val("");
                    $("#terms").val("");
                    $("#customerType").val("");
                    $("#withHoldingTax").val(data.withHoldingTax);
                    // Clear other fields as needed
                }
            });
            $("#ProductId").change(function () {
                var productId = $(this).val();
                if (productId !== "") {
                    // Make an AJAX request to get the customer details based on the selected CustomerId
                    $.ajax({
                        url: "/SalesInvoice/GetProductDetails", // Replace with the actual controller and action names
                        method: "GET",
                        data: { productId: productId },
                        success: function (data) {
                            console.log(data);
                            if (data) {
                                $("#productName").val(data.productName);
                                $("#productUnit").val(data.productUnit);
                            } else {
                                // Clear the fields if no customer is selected
                                $("#productName").val("");
                                $("#productUnit").val("");
                            }
                        }
                    });
                } else {
                    // Clear the fields if no customer is selected
                    $("#productName").val("");
                    $("#productUnit").val("");
                }
            });
        });
    </script>
    <script>
        $(document).ready(function () {
            $(".GetPOList").each(function () {
                var productId = $(this).val();
                getPO(productId)
            });
            $(".GetPOList").change(function () {
                var productId = $(this).val();
                getPO(productId)
            });
        });

        function getPO(productId) {
            if (productId !== "") {
                // Make an AJAX request to get the POs based on the selected SupplierId
                $.ajax({
                    url: "/SalesInvoice/GetPOs",
                    method: "GET",
                    data: { productId: productId }, // Corrected parameter name
                    success: function (data) {
                        if (data) {
                            // Clear existing options
                            $("#POId").empty();
                            // Add new options based on the fetched data
                            $.each(data, function (index, po) {
                                if (po && po.poNumber) { // Adjust property name to poNumber
                                    console.log(po.id)
                                    $('#POId').append('<option value="' + po.id + '">' + po.poNumber + '</option>'); // Adjust property names
                                } else {
                                    console.error("Invalid PO object:", po);
                                }
                            });
                        } else {
                            // Clear the fields if no POs are found
                            $("#POId").empty();
                        }
                    },
                    error: function (xhr, status, error) {
                        console.error('Error fetching POs:', error);
                    }
                });
            } else {
                // Clear the fields if no supplier is selected
                $("#POId").empty();
            }
        }
    </script>
    <script>
        setTransactionDate();
    </script>
}
