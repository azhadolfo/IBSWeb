@using IBS.Models
@using IBS.Utility.Constants
@using IBS.Utility.Enums
@using Microsoft.AspNetCore.Identity
@model FilprideDeliveryReceipt
@inject SignInManager<ApplicationUser> SignInManager

@{
    ViewData["Title"] = "Delivery Receipt - Preview";    
    
    var selectedCompany = string.Empty;

    if (SignInManager.IsSignedIn(User))
    {
        selectedCompany = User.Claims.FirstOrDefault(c => c.Type == "Company")?.Value;
    }
    
    var decimalFormat = Model.Customer!.CustomerType != nameof(CustomerType.Government) ? SD.Two_Decimal_Format : SD.Four_Decimal_Format;

}

@if (Model.Status == nameof(DRStatus.Canceled))
{
    <div class="disapproved-indicator" style="position: absolute; top: 200px; left: 50%; transform: translate(-50%, 0); z-index: 9999; font-size: 72px; color: red; opacity: 0.5;">
        <b>CANCELED</b>
    </div>
}

@if (Model.Status == nameof(DRStatus.Voided))
{
    <div class="disapproved-indicator" style="position: absolute; top: 200px; left: 50%; transform: translate(-50%, 0); z-index: 9999; font-size: 72px; color: red; opacity: 0.5;">
        <b>VOIDED</b>
    </div>
}

<br class="br-top" />
<table class="w-100">
    <tbody>
        <tr>
            @if (selectedCompany == "Filpride")
            {
                <td class="text-end" style="padding: 0 !important;"><img src="~/img/Filpride.jpg" width="130px" /></td>
            }
            @if (selectedCompany == "Mobility")
            {
                <td class="text-end" style="padding: 0 !important;"><img src="~/img/usa88-logo.png" width="130px" /></td>
            }
        </tr>
        <tr style="margin: 0 !important;">
            <td class="text-center" style="padding: 0 !important;">
                @if (selectedCompany == "Filpride")
                {
                    <h2 class="company-name" style="margin: 0 0 1px 0;"><u><b>&nbsp;FILPRIDE RESOURCES INC.&nbsp;</b></u></h2>
                    <p style="margin: 0; padding: 0; line-height: 1;">
                        57 Westgate Office, Sampson Road, CBD, Subic Bay Freeport Zone,<br />
                        Kalaklan, Olongapo City, 2200 Zambales, Philippines<br />
                        VAT Reg. TIN: 000-216-589-00000
                    </p>
                }
                @if (selectedCompany == "Mobility")
                {
                    <h2 class="company-name"><u><b>&nbsp;MOBILITY GROUP CORP.&nbsp;</b></u></h2>
                    <p style="line-height: 1; margin-top:-7px;">
                        Tower B Phoenix Sun Business Park Eulogio Rodriguez JR, ave.,<br />
                        Bagumbayan Libis 1110 Quezon City NCR, Second District Philippines<br />
                        VAT Reg. TIN: 776-536-510-00000
                    </p>
                }
            </td>
        </tr>
        <tr>
            <td class="text-end" style="padding-top: 10px !important;"><h6 class="series"><b>No.&nbsp;@Html.DisplayFor(model => model.DeliveryReceiptNo)</b></h6></td>
        </tr>
        <tr>
            <td class="text-center" style="padding: 0 !important;"><h3 class="module-name"><b>DELIVERY RECEIPT</b></h3></td>
        </tr>
    </tbody>
</table>

<div class="table-responsive mt-5">
    <table class="w-100">
        <tbody>
            <tr>
                <td class="w-75"><b>Sold To:</b> &nbsp;@Model.CustomerOrderSlip!.Customer?.CustomerName.ToUpper()</td>
                <td class="w-25 text-end align-text-top"><b>Date:</b> &nbsp;@Model.Date.ToString(SD.Date_Format)</td>
            </tr>
            <tr>
                <td class="w-75"><b>Address:</b> &nbsp;@Model.CustomerAddress.ToUpper()</td>
                <td class="w-25 text-end align-text-top"><b>PO No:</b> &nbsp;@(Model.PurchaseOrder?.PurchaseOrderNo)</td>
            </tr>
            <tr>
                <td></td>
                <td class="w-25 text-end align-text-top"><b>Terms:</b> &nbsp;@Model.CustomerOrderSlip.Terms</td>
            </tr>
        </tbody>
    </table>
</div>

<div style="margin-top: 50px">
    <table class="table table-bordered w-100">
        <thead>
            <tr>
                <th scope="col">Product</th>
                <th scope="col">Unit</th>
                <th scope="col">Quantity</th>
            </tr>
        </thead>
        <tbody>
            <tr>
                <td>@Model.CustomerOrderSlip.Product?.ProductName.ToUpper()</td>
                <td>@Model.CustomerOrderSlip.Product?.ProductUnit</td>
                <td>@Model.Quantity.ToString(decimalFormat)</td>
            </tr>
        </tbody>
    </table>
</div>

<div style="margin-top:10px;">
    <table class="table table-bordered w-100">
        <thead>
            <tr>
                <th scope="col">Remarks</th>
                <th scope="col">Others</th>
            </tr>
        </thead>
        <tbody>
            <tr>
                <td class="p-4 w-50" style="padding-left:20px;">@Model.Remarks.ToUpper()</td>
                <td class="p-4 w-50" style="padding-left:20px;">
                    <b>Hauler:</b> &nbsp; @Model.Hauler?.SupplierName.ToUpper()<br />
                    <b>Load Port:</b> &nbsp; @Model.CustomerOrderSlip.PickUpPoint?.Depot.ToUpper()<br />
                    <b>Freight:</b> &nbsp; @Html.DisplayFor(model => model.Freight)<br />
                </td>
            </tr>
        </tbody>
    </table>
</div>

@if (!Model.IsPrinted)
{
    <div class="text-end">
        ORIGINAL COPY
    </div>
}
else
{
    <div class="text-end">
        REPRINT COPY
    </div>
}

<div class="row pt-3">
    @if (Model.Status != nameof(DRStatus.Canceled) && Model.Status != nameof(DRStatus.Voided))
    {
        @if (Model.Status != nameof(CosStatus.ForApprovalOfOM))
        {
            <div class="col-6 col-md-3 pb-2">
                <a onclick="confirmPrint(@Model.DeliveryReceiptId)" class="btn btn-primary form-control buttons">Print</a>
            </div>
        }
        else
        {
            if (User.IsInRole("OperationManager") || User.IsInRole("Admin") || User.IsInRole("HeadApprover"))
            {
                <div class="col-6 col-md-3 pb-2">
                    <a asp-area="Filpride" asp-controller="DeliveryReceipt" asp-action="Post" asp-route-id="@Model.DeliveryReceiptId" class="btn btn-success form-control buttons">Approve</a>
                </div>
            }
        }
    
        <div class="col-6 col-md-3 pb-2">
            <a asp-area="Filpride" asp-controller="DeliveryReceipt" asp-action="GenerateExcel" asp-route-id="@Model.DeliveryReceiptId" class="btn btn-success form-control buttons">Print Excel</a>
        </div>
    }

    <div class="col-6 col-md-3 pb-2">
        <a asp-area="Filpride" asp-controller="DeliveryReceipt" asp-action="Index" asp-route-filterType="@ViewBag.FilterType" class="btn btn-outline-primary border form-control buttons">Back to List</a>
    </div>
</div>

@section Scripts {
    <script>
        document.getElementById('approveButton').addEventListener('click', function () {
            Swal.fire({
                title: 'Are you sure?',
                text: "You won't be able to revert this!",
                icon: 'warning',
                showCancelButton: true,
                confirmButtonColor: '#3085d6',
                cancelButtonColor: '#d33',
                confirmButtonText: 'Yes, post it!'
            }).then((result) => {
                if (result.isConfirmed) {
                    // Proceed to the controller action
                    window.location.href = '@Url.Action("Post", "DeliveryReceipt", new { area = "Filpride", id = Model.DeliveryReceiptId })';
                }
            });
        });
    </script>

    @if (!Model.IsPrinted)
    {
        <script>
            function confirmPrint(id)
            {
                Swal.fire({
                    title: 'Are you sure?',
                    text: "This will mark the document as reprinted and can't be undone.",
                    icon: 'warning',
                    showCancelButton: true,
                    confirmButtonColor: '#3085d6',
                    cancelButtonColor: '#d33',
                    confirmButtonText: 'Yes'
                }).then((result) =>
                {
                    if (result.isConfirmed)
                    {
                        const afterPrintHandler  = () =>
                        {
                            window.removeEventListener('afterprint', afterPrintHandler);
                            controllerThenPrint(id); // only redirect here
                        };
                        window.addEventListener('afterprint', afterPrintHandler);

                        // Close Swal before printing to avoid blank overlay
                        Swal.close();
                        setTimeout(() => { window.print(); }, 200); // small delay to ensure Swal fully closes before print
                    }
                });
            }
        </script>
    }
    else
    {
        <script>
            function confirmPrint(id)
            {
                const afterPrintHandler = () => {
                    window.removeEventListener('afterprint', afterPrintHandler);
                    controllerThenPrint(id);
                };
                window.addEventListener('afterprint', afterPrintHandler);

                window.print();
            }
        </script>
    }
    <script>
        function controllerThenPrint(id) {
            var url = `@Url.Action("Printed", "DeliveryReceipt", new { area = "Filpride" })?id=${id}`;
            window.location.href = url; // only redirect
        }
    </script>
    <script src="~/js/disable-dev-tools-in-print.js" asp-append-version="true"></script>
}