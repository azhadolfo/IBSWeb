@model IEnumerable<FilprideDeliveryReceipt>

@{
    ViewData["Title"] = "Delivery Receipt";
}

<div class="card shadow border-0 mt-4">
    <div class="card-header bg-secondary bg-gradient ml-0 py-3">
        <div class="row">
            <div class="col-12 text-center">
                <h2 class="text-white py-2">DELIVERY RECEIPT</h2>
            </div>
        </div>
    </div>
    <div class="card-body p-4 table-responsive">
        <div class="row pb-3">
            <div class="col-6">
            </div>
            <div class="col-6 text-end">
                <a asp-area="Filpride" asp-controller="DeliveryReceipt" asp-action="Create" class="btn btn-primary">
                    <i class="bi bi-plus-circle"></i> Create New
                </a>
            </div>
        </div>
        <table class="table table-bordered table-striped" id="dataTable">
            <thead>
                <tr>
                    <th>
                        @Html.DisplayNameFor(m => m.DeliveryReceiptNo)
                    </th>
                    <th>
                        @Html.DisplayNameFor(m => m.Date)
                    </th>
                    <th>
                        COS No
                    </th>
                    <th>
                        Hauler
                    </th>
                    <th>
                        Total Amount
                    </th>
                    <th>
                        Status
                    </th>
                    <th></th>
                </tr>
            </thead>
            <tbody>
                @foreach (var obj in Model.OrderBy(u => u.DeliveryReceiptNo))
                {
                    <tr>
                        <td>
                            @obj.DeliveryReceiptNo
                        </td>
                        <td>
                            @Html.DisplayFor(model => obj.Date)
                        </td>
                        <td>
                            @obj.CustomerOrderSlip?.CustomerOrderSlipNo
                        </td>
                        <td>
                            @obj.Hauler?.HaulerName
                        </td>
                        <td>
                            @Html.DisplayFor(model => obj.TotalAmount)
                        </td>
                        <td>
                            @{
                                var status = obj.PostedBy != null && obj.VoidedBy == null && obj.CanceledBy == null
                                    ? "Posted"
                                    : obj.VoidedBy != null
                                        ? "Voided"
                                        : obj.CanceledBy != null
                                            ? "Cancelled"
                                            : "Pending";
                            }
                            <span class="badge rounded-pill @if(status == "Posted") {<text>bg-info</text>} else if(status == "Voided") {<text>bg-danger</text>} else if(status == "Cancelled") {<text>bg-warning</text>}">@status</span>
                        </td>
                        <td class="text-center">
                            <div class="dropdown" style="@(obj.VoidedBy != null || obj.CanceledBy != null ? "display:none;" : "")">
                                <button class="btn btn-light dropdown-toggle" type="button" id="actionsDropdown" data-bs-toggle="dropdown" aria-expanded="false">
                                    Actions
                                </button>
                                <ul class="dropdown-menu" aria-labelledby="actionsDropdown">
                                    @if (obj.PostedBy == null)
                                    {
                                        <li><a class="dropdown-item" asp-area="Filpride" asp-controller="DeliveryReceipt" asp-action="Edit" asp-route-id="@obj.DeliveryReceiptId">Edit</a></li>
                                        <li>
                                            <button class="dropdown-item" type="button" data-bs-toggle="modal" data-bs-target="#Preview-@obj.DeliveryReceiptId" data-bs-url="@Url.Action($"Preview/{obj.DeliveryReceiptId}")">
                                                Preview
                                            </button>
                                        </li>
                                        <li><a class="dropdown-item" onclick="confirmPost(@obj.DeliveryReceiptId)">Post</a></li>
                                        <li><a class="dropdown-item" onclick="confirmCancel(@obj.DeliveryReceiptId)">Cancel</a></li>
                                    }
                                    else
                                    {
                                        <li><a class="dropdown-item" asp-area="Filpride" asp-controller="DeliveryReceipt" asp-action="Preview" asp-route-id="@obj.DeliveryReceiptId">Print</a></li>

                                        <li><a class="dropdown-item" onclick="confirmVoid(@obj.DeliveryReceiptId)">Void</a></li>
                                    }

                                    @if (obj.DeliveredDate == null)
                                    {
                                        <li><a class="dropdown-item" onclick="markAsDelivered(@obj.DeliveryReceiptId)">Mark As Delivered</a></li>
                                    }

                                </ul>
                            </div>

                            @*@await Html.PartialAsync("_Preview", obj)*@
                        </td>
                    </tr>
                }
            </tbody>
        </table>
    </div>
</div>

@section Scripts {
    <script>
        function confirmPost(id) {
            Swal.fire({
                title: 'Are you sure?',
                text: "You won't be able to revert this!",
                icon: 'warning',
                showCancelButton: true,
                confirmButtonColor: '#3085d6',
                cancelButtonColor: '#d33',
                confirmButtonText: 'Yes'
            }).then((result) => {
                if (result.isConfirmed) {
                    // Replace with the actual URL that you want to redirect to
                    var url = `@Url.Action("Post", "DeliveryReceipt", new { area = "Filpride" })/${id}`;
                    window.location.href = url;
                }
            })
        }
    </script>
    <script>
        function confirmVoid(id) {
            Swal.fire({
                title: 'Are you sure?',
                text: "You won't be able to revert this!",
                icon: 'warning',
                showCancelButton: true,
                confirmButtonColor: '#3085d6',
                cancelButtonColor: '#d33',
                confirmButtonText: 'Yes'
            }).then((result) => {
                if (result.isConfirmed) {
                    // Replace with the actual URL that you want to redirect to
                    var url = `@Url.Action("Void", "SalesInvoice", new { area = "Filpride" })/${id}`;
                    window.location.href = url;
                }
            })
        }
    </script>
    <script>
        function confirmCancel(id) {
            Swal.fire({
                title: "Please Input Remarks",
                html:
                    "<input id='cancellationRemarks' type='text' class='swal2-input' placeholder='Remarks'>",
                focusConfirm: false,
                allowEscapeKey: false,
                allowOutsideClick: false,
                icon: 'warning',
                showCancelButton: true,
                confirmButtonColor: '#3085d6',
                cancelButtonColor: '#d33',
                confirmButtonText: 'Yes'
            }).then((result) => {
                if (result.isConfirmed) {
                    var cancellationRemarks = $("#cancellationRemarks").val();
                    // Encode the cancellationRemarks to make it URL safe
                    var encodedRemarks = encodeURIComponent(cancellationRemarks);
                    // Append the encoded remarks as a parameter in the URL
                    //var url = `/SalesInvoice/Cancel?invoiceId=${invoiceId}&cancellationRemarks=${encodedRemarks}`;
                    var url = `@Url.Action("Cancel", "SalesInvoice", new { area = "Filpride" })/${id}`;
                    window.location.href = url;
                }
            })
        }
    </script>
    <script>
        function markAsDelivered(id) {
            Swal.fire({
                title: 'Are you sure?',
                text: "You won't be able to revert this!",
                icon: 'warning',
                showCancelButton: true,
                confirmButtonColor: '#3085d6',
                cancelButtonColor: '#d33',
                confirmButtonText: 'Yes'
            }).then((result) => {
                if (result.isConfirmed) {
                    // Replace with the actual URL that you want to redirect to
                    var url = `@Url.Action("Delivered", "DeliveryReceipt", new { area = "Filpride" })/${id}`;
                    window.location.href = url;
                }
            })
        }
    </script>
}