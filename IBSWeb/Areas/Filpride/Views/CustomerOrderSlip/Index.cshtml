@model IEnumerable<FilprideCustomerOrderSlip>

@{
    ViewData["Title"] = "Customer Order Slip";
}

<div class="card shadow border-0 mt-4">
    <div class="card-header bg-secondary bg-gradient ml-0 py-3">
        <div class="row">
            <div class="col-12 text-center">
                <h2 class="text-white py-2">CUSTOMER ORDER SLIP</h2>
            </div>
        </div>
    </div>
    <div class="card-body p-4 table-responsive">
        <div class="row pb-3">
            <div class="col-6">
            </div>
            <div class="col-6 text-end">
                <a asp-area="Filpride" asp-controller="CustomerOrderSlip" asp-action="Create" class="btn btn-primary">
                    <i class="bi bi-plus-circle"></i> Create New
                </a>
            </div>
        </div>
        <table class="table table-bordered table-hover" id="paginatedTable">
            <thead>
                <tr class="text-nowrap table-secondary">
                    <th>
                        @Html.DisplayNameFor(m => m.CustomerOrderSlipNo)
                    </th>
                    <th>
                        @Html.DisplayNameFor(m => m.Date)
                    </th>
                    <th>
                        Customer
                    </th>
                    <th>
                        Quantity
                    </th>
                    <th>
                        Total Amount
                    </th>
                    <th>
                        Status
                    </th>
                    <th>Actions</th>
                </tr>
            </thead>
        </table>
    </div>
</div>

@section Scripts {
    <script>
        $(document).ready(function () {
            $('#paginatedTable').DataTable({
                "processing": true,
                "serverSide": true,
                "ajax": {
                    "url": "@Url.Action("GetCustomerOrderSlips", "CustomerOrderSlip", new { area = "Filpride" })",
                    "type": "POST",
                    "data": function (d) {
                        return $.extend({}, d, {
                            __RequestVerificationToken: $('input[name="__RequestVerificationToken"]').val()
                        });
                    },
                },
                "columns": [
                    { "data": "customerOrderSlipNo" },
                    { "data": "date", "render": function (data) {
                        var date = new Date(data);
                        return date.toLocaleDateString('en-US', { year: 'numeric', month: 'short', day: '2-digit' });
                    }},
                    { "data": "customer.customerName" },
                    { "data": "quantity" },
                    { "data": "totalAmount", "render": $.fn.dataTable.render.number(',', '.', 4) },
                    {
                        "data": "status",
                        "render": function (data) {
                            var badgeClass = "";
                            switch (data) {
                                case 'Created':
                                    badgeClass = "badge bg-primary";
                                    break;
                                case 'SupplierAppointed':
                                    badgeClass = "badge bg-info";
                                    break;
                                case 'ApprovedByOpsManager':
                                    badgeClass = "badge bg-warning";
                                    break;
                                case 'ApprovedByFinance':
                                    badgeClass = "badge bg-success";
                                    break;
                                case 'HaulerAppointed':
                                    badgeClass = "badge bg-dark";
                                    break;
                                case 'Completed':
                                    badgeClass = "badge bg-success";
                                    break;
                                default:
                                    badgeClass = "badge bg-secondary";
                                    break;
                            }
                            return `<span class="${badgeClass}">${data}</span>`;
                        }
                    },
                    {
                        "data": null,
                        "render": function (data, type, row) {
                            var status = row.status;
                            console.log(row)
                            var customerOrderSlipId = row.customerOrderSlipId;
                            var actions = `<div class="dropdown">
                                             <button class="btn btn-light dropdown-toggle" type="button" id="actionsDropdown" data-bs-toggle="dropdown" aria-expanded="false">Actions</button>
                                             <ul class="dropdown-menu" aria-labelledby="actionsDropdown">`;

                            switch (status) {
                                case 'Created':
                                    actions += `<li><a class="dropdown-item" href="@Url.Action("EditCos", "CustomerOrderSlip", new { area = "Filpride" })/${customerOrderSlipId}">Edit COS</a></li>
                                                <li><a class="dropdown-item" href="@Url.Action("AppointSupplier", "CustomerOrderSlip", new { area = "Filpride" })/${customerOrderSlipId}">Appoint Supplier</a></li>`;
                                    break;
                                case 'SupplierAppointed':
                                case 'ApprovedByOpsManager':
                                    actions += `<li><a class="dropdown-item" href="@Url.Action("Preview", "CustomerOrderSlip", new { area = "Filpride" })/${customerOrderSlipId}">Preview</a></li>`;
                                    break;
                                case 'ApprovedByFinance':
                                    actions += `<li><a class="dropdown-item" href="@Url.Action("Preview", "CustomerOrderSlip", new { area = "Filpride" })/${customerOrderSlipId}">Preview</a></li>
                                                <li><a class="dropdown-item" href="@Url.Action("AppointHauler", "CustomerOrderSlip", new { area = "Filpride" })/${customerOrderSlipId}">Appoint Hauler</a></li>`;
                                    break;
                                case 'HaulerAppointed':
                                    actions += `<li><a class="dropdown-item BookATL" data-supplier-id="${row.purchaseOrder.supplier.supplierName}" data-id="${customerOrderSlipId}" href="#">Book ATL</a></li>`;
                                    break;
                                case 'Completed':
                                    actions += `<li><a class="dropdown-item" href="@Url.Action("Preview", "CustomerOrderSlip", new { area = "Filpride" })/${customerOrderSlipId}">Print</a></li>`;
                                    break;
                                default:
                                    actions += `<li><a class="dropdown-item" href="@Url.Action("Details", "CustomerOrderSlip", new { area = "Filpride" })/${customerOrderSlipId}">View Details</a></li>`;
                                    break;
                            }

                            actions += `</ul></div>`;
                            return actions;
                        }
                    }
                ]
            });
        });
    </script>
    <script>
    $(document).on('click', '.BookATL', function (e) {
    e.preventDefault();

        var supplierId = $(this).data('supplier-id').toUpperCase();
        var customerOrderSlipId = $(this).data('id');

        if (supplierId.includes("UNIOIL")) {
            // If the supplier is 'Azh', ask for the Supplier ATL No and Date of Booking
            Swal.fire({
                title: 'Book Authority To Load',
                html: `
                    <input type="text" id="atlNo" class="swal2-input" placeholder="UPPI ATL No">
                    <input type="date" id="bookingDate" class="swal2-input" placeholder="Date of Booking">`,
                focusConfirm: false,
                showCancelButton: true,
                confirmButtonText: 'Submit',
                preConfirm: () => {
                    const atlNo = Swal.getPopup().querySelector('#atlNo').value;
                    const bookingDate = Swal.getPopup().querySelector('#bookingDate').value;
                    if (!atlNo || !bookingDate) {
                        Swal.showValidationMessage(`Please enter both UPPI ATL No and Date of Booking.`);
                    }
                    return { atlNo: atlNo, bookingDate: bookingDate };
                }
            }).then((result) => {
                if (result.isConfirmed) {
                    var atlNo = result.value.atlNo;
                    var bookingDate = result.value.bookingDate;

                    // Send the Supplier ATL No, Booking Date, and Customer Order Slip ID to the server
                    $.ajax({
                        url: '@Url.Action("BookAuthorityToLoad", "CustomerOrderSlip", new { area = "Filpride" })',
                        type: 'POST',
                        data: {
                            id: customerOrderSlipId,
                            supplierAtlNo: atlNo,
                            bookedDate: bookingDate,
                            __RequestVerificationToken: $('input[name="__RequestVerificationToken"]').val()
                        }
                    });
                }
            });
        } else {
            // For other suppliers, only ask for the Date of Booking
            Swal.fire({
            title: 'Book Authority To Load',
            html: '<input type="date" id="bookedDate" class="swal2-input" placeholder="Select Date">',
            confirmButtonText: 'Submit',
            focusConfirm: false,
            preConfirm: () => {
                const bookedDate = Swal.getPopup().querySelector('#bookedDate').value;
                if (!bookedDate) {
                    Swal.showValidationMessage('Please select a date');
                }
                return bookedDate;
            }
            }).then((result) => {
                if (result.isConfirmed) {
                    // Send the date to the controller via AJAX
                    $.ajax({
                        url: '@Url.Action("BookAuthorityToLoad", "CustomerOrderSlip", new { area = "Filpride" })',
                        type: 'POST',
                        data: {
                            id: customerOrderSlipId,
                            bookedDate: result.value,
                            __RequestVerificationToken: $('input[name="__RequestVerificationToken"]').val()
                        }
                    });
                }
            });
        }
    });
    </script>
}
