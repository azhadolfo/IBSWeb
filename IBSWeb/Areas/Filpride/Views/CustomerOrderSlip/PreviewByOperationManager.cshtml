@using Microsoft.AspNetCore.Identity
@model FilprideCustomerOrderSlip
@inject UserManager<IdentityUser> UserManager

@{
    ViewData["Title"] = "Preview Customer Order Slip";
    var netOfVatProductCost = Model.PurchaseOrder.Price / 1.12m;
    var netOfVatCosPrice = Model.DeliveredPrice / 1.12m;
    var netOfVatFreightCharge = Model.Freight / 1.12m;
    var grossMargin = netOfVatCosPrice - netOfVatProductCost - netOfVatFreightCharge - Model.CommissionRate;
    var vatAmount = (Model.TotalAmount / 1.12m) * 0.12m;
    string formattedString = "N4";
}

<div class="container mt-4">
    <div class="text-end">
        <img src="~/img/Filpride.jpg" width="130px" />
    </div>
    <div class="text-center mb-4">
        <h2><u><b>FILPRIDE RESOURCES INC.</b></u></h2>
        <p>
            57 Westgate Office, Sampson Road, CBD, Subic Bay Freeport Zone, Kalaklan,<br />
            Olongapo City, 2200 Zambales, Philippines<br />
            VAT Reg. TIN: 000-216-589-00000
        </p>
        <h3><b>CUSTOMER ORDER SLIP</b></h3>
        <h6 class="text-end"><b>No.&nbsp;@Html.DisplayFor(model => model.CustomerOrderSlipNo)</b></h6>
    </div>

    <div class="table-responsive">
        <table class="table table-borderless">
            <tbody>
                <tr>
                    <td><b>Customer No:</b> @Model.Customer?.CustomerCode</td>
                    <td class="text-end"><b>Date:</b> @Model.Date.ToString("MMM dd, yyyy")</td>
                </tr>
                <tr>
                    <td><b>Customer Name:</b> @Model.Customer?.CustomerName</td>
                    <td class="text-end"><b>Exp Date:</b> @Html.DisplayFor(model => model.ExpirationDate)</td>
                </tr>
                <tr>
                    <td><b>Terms:</b> @Model.Customer?.CustomerTerms</td>
                    <td class="text-end"><b>PO No:</b> @Model.CustomerPoNo</td>
                </tr>
            </tbody>
        </table>
    </div>

    <div class="table-responsive">
        <table class="table table-bordered">
            <thead>
                <tr>
                    <th>Product</th>
                    <th>Quantity</th>
                    <th>Unit</th>
                    <th>Vat</th>
                    <th>Del Price</th>
                    <th>Total Amount</th>
                </tr>
            </thead>
            <tbody>
                <tr>
                    <td>@Model.PurchaseOrder.Product?.ProductName</td>
                    <td>@Html.DisplayFor(model => model.Quantity)</td>
                    <td>@Model.PurchaseOrder.Product?.ProductUnit</td>
                    <td>@vatAmount.ToString(formattedString)</td>
                    <td>@Html.DisplayFor(model => model.DeliveredPrice)</td>
                    <td>@Html.DisplayFor(model => model.TotalAmount)</td>
                </tr>
            </tbody>
        </table>
    </div>

    <div class="table-responsive">
        <table class="table table-bordered">
            <tr>
                <td><b>REMARKS:</b> @Html.DisplayFor(model => model.Remarks)</td>
            </tr>
        </table>
    </div>

    <div class="table-responsive">
        <table class="table table-bordered">
            <thead>
                <tr>
                    <th class="text-center" colspan="2">Net Delivered Price</th>
                </tr>
            </thead>
            <tbody>
                <tr><td class="text-center">COS Price</td><td>@netOfVatCosPrice.ToString(formattedString)</td></tr>
                <tr><td class="text-center">Product Cost</td><td>@netOfVatProductCost.ToString(formattedString)</td></tr>
                <tr><td class="text-center">Freight Charge</td><td>@netOfVatFreightCharge?.ToString(formattedString)</td></tr>
                <tr><td class="text-center">Commission</td><td>@Html.DisplayFor(model => model.CommissionRate)</td></tr>
                <tr>
                    <td class="text-center">Gross Margin</td>
                    <td>
                        <input type="text" id="grossMarginInput" value="@grossMargin?.ToString(formattedString)" class="form-control"
                               @(Model.FirstApprovedBy != null ? "disabled" : "") />
                    </td>
                </tr>

            </tbody>
        </table>
    </div>

    <div class="text-end">
        @if (!Model.IsPrinted)
        {
            <p>ORIGINAL COPY</p>
        }
        else
        {
            <p>REPRINT COPY</p>
        }
    </div>

    <div class="row pt-2">
        @{
            if (Model.FirstApprovedBy == null)
            {
                <div class="col-6 col-md-3">
                    <a id="approveButton" class="btn btn-primary form-control buttons">Action</a>
                </div>
            }
            else
            {
                <div class="col-6 col-md-3">
                    <a asp-area="Filpride" asp-controller="CustomerOrderSlip" asp-action="Print" asp-route-id="@Model.CustomerOrderSlipNo" onclick="window.print()" class="btn btn-primary form-control buttons">Print</a>
                </div>
            }
        }

        <div class="col-6 col-md-3">
            <a asp-area="Filpride" asp-controller="CustomerOrderSlip" asp-action="Index" class="btn btn-outline-primary border form-control buttons">Back to List</a>
        </div>
    </div>
</div>

@section Scripts {
    <script>
        document.getElementById('approveButton').addEventListener('click', function () {
            const grossMarginValue = document.getElementById('grossMarginInput').value;
            Swal.fire({
                title: 'Choose an action',
                text: "Approve or Disapprove the action.",
                icon: 'question',
                showCancelButton: true,
                showDenyButton: true,
                confirmButtonText: 'Approve',
                denyButtonText: 'Disapprove',
                cancelButtonText: 'Cancel'
            }).then((result) => {
                if (result.isConfirmed) {
                    @*var url = `@Url.Action("ApproveByOperationManager", "CustomerOrderSlip", new { area = "Filpride" })?id=${@Model.CustomerOrderSlipId}&grossMargin=${grossMarginValue}`;*@
                    var url = `@Url.Action("ApproveByOperationManager", "CustomerOrderSlip", new { area = "Filpride", id = Model.CustomerOrderSlipNo })`;
                    window.location.href = url;
                } else if (result.isDenied) {
                    window.location.href = '@Url.Action("Disapprove", "CustomerOrderSlip", new { area = "Filpride", id = Model.CustomerOrderSlipId })';
                }
            });
        });
    </script>
}
