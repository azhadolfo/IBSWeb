@model CheckVoucherNonTradePaymentViewModel

@{
    ViewData["Title"] = "Create Non Trade Payment";
    Layout = "~/Views/Shared/_Layout.cshtml";
}

<div class="card shadow border-0 mt-4">
    <div class="card-header bg-secondary bg-gradient ml-0 py-3">
        <div class="row">
            <div class="col-12 text-center">
                <h2 class="text-white py-2">Create Non-Trade Payment</h2>
            </div>
        </div>
    </div>
    <div class="card-body p-4">
        <form method="post" enctype="multipart/form-data">
            <div class="row">
                <div asp-validation-summary="ModelOnly" class="text-danger"></div>
                <div class="form-group mb-3">
                    <label asp-for="TransactionDate" class="control-label"></label><span class="required">*</span>
                    <input asp-for="TransactionDate" type="Date" class="form-control" value="@DateTime.UtcNow.ToString("yyyy-MM-dd")" />
                    <span asp-validation-for="TransactionDate" class="text-danger"></span>
                </div>
                <div class="form-group mb-3">
                    <label class="control-label">Supplier<span class="required">*</span></label>
                    <select asp-for="MultipleSupplierId" asp-items="@Model.Suppliers" class="form-select js-select2 GetCVList" style="width: 100%" required>
                        <option></option>
                    </select>
                    <span asp-validation-for="MultipleSupplierId" class="text-danger"></span>
                </div>
                <div class="form-group mb-3">
                    <label asp-for="MultipleCvId" class="control-label">CV #</label><span class="required">*</span>
                    <select asp-for="MultipleCvId" asp-items="@Model.CheckVouchers" class="form-select js-multiple multipleCvId" multiple="multiple" style="width:100%" required>
                        <option></option>
                    </select>
                    <span asp-validation-for="MultipleCvId" class="text-danger"></span>
                </div>
                <table class="table">
                    <thead>
                    <tr>
                        <th class="text-center">CV List</th>
                        <th class="text-center">Amount</th>
                    </tr>
                    </thead>
                    <tbody class="cvAmountList">
                    </tbody>
                </table>
                <div class="form-floating mb-3">
                    <input asp-for="Payee" type="text" class="form-control" placeholder="Optional" readonly />
                    <label asp-for="Payee" class="control-label ms-2"></label>
                    <span asp-validation-for="Payee" class="text-danger"></span>
                </div>
                <div class="form-floating mb-3">
                    <input asp-for="PayeeAddress" type="text" class="form-control" placeholder="Optional" readonly />
                    <label asp-for="PayeeAddress" class="control-label ms-2"></label>
                    <span asp-validation-for="PayeeAddress" class="text-danger"></span>
                </div>
                <div class="form-floating mb-3">
                    <input asp-for="PayeeTin" type="text" class="form-control" placeholder="Optional" readonly />
                    <label asp-for="PayeeTin" class="control-label ms-2"></label>
                    <span asp-validation-for="PayeeTin" class="text-danger"></span>
                </div>
                <div class="form-group mb-3">
                    <label asp-for="Total" class="control-label"></label><span class="required">*</span>
                    <input asp-for="Total" class="form-control money totalAmount total" value="" placeholder="0.000" readonly />
                    <span asp-validation-for="Total" class="text-danger"></span>
                </div>
                <div class="form-group mb-3">
                    <label class="control-label">Bank Account<span class="required">*</span></label>
                    <select asp-for="BankId" asp-items="@Model.Banks" class="form-select js-select2" style="width: 100%" required>
                        <option></option>
                    </select>
                    <span asp-validation-for="BankId" class="text-danger"></span>
                </div>
                <div class="form-floating mb-3">
                    <input asp-for="CheckNo" type="text" class="form-control" placeholder="Input check #" />
                    <label asp-for="CheckNo" class="control-label ms-2">Check No.<span class="required">*</span></label>
                    <span asp-validation-for="CheckNo" class="text-danger"></span>
                </div>
                <div class="form-group mb-3">
                    <label asp-for="CheckDate" class="control-label"></label><span class="required">*</span>
                    <input asp-for="CheckDate" type="Date" value="@DateTime.UtcNow.ToString("yyyy-MM-dd")" class="form-control" />
                    <span asp-validation-for="CheckDate" class="text-danger"></span>
                </div>
                <div class="form-group mb-3">
                    <label class="control-label">Upload File (Optional)</label>
                    <input name="file" type="file" class="form-control" />
                </div>
                <div class="form-floating mb-3">
                    <textarea asp-for="Particulars" class="form-control" placeholder="Leave a remarks here" style="height: 100px"></textarea>
                    <label asp-for="Particulars" class="control-label ms-2">Particulars<span class="required">*</span></label>
                    <span asp-validation-for="Particulars" class="text-danger"></span>
                </div>
                <div class="form-group">
                    <table class="table">
                        <thead>
                        <tr>
                            <th>Account No.</th>
                            <th>Account Title</th>
                            <th>
                                Debit
                            </th>
                            <th>
                                Credit
                            </th>
                            <th></th>
                        </tr>
                        </thead>
                        <tbody id="accountingEntriesBody">
                        <tr>
                            <td><input type="text" name="AccountNumber" value="202010200" class="w-100" style='border:none' readonly /></td>
                            <td><input name='AccountTitle' value='AP-Non Trade Payable' class="w-100" style='border:none' readonly /></td>
                            <td><input name="Debit" placeholder="0.0000" class="w-100 debit" style='border:none' readonly /></td>
                            <td><input name="Credit" value='0.0000' class="w-100" style='border:none' readonly /></td>
                            <td></td>
                        </tr>
                        <tr>
                            <td><input type="text" name="AccountNumber" value="101010100" class="w-100" style='border:none' readonly /></td>
                            <td><input name='AccountTitle' value='Cash in Bank' class="w-100" style='border:none' readonly /></td>
                            <td><input name="Debit" value='0.0000' class="w-100" style='border:none' readonly /></td>
                            <td><input name="Credit" value='0.0000' class="w-100 cib-credit" style='border:none' readonly /></td>
                            <td></td>
                        </tr>
                        </tbody>
                        <tbody>
                        <tr>
                            <td class="text-end" colspan="2">TOTAL:</td>
                            <td class="totalDebit">0.0000</td>
                            <td class="totalCredit">0.0000</td>
                            <td></td>
                        </tr>
                        </tbody>
                    </table>
                </div>
                <br />
                <div class="row pt-2">
                    <div class="col-6 col-md-3">
                        <button type="submit" class="btn btn-primary form-control" onclick="validateDebitAndCredit(event)">Create</button>
                    </div>
                    <div class="col-6 col-md-3">
                        <a asp-area="Filpride" asp-controller="CheckVoucherNonTradePayment" asp-action="Index" class="btn btn-outline-primary border  form-control ">Back to List</a>
                    </div>
                </div>
            </div>
        </form>
    </div>
</div>

@section Scripts {
    @{
        await Html.RenderPartialAsync("_ValidationScriptsPartial");
    }
    <script>
        $(document).ready(function () {
            // Store the form submit state
            let isSubmitting = false;

            $('form').on('submit', function (e) {
                // If the form is already submitting, prevent additional submissions
                if (isSubmitting) {
                    e.preventDefault();
                    return;
                }

                // Get the submit button
                const submitButton = $(this).find('button[type="submit"]');

                // Set submitting state to true
                isSubmitting = true;

                // Disable the submit button and change text to show processing
                submitButton.prop('disabled', true)
                    .html('<span class="spinner-border spinner-border-sm" role="status" aria-hidden="true"></span> Processing...');

                // Optional: Re-enable the button after 30 seconds in case of network issues
                setTimeout(function() {
                    submitButton.prop('disabled', false).html('Create');
                    isSubmitting = false;
                }, 30000);
            });

            // Optional: Reset form state when navigating away or if there's an error
            $(window).on('beforeunload', function() {
                isSubmitting = false;
                $('button[type="submit"]').prop('disabled', false).html('Create');
            });
        });
        
        $('#AccountNo').select2({
            dropdownParent: $('#AddAccEntry')
        });
        
        $("#MultipleSupplierId").change(function () {
            let supplierId = $(this).val();
            getSupplierDetails(supplierId)
        });

        function getSupplierDetails(supplierId) {
            if (supplierId !== "") {
                $.ajax({
                    url: '@Url.Action("GetSupplierDetails", "CheckVoucherNonTradePayment", new { area = "Filpride" })',
                    method: "GET",
                    data: { supplierId: supplierId },
                    success: function (data) {
                        if (data) {
                            $("#Payee").val(data.name);
                            $("#PayeeAddress").val(data.address);
                            $("#PayeeTin").val(data.tinNo);
                        }
                    },
                    error: function (xhr, status, error) {
                        console.error("Error occurred:", status, error);
                    }
                });
            } else {
                $("#Payee").val("");
                $("#PayeeAddress").val("");
                $("#PayeeTin").val("");
            }
        }

        $(function () {
            $(".GetCVList").change(function () {
                var suppId = $(this).val();
                if (suppId !== "") {
                    // Make an AJAX request to get the POs based on the selected SupplierId
                    $.ajax({
                        url: "@Url.Action("GetCVs", "CheckVoucherNonTradePayment")",
                        method: "GET",
                        data: { supplierId: suppId }, // Corrected parameter name
                        success: function (data) {
                            if (data) {
                                // Clear existing options
                                $(".multipleCvId").empty();
                                // Add new options based on the fetched data
                                $.each(data, function (index, cv) {
                                    if (cv && cv.cvNumber) { // Adjust property name to poNumber
                                        $('.multipleCvId').append('<option value="' + cv.id + '">' + cv.cvNumber + '</option>'); // Adjust property names
                                    } else {
                                        console.error("Invalid CV object:", cv);
                                    }
                                });
                            } else {
                                // Clear the fields if no POs are found
                                $(".multipleCvId").empty();
                            }
                        },
                        error: function (xhr, status, error) {
                            console.error('Error fetching CVs:', error);
                        }
                    });
                } else {
                    // Clear the fields if no supplier is selected
                    $(".multipleCvId").empty();
                }
            });
        });

        $(document).ready(function () {
            $("#MultipleCvId").change(function () {
                let cvSelect = $("#MultipleCvId").val();
                let supplierId = $(".GetCVList").val();

                // Clear the table before adding new rows
                $(".cvAmountList").empty();

                // Loop through each selected option and add it to the table
                cvSelect.forEach(function (cvId) {
                    var cvSelectText = $("#MultipleCvId option[value='" + cvId + "']").text();
                    var newRow = `<tr>
                                        <td><input type='text' value='${cvSelectText}' style='border:none' class="w-100 text-center" readonly /></td>
                                        <td><input type='text' name='AmountPaid' class='inputAmount money w-100 text-end paymentAmount_${cvId} amountPaid_${cvId}' /></td>
                                    </tr>`;
                    $(".cvAmountList").append(newRow);
                    $(".paymentAmount_" + cvId).on('input', function () {
                        var inputValue = $(this).val();
                        paymentInputValue(inputValue)
                    });
                    getCheckVoucherInvoiceDetails(cvId, supplierId)
                });
                updateTotalDebitAndCredit();
            });
        });

        function getCheckVoucherInvoiceDetails(cvId, supplierId) {
            if (cvId && cvId.length > 0) { // Ensure it's not null or empty
                $.ajax({
                    url: '@Url.Action("GetMultipleInvoiceDetails", "CheckVoucherNonTradePayment", new { area = "Filpride" })',
                    method: "GET",
                    traditional: true, // Ensures proper serialization of arrays
                    data: { cvId: cvId, supplierId : supplierId },
                    success: function (data) {
                        if (data) {
                            $("#Particulars").val(data.particulars);
                            $(".amountPaid_" + cvId).val(data.invoiceAmount);

                            $("#accountingEntriesBody tr:first-child").find("input[name='AccountNumber']").val(data.apAccount.accountNumber);
                            $("#accountingEntriesBody tr:first-child").find("input[name='AccountTitle']").val(data.apAccount.accountTitle);
                            
                            updateAmounts();
                        }
                    },
                    error: function (xhr, status, error) {
                        console.error("Error occurred:", status, error);
                    }
                });
            } else {
                $(".total").val("");
                $(".cib-credit").val("");
                $(".debit").val("");
                $("#Particulars").val("");
                $(".amountPaid_" + cvId).val("");
            }
            updateTotalDebitAndCredit();
        }

        function paymentInputValue(inputValue) {
            var totalAmount = inputValue;
            var formattedValue = formatNumber(totalAmount);
            $("#Total").val(formattedValue);
            $(".cib-credit").val(formattedValue);
            $(".debit").val(formattedValue);
            updateTotalDebitAndCredit();
        }

        $(document).ready(function () {
            $("#MultipleCvId").change(function () {
                updateAmounts();
            });

            $(document).on('input', '.inputAmount', function () {
                updateAmounts();
            });

            $("#MultipleCvId").trigger("change");
        });

        function updateAmounts() {
            var amountInputs = document.querySelectorAll('.inputAmount');
            var totalAmount = 0;
            amountInputs.forEach(function (input) {
                var rawValue = input.value;
                var cvAmount = parseNumber(rawValue);
                totalAmount += cvAmount;
            });
            $("#Total").val(formatNumber(totalAmount));
            $(".cib-credit").val(formatNumber(totalAmount));
            $(".debit").val(formatNumber(totalAmount));
            updateTotalDebitAndCredit();
        }

        function updateTotalDebitAndCredit() {
            var totalDebit = 0;
            var totalCredit = 0;

            // Loop through each row in the table body and sum up the debit values
            $("#accountingEntriesBody tr").each(function () {
                var debitInput = $(this).find("td:eq(2) input").val();
                var creditInput = $(this).find("td:eq(3) input").val();
                // Ensure debitInput and creditInput are strings before using replace
                debitInput = debitInput ? String(debitInput) : ""; // convert to string if not null/undefined
                creditInput = creditInput ? String(creditInput) : "";

                var debit = parseNumber(debitInput);
                var credit = parseNumber(creditInput);

                totalDebit += debit;
                totalCredit += credit;
            });
            // Display the total debit value
            $(".totalDebit").text(formatNumber(totalDebit));
            $(".totalCredit").text(formatNumber(totalCredit));
            $("#debit").val("0.000");
            $("#credit").val("0.000");
        }
    
    </script>
    <script>
        function validateDebitAndCredit(event) {
            var totalDebit = parseNumber($(".totalDebit").text());
            var totalCredit = parseNumber($(".totalCredit").text());

            if (totalDebit !== totalCredit) {
                alert("Debit and Credit totals must be equal.");
                event.preventDefault(); // Prevent form submission
                return false;
            }

            if (totalDebit === 0 && totalCredit === 0) {
                alert("Debit and Credit cannot both be zero.");
                event.preventDefault(); // Prevent form submission
                return false;
            }

            return true; // Allow form submission
        }
    </script>
}