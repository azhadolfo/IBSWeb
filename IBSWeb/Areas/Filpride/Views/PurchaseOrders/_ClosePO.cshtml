@using Microsoft.AspNetCore.Identity
@model PurchaseOrder
@{
    decimal postedQuantity = 0m;
    decimal totalPostedQuantity = 0m;
    decimal unPostedQuantity = 0m;
    decimal totalUnPostedQuantity = 0m;
}

<div class="modal fade" id="ClosePO-@Model.PurchaseOrderId" data-bs-backdrop="static" aria-labelledby="PreviewPOLabel" aria-hidden="true">
    <div class="modal-dialog modal-xl">
        <div class="modal-content">
            <div class="modal-header">
                <h5 class="modal-title" id="PreviewPOLabel">Close PO</h5>
                <button type="button" class="btn-close" data-bs-dismiss="modal" aria-label="close">
                </button>
            </div>
            <div class="modal-body">
                <table class="table">
                    <tbody>
                        <tr>
                            <th class="w-50">PONo.</th>
                            <th class="w-50">Quantity</th>
                        </tr>
                        <tr>
                            <td>@Model.PurchaseOrderNo</td>
                            <td>@Model.Quantity</td>
                        </tr>

                        @if (Model.RrList.Where(rr => rr.PostedBy != null).Any())
                        {
                            <tr>
                                <th>RRNo.(Posted RR)</th>
                                <th>Quantity</th>
                            </tr>

                            foreach (var rrPosted in Model.RrList.Where(rr => rr.PostedBy != null))
                            {
                                <tr>
                                    <td>@rrPosted.ReceivingReportNo</td>
                                    <td>@rrPosted.QuantityReceived</td>
                                </tr>
                                postedQuantity += rrPosted.QuantityReceived;
                            }
                            totalPostedQuantity = Model.Quantity - postedQuantity;
                            <tr>
                                <th class="text-end">Total Quantity(Only Posted RR):</th>
                                <td>@totalPostedQuantity</td>
                            </tr>
                        }

                        @if (Model.RrList.Where(rr => rr.PostedBy == null && rr.CanceledBy == null).Any())
                        {
                            <tr>
                                <th>RRNo.(Unposted RR)</th>
                                <th>Quantity</th>
                            </tr>

                            foreach (var rrNotPosted in Model.RrList.Where(rr => rr.PostedBy == null && rr.CanceledBy == null))
                            {
                                <tr>
                                    <td>@rrNotPosted.ReceivingReportNo</td>
                                    <td>@rrNotPosted.QuantityReceived</td>
                                </tr>
                                unPostedQuantity += rrNotPosted.QuantityReceived;
                            }
                            totalUnPostedQuantity = (Model.Quantity - unPostedQuantity) - postedQuantity;
                            <tr>
                                <th class="text-end">Total Quantity(Posted and Unposted):</th>
                                <td>@totalUnPostedQuantity</td>
                            </tr>
                        }
                    </tbody>
                </table>
                <div class="form-group">
                    <button type="button" class="btn btn-secondary" data-bs-dismiss="modal">Back</button>
                    <a asp-action="ClosePO" asp-route-id="@Model.PurchaseOrderId" class="btn btn-primary">Confirm</a>
                </div>
            </div>
        </div>
    </div>
</div>