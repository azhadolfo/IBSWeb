@using IBS.Utility.Enums
@model ServiceInvoiceViewModel

@{
    ViewData["Title"] = "Create Service Invoice";
    Layout = "~/Views/Shared/_Layout.cshtml";
}

<link rel="stylesheet" href="~/css/form-style.css">

<div class="loader-container">
    <div class="loader"></div>
    <div class="loader-text">Loading...</div>
</div>
<div class="card shadow border-0 mt-4">
    <div class="card-header bg-secondary bg-gradient ml-0 py-3">
        <div class="row">
            <div class="col-12 text-center">
                <h2 class="text-white py-2">Create Service Invoice</h2>
            </div>
        </div>
    </div>
    <div class="card-body p-4">
        <form asp-action="Create">
            @Html.AntiForgeryToken()
            <div asp-validation-summary="ModelOnly" class="text-danger"></div>
            <div class="form-group mb-3">
                <label class="control-label">Type<span class="required">*</span></label>
                <select asp-for="Type" class="form-select js-select2 border-0 shadow" style="width:100%; max-height: 200px;">
                    <option value="" selected disabled>Select SI type</option>
                    @foreach (var documentType in Enum.GetValues<DocumentType>())
                    {
                        <option value="@documentType">@documentType.ToString()</option>
                    }
                </select>
                <span asp-validation-for="Type" class="text-danger"></span>
            </div>
            <div class="form-group mb-3">
                <label asp-for="CustomerId" class="control-label">Customer<span class="required">*</span></label>
                <select asp-for="CustomerId" class="form-control js-select2" asp-items="@Model.Customers" required style="width:100%">
                    <option></option>
                </select>
                <span asp-validation-for="CustomerId" class="text-danger"></span>
            </div>
            <div class="form-group mb-3">
                <label asp-for="ServiceId" class="control-label">Particulars<span class="required">*</span></label>
                <select asp-for="ServiceId" class="form-control js-select2" asp-items="@Model.Services" style="width:100%">
                    <option></option>
                </select>
                <span asp-validation-for="ServiceId" class="text-danger"></span>
            </div>
            <div id="drDiv" class="form-group mb-3" style="display: none">
                <label asp-for="DeliveryReceiptId" class="control-label">DR<span class="required">*</span></label>
                <select asp-for="DeliveryReceiptId" 
                        class="form-control js-select2" 
                        asp-items="@Model.DeliveryReceipts" 
                        style="width:100%">
                    <option></option>
                </select>
                <span asp-validation-for="DeliveryReceiptId" class="text-danger"></span>
            </div>
            <div class="form-group mb-3">
                <label asp-for="DueDate" class="control-label">Due Date<span class="required">*</span></label>
                <input asp-for="DueDate" type="date" class="form-control" value=""/>
                <span asp-validation-for="DueDate" class="text-danger"></span>
            </div>
            <div class="form-floating mb-3">
                <input asp-for="Discount" class="form-control moneyInput" placeholder="0.000"/>
                <label asp-for="Discount" class="control-label">Discount</label>
                <span asp-validation-for="Discount" class="text-danger"></span>
            </div>
            <div class="form-floating mb-3">
                <textarea asp-for="Instructions" class="form-control" placeholder="Leave a instruction here" id="instructions" style="height: 100px"></textarea>
                <label for="instructions" class="control-label">Instructions</label>
                <span asp-validation-for="Instructions" class="text-danger"></span>
            </div>
            <div id="period-amount-fields" class="row g-2 mb-3">
                <div class="col-sm mb-3">
                    <label asp-for="Period" class="control-label">Period<span class="required">*</span></label>
                    <input asp-for="Period" type="month" value="@DateTimeHelper.GetCurrentPhilippineTime().ToString("yyyy-MM")" class="form-control"/>
                    <span asp-validation-for="Period" class="text-danger"></span>
                </div>
                <div class="col-sm mb-3">
                    <label asp-for="Total" class="control-label">Total<span class="required">*</span></label>
                    <input asp-for="Total" class="form-control money" placeholder="0.00"/>
                    <span asp-validation-for="Total" class="text-danger"></span>
                </div>
            </div>

            <div class="row pt-2">
                <div class="col-6 col-md-3">
                    <button type="submit" class="btn btn-primary form-control">Create</button>
                </div>
                <div class="col-6 col-md-3">
                    <a asp-area="Filpride" asp-controller="ServiceInvoice" asp-action="Index" class="btn btn-outline-primary border  form-control ">Back to List</a>
                </div>
            </div>
        </form>
    </div>
</div>

@section Scripts {
    @{
        await Html.RenderPartialAsync("_ValidationScriptsPartial");
    }

    <script>
        $(document).ready(function () {
            const $serviceSelect = $('select[name="ServiceId"]');
            const $customerSelect = $('select[name="CustomerId"]');
            const $drSelect = $('select[name="DeliveryReceiptId"]');
            const $drFormGroup = $('#drDiv');
            const $totalField = $('input[name="Total"]');

            let drTotalMap = {}; // Map DR ID to its gross total

            function fetchDRs() {
                const serviceText = $serviceSelect.find('option:selected').text().trim().toUpperCase();
                const customerId = $customerSelect.val();

                if (serviceText === "TRANSACTION FEE" && customerId) {
                    $drFormGroup.show();

                    $.ajax({
                        url: '@Url.Action("GetDRsByCustomer", "ServiceInvoice", new { area = "Filpride" })',
                        type: 'GET',
                        data: { customerId: customerId },
                        beforeSend: function () {
                            $drSelect.prop("disabled", true);
                            drTotalMap = {};
                            $totalField.prop("readonly", true).val('');
                        },
                        success: function (data) {
                            $drSelect.empty();

                            if (data?.length > 0) {
                                $.each(data, function (index, dr) {
                                    $drSelect.append(new Option(dr.text, dr.value));
                                    drTotalMap[dr.value] = parseFloat(dr.grossTotal);
                                });
                            } else {
                                $drSelect.append(new Option("No related DRs found", ""));
                            }

                            $drSelect.prop("disabled", false);
                            calculateTotal(); // Initial total
                        },
                        error: function () {
                            alert("Error fetching delivery receipts.");
                            $drSelect.prop("disabled", false);
                        }
                    });
                } else {
                    $drFormGroup.hide();
                    $drSelect.empty().append(new Option(""));
                    $totalField.prop("readonly", false).val('');
                }
            }

            function calculateTotal() {
                let total = 0;
                $drSelect.find('option:selected').each(function () {
                    const id = $(this).val();
                    if (drTotalMap[id]) {
                        total += drTotalMap[id];
                    }
                });
                $totalField.val(total.toFixed(2));
            }

            $serviceSelect.on("change", fetchDRs);
            $customerSelect.on("change", function () {
                if ($serviceSelect.val()) fetchDRs();
            });
            $drSelect.on("change", calculateTotal);

            fetchDRs(); // On load
        });
    </script>


}