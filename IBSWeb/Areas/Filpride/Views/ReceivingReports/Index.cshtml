@model IEnumerable<ReceivingReport>
@using Microsoft.AspNetCore.Identity
@inject SignInManager<IdentityUser> SignInManager
@inject UserManager<IdentityUser> UserManager
@{
    ViewData["Title"] = "Receiving Report";
    Layout = "~/Views/Shared/_Layout.cshtml";
}

<div class="card shadow border-0 mt-4">
    <div class="card-header bg-secondary bg-gradient ml-0 py-3">
        <div class="row">
            <div class="col-12 text-center">
                <h2 class="text-white py-2">RECEIVING REPORT</h2>
            </div>
        </div>
    </div>
    <div class="card-body p-4 table-responsive">
        <div class="row pb-3">
            <div class="col-6">
            </div>
            <div class="col-6 text-end">
                <a asp-area="Filpride" asp-controller="ReceivingReports" asp-action="Create" class="btn btn-primary">
                    <i class="bi bi-plus-circle"></i> Create New
                </a>
            </div>
        </div>
        <table class="table table-bordered table-striped" id="dataTable">
            <thead>
                <tr>
                    <th class="text-start">
                        @Html.DisplayNameFor(model => model.ReceivingReportNo)
                    </th>
                    <th>
                        @Html.DisplayNameFor(model => model.Date)
                    </th>
                    <th>
                        @Html.DisplayNameFor(model => model.PurchaseOrder.PurchaseOrderNo)
                    </th>
                    <th>
                        Delivered
                    </th>
                    <th>
                        Received
                    </th>
                    <th></th>
                </tr>
            </thead>
            <tbody>
                @foreach (var item in Model)
                {
                    <tr>
                        <td class="text-start">
                            @Html.DisplayFor(modelItem => item.ReceivingReportNo)
                        </td>
                        <td>
                            @item.Date.ToString("MM/dd/yyyy")
                        </td>
                        <td>
                            @Html.DisplayFor(modelItem => item.PurchaseOrder.PurchaseOrderNo)
                        </td>
                        <td>
                            @item.QuantityDelivered.ToString("N4")
                        </td>
                        <td>
                            @item.QuantityReceived.ToString("N4")
                        </td>
                        <td class="text-center">
                            @if (item.CreatedBy == UserManager.GetUserName(User))
                            {
                                <div class="dropdown">
                                    <button class="btn btn-light dropdown-toggle" type="button" id="actionsDropdown" data-bs-toggle="dropdown" aria-expanded="false">
                                        Actions
                                    </button>
                                    <ul class="dropdown-menu" aria-labelledby="actionsDropdown">
                                        @if (item.VoidedBy == null && item.CanceledBy == null)
                                        {
                                            <li><a asp-action="Edit" asp-route-id="@item.ReceivingReportId" class="dropdown-item">Edit</a></li>
                                        }

                                        @if (item.PostedBy == null && item.VoidedBy == null && item.CanceledBy == null)
                                        {
                                            <li>
                                                <button class="dropdown-item" type="button" data-bs-toggle="modal" data-bs-target="#Preview-@item.ReceivingReportId" data-bs-url="@Url.Action($"Preview/{item.ReceivingReportId}")">
                                                    Preview
                                                </button>
                                            </li>
                                            <li><a class="dropdown-item" onclick="confirmPost(@item.ReceivingReportId)">Post</a></li>
                                            <li><a class="dropdown-item" onclick="confirmCancel(@item.ReceivingReportId)">Cancel</a></li>
                                        }

                                        @if (item.PostedBy != null && item.VoidedBy == null && item.CanceledBy == null)
                                        {
                                            <li><a class="dropdown-item" asp-action="Print" asp-route-id="@item.ReceivingReportId">Print</a></li>
                                            <li>
                                                @if (item.AmountPaid == 0)
                                                {
                                                    <a class="dropdown-item" onclick="confirmVoid(@item.ReceivingReportId)">Void</a>
                                                }
                                                else
                                                {
                                                    <button class="dropdown-item" disabled readonly>Void</button>
                                                }
                                            </li>
                                        }
                                    </ul>
                                </div>
                            }

                            @if (item.VoidedBy != null)
                            {
                                <span class="badge rounded-pill bg-danger">VOIDED</span>
                            }
                            else if (item.CanceledBy != null)
                            {
                                <span class="badge rounded-pill bg-warning">CANCELLED</span>
                            }
                            else
                            {
                                @if (item.CreatedBy != UserManager.GetUserName(User))
                                {
                                    <span class="badge rounded-pill bg-info">VALID</span>
                                }
                            }
                            @await Html.PartialAsync("_Preview", item)
                        </td>
                    </tr>
                }
            </tbody>
        </table>
    </div>
</div>

@section Scripts {
    <script>
        function confirmPost(id) {
            console.log(id);
            Swal.fire({
                title: 'Are you sure?',
                text: "You won't be able to revert this!",
                icon: 'warning',
                showCancelButton: true,
                confirmButtonColor: '#3085d6',
                cancelButtonColor: '#d33',
                confirmButtonText: 'Yes'
            }).then((result) => {
                if (result.isConfirmed) {
                    // Replace with the actual URL that you want to redirect to
                    var url = `@Url.Action("Post", "ReceivingReports", new { area = "Filpride" })/${id}`;
                    window.location.href = url;
                }
            })
        }
    </script>
    <script>
        function confirmVoid(id) {
            console.log(id);
            Swal.fire({
                title: 'Are you sure?',
                text: "You won't be able to revert this!",
                icon: 'warning',
                showCancelButton: true,
                confirmButtonColor: '#3085d6',
                cancelButtonColor: '#d33',
                confirmButtonText: 'Yes'
            }).then((result) => {
                if (result.isConfirmed) {
                    // Replace with the actual URL that you want to redirect to
                    var url = `@Url.Action("Void", "ReceivingReports", new { area = "Filpride" })/${id}`;
                    window.location.href = url;
                }
            })
        }
    </script>
    <script>
        function confirmCancel(id) {
            console.log(id);
            Swal.fire({
                title: "Please Input Remarks",
                html:
                    "<input id='cancellationRemarks' type='text' class='swal2-input' placeholder='Remarks'>",
                focusConfirm: false,
                allowEscapeKey: false,
                allowOutsideClick: false,
                icon: 'warning',
                showCancelButton: true,
                confirmButtonColor: '#3085d6',
                cancelButtonColor: '#d33',
                confirmButtonText: 'Yes'
            }).then((result) => {
                if (result.isConfirmed) {
                    var cancellationRemarks = $("#cancellationRemarks").val();
                    // Encode the cancellationRemarks to make it URL safe
                    var encodedRemarks = encodeURIComponent(cancellationRemarks);
                    // Append the encoded remarks as a parameter in the URL
                    var url = `@Url.Action("Cancel", "ReceivingReports", new { area = "Filpride" })/${id}`;
                    window.location.href = url;
                }
            })
        }
    </script>
}