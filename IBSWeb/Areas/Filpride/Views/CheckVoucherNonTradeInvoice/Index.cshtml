@using IBS.Utility.Constants
@using IBS.Utility.Enums
@model IEnumerable<FilprideCheckVoucherDetail>
@{
    ViewData["Title"] = "Check Voucher Non Trade Invoice";
    Layout = "~/Views/Shared/_Layout.cshtml";
    var department = ViewData["Department"].ToString();
}

<div class="card shadow border-0 mt-4">
    <div class="card-header bg-secondary bg-gradient ml-0 py-3">
        <div class="row">
            <div class="col-12 text-center">
                <h2 class="text-white py-2">NON-TRADE INVOICE</h2>
            </div>
        </div>
    </div>
    <div class="card-body p-4 table-responsive">
        <div class="row pb-3">
            <div class="col-6">
            </div>
            <div class="col-6 text-end">
                <a asp-area="Filpride" asp-controller="CheckVoucherNonTradeInvoice" asp-action="Create" class="btn btn-primary">
                    <i class="bi bi-plus-circle"></i> Create
                </a>
                @if (department == SD.Department_HRAndAdminOrLegal || User.IsInRole("Admin"))
                {
                    <a asp-area="Filpride" asp-controller="CheckVoucherNonTradeInvoice" asp-action="CreatePayrollInvoice" class="btn btn-primary">
                        <i class="bi bi-plus-circle"></i> Create Payroll Invoice
                    </a>
                }
            </div>
        </div>
        <table class="table table-bordered table-hover" id="paginatedTable">
            <thead>
                <tr class="text-nowrap table-secondary">
                    <th>
                        Invoice No.
                    </th>
                    <th>
                        Date
                    </th>
                    <th>
                        Supplier Name
                    </th>
                    <th class="text-start">
                        Payable Amount
                    </th>
                    <th class="text-start">
                        Amount Paid
                    </th>
                    <th class="text-start">
                        Balance
                    </th>
                    <th>
                        Status
                    </th>
                    <th></th>
                </tr>
            </thead>
            <tfoot>
                <tr class="text-nowrap table-secondary">
                    <th></th>
                    <th></th>
                    <th class="text-end">Grand Total:</th>
                    <th id="totalAmount" class="text-end"></th>
                    <th id="totalAmountPaid" class="text-end"></th>
                    <th id="totalBalance" class="text-end"></th>
                    <th></th>
                    <th></th>
                </tr>
            </tfoot>
        </table>
    </div>
</div>

@section Scripts {
    <script>
        function confirmVoid(id) {
            Swal.fire({
                title: 'Are you sure?',
                text: "You won't be able to revert this!",
                icon: 'warning',
                showCancelButton: true,
                confirmButtonColor: '#3085d6',
                cancelButtonColor: '#d33',
                confirmButtonText: 'Yes'
            }).then((result) => {
                if (result.isConfirmed) {
                    // Replace with the actual URL that you want to redirect to
                    var url = `@Url.Action("Void", "CheckVoucherNonTradeInvoice", new { area = "Filpride" })/${id}`;
                    window.location.href = url;
                }
            })
        }
    </script>
    <script>
        function confirmCancel(id) {
            Swal.fire({
                title: "Please Input Remarks",
                html:
                    "<input id='cancellationRemarks' type='text' class='swal2-input' placeholder='Remarks'>",
                focusConfirm: false,
                allowEscapeKey: false,
                allowOutsideClick: false,
                icon: 'warning',
                showCancelButton: true,
                confirmButtonColor: '#3085d6',
                cancelButtonColor: '#d33',
                confirmButtonText: 'Yes'
            }).then((result) => {
                if (result.isConfirmed) {
                    var cancellationRemarks = $("#cancellationRemarks").val();
                    // Encode the cancellationRemarks to make it URL safe
                    var encodedRemarks = encodeURIComponent(cancellationRemarks);
                    // Append the encoded remarks as a parameter in the URL
                    var url = `@Url.Action("Cancel", "CheckVoucherNonTradeInvoice", new { area = "Filpride" })?id=${id}&cancellationRemarks=${encodedRemarks}`;
                    window.location.href = url;
                }
            })
        }
    </script>
    <script>
        $(document).ready(function () {
            var table = $('#paginatedTable').DataTable({
                "processing": true,
                "serverSide": true,
                "stateSave": true,
                "stateDuration": 86400,
                "language": {
                    "processing": "Loading data..."
                },
                "ajax": {
                    "url": "@Url.Action("GetInvoiceCheckVouchers", "CheckVoucherNonTradeInvoice", new { area = "Filpride" })",
                    "type": "POST",
                    "data": function (d) {
                        return $.extend({}, d, {
                            __RequestVerificationToken: $('input[name="__RequestVerificationToken"]').val()
                        });
                    },
                    "error": function (xhr, error, thrown) {
                        console.error('DataTables error:', error);
                        alert('An error occurred while loading the data');
                    }
                    
                },
                "preDrawCallback": function(settings) {
                    $('#paginatedTable').addClass('table-loading');
                },
                "drawCallback": function(settings) {
                    $('#paginatedTable').removeClass('table-loading');
                },
                "columns": [
                    { "data": "transactionNo" },
                    {
                        "data": "checkVoucherHeader.date",
                        "name": "date",
                        "render": function (data, type, row) {
                            // Assuming 'Date' is in ISO format like "2024-07-12T00:00:00"
                            var date = new Date(data);
                            return date.toLocaleDateString('en-US', { year: 'numeric', month: 'short', day: '2-digit' });
                        }
                    },
                    { "data": data => data.supplier ? data.supplier.supplierName : data.checkVoucherHeader.supplier.supplierName },
                    {
                        "data": "invoiceAmount",
                        "render": function (data, type, row) {
                            if (row.amount > 0) {
                                var amount = $.fn.dataTable.render.number(',', '.', 4).display(row.amount);
                                return `<span class="text-end d-block">${amount}</span>`;
                            }
                            else{
                                var amount = $.fn.dataTable.render.number(',', '.', 4).display(row.checkVoucherHeader.invoiceAmount);
                                return `<span class="text-end d-block">${amount}</span>`;
                            }
                        }
                    },
                    {
                        "data": "amountPaid",
                        "render": function (data, type, row) {
                            if (row.amount > 0) {
                                var amount = $.fn.dataTable.render.number(',', '.', 4).display(row.amountPaid);
                                return `<span class="text-end d-block">${amount}</span>`;
                            }
                            else{
                                var amount = $.fn.dataTable.render.number(',', '.', 4).display(row.checkVoucherHeader.amountPaid);
                                return `<span class="text-end d-block">${amount}</span>`;
                            }
                        }
                    },
                    {
                        "data": null,
                        "render": function (data, type, row) {
                            if (row.amount > 0) {
                                var amount = $.fn.dataTable.render.number(',', '.', 4).display((row.amount - row.amountPaid));
                                return `<span class="text-end d-block">${amount}</span>`;
                            }
                            else{
                                var amount = $.fn.dataTable.render.number(',', '.', 4).display((row.checkVoucherHeader.invoiceAmount - row.checkVoucherHeader.amountPaid));
                                return `<span class="text-end d-block">${amount}</span>`;
                            }
                        }
                    },
                    {
                        "data": "checkVoucherHeader.status",
                        "render": function (data, type, row) {
                            var statusClass = row.checkVoucherHeader.status == "@nameof(CheckVoucherInvoiceStatus.ForPayment)" ? "bg-info" :
                                row.checkVoucherHeader.status == "@nameof(CheckVoucherInvoiceStatus.Voided)" ? "bg-danger" :
                                    row.checkVoucherHeader.status == "@nameof(CheckVoucherInvoiceStatus.Paid)" ? "bg-success" :
                                    row.checkVoucherHeader.status == "@nameof(CheckVoucherInvoiceStatus.Canceled)" ? "bg-warning" : "";
                            
                            if (row.checkVoucherHeader.postedBy != null &&
                                row.supplierId == 133 && (row.amountPaid < row.amount)) { //BIR Supplier Id
                                statusClass = "bg-info";
                                row.checkVoucherHeader.status = "@nameof(CheckVoucherInvoiceStatus.ForPayment)";
                            }

                            return `<span class="badge rounded-pill w-100 ${statusClass}">${row.checkVoucherHeader.status}</span>`;
                        }
                    },
                    {
                        "data": "checkVoucherHeaderId",
                        "orderable": false,
                        "render": function (data, type, row) {
                            return `<div class="dropdown" style="${row.checkVoucherHeader.voidedBy != null || row.checkVoucherHeader.canceledBy != null ? 'display:none;' : ''}">
                                    <button class="btn btn-light dropdown-toggle w-100" type="button" id="actionsDropdown" data-bs-toggle="dropdown" aria-expanded="false">
                                        Actions
                                    </button>
                                    <ul class="dropdown-menu" aria-labelledby="actionsDropdown">
                                        ${row.checkVoucherHeader.postedBy == null ? `
                                            ${row.checkVoucherHeader?.supplier?.supplierId != null ? `
                                                <li><a class="dropdown-item" href="@Url.Action("Edit", "CheckVoucherNonTradeInvoice", new { area = "Filpride" })/${row.checkVoucherHeaderId}">Edit</a></li>
                                            ` : `
                                            <li><a class="dropdown-item" href="@Url.Action("EditPayrollInvoice", "CheckVoucherNonTradeInvoice", new { area = "Filpride" })/${row.checkVoucherHeaderId}">Edit</a></li>
                                            `}
                                            <li><a class="dropdown-item" href="@Url.Action("Print", "CheckVoucherNonTradeInvoice", new { area = "Filpride" })?id=${row.checkVoucherHeaderId}&supplierId=${row.supplier?.supplierId != null ? row.supplier?.supplierId : row.checkVoucherHeader?.supplier?.supplierId}">Preview</a></li>
                                            <li><a class="dropdown-item" href="javascript:void(0);" onclick="confirmCancel(${row.checkVoucherHeaderId})">Cancel</a></li>
                                        ` : `
                                            <li><a class="dropdown-item" href="@Url.Action("Print", "CheckVoucherNonTradeInvoice", new { area = "Filpride" })?id=${row.checkVoucherHeaderId}&supplierId=${row.supplier?.supplierId != null ? row.supplier?.supplierId : row.checkVoucherHeader?.supplier?.supplierId}">Print</a></li>
                                            ${!row.checkVoucherHeader.isPaid ? `
                                                <li><a class="dropdown-item" href="javascript:void(0);" onclick="confirmVoid(${row.checkVoucherHeaderId})">Void</a></li>
                                            ` : `
                                                <li><button class="dropdown-item" disabled readonly>Void</button></li>
                                            `}
                                        `}
                                    </ul>
                                </div>`;
                        }
                    }
                ],
                "order": [[0, "asc"]],
                "pageLength": 10,
                "footerCallback": function (row, data, start, end, display) {
                    // Initialize totals
                    var totalAmount = 0;
                    var totalAmountPaid = 0;
                    var totalBalance = 0;

                    // Sum up columns
                    data.forEach(function (row) {
                        var amount = row.amount + row.checkVoucherHeader.invoiceAmount;
                        var amountPaid = row.amountPaid + row.checkVoucherHeader.amountPaid;
                        totalAmount += amount;
                        totalAmountPaid += amountPaid;
                        totalBalance += amount - amountPaid;
                    });

                    // Update footer with totals
                    $(this.api().column(3).footer()).html(formatNumber(totalAmount));
                    $(this.api().column(4).footer()).html(formatNumber(totalAmountPaid));
                    $(this.api().column(5).footer()).html(formatNumber(totalBalance));
                }
            });
        });
    </script>
}