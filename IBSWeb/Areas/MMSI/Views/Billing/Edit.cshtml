@model CreateBillingViewModel

@{
    ViewData["Title"] = "Edit";

    Layout = "~/Views/Shared/_Layout.cshtml";
}

<style>
    .container {
        max-width: 100% !important;
        width: 100% !important;
    }

    /* Custom styles for professional look */
    .table th {
        font-weight: 600;
        color: #374151;
        text-transform: uppercase;
        font-size: 0.85rem;
        letter-spacing: 0.025em;
    }

    .table tbody tr {
        transition: all 0.2s;
    }

    .table tbody tr:hover {
        background-color: rgba(59, 130, 246, 0.05);
    }

    .table-loading {
        position: relative;
        opacity: 0.6;
    }

    .badge {
        font-weight: 500;
        padding: 0.35em 0.8em;
        font-size: 0.75rem;
    }

    .actions-dropdown .dropdown-item {
        padding: 0.5rem 1rem;
        font-size: 0.8rem;
    }

    .actions-dropdown .dropdown-item:hover {
        background-color: #f3f4f6;
    }



    table {
        font-size: 10px !important;
        table-layout: auto !important;
    }

    table td {
        font-size: 12px !important;
        padding-left: 10px !important;
    }

    .card-body {
        margin: 5px !important;
        padding: 5px !important;
    }
</style>

<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>Multiple Select with Bootstrap</title>
</head>

<div class="card shadow mt-4">

    <div class="card-header bg-secondary bg-gradient ml-0 py-3">
        <div class="col-12 text-center">
            <h2 class="text-white py-2"> EDIT BILLING</h2>
        </div>
    </div>

    <div class="card-body table-responsive">
        <form id="myForm" method="post" enctype="multipart/form-data">
            <div class="border-2 px-3">
                <div asp-validation-summary="ModelOnly"></div>
                <input asp-for="MMSIBillingId" id="billingId" value="@Model.MMSIBillingId" type="hidden">
                <div class="row pt-3">
                </div>
                
                <div class="row pt-2">
                    <div class="form-group col-3 my-2" title="Customer can no longer be changed" >
                        <label class="control-label ps-1 pb-1">Customer<span class="required text-danger">*</span></label>
                        <select asp-for="CustomerId" id="CustomerId" asp-items="@Model.Customers" class="form-select js-select2 border-0 shadow ms-5 mt-4" style="width:100%">
                            <option value="">Select Customer</option>
                        </select>
                        <span asp-validation-for="CustomerId" class="text-danger"></span>
                    </div>
                    <div class="col-6">
                        <div id="PrincipalDiv" class="row @(ViewData["HasPrincipal"] as bool? == true ? "" : "d-none")">

                            <div class="col-6" style="height: 72px;">
                                <div class="row">
                                    <div id="SelectDiv" class="form-group col-12 my-2 @(Model.PrincipalId.HasValue ? "" : "d-none")">
                                        <label for="PrincipalSelect" class="control-label ps-1 pb-1">Principal<span class="required text-danger">*</span></label>
                                        <select asp-items="@Model.CustomerPrincipal" asp-for="PrincipalId" value="@Model.PrincipalId" id="PrincipalSelect" class="form-select js-select2 border-0 shadow ms-5 mt-4" style="width:100%">
                                            <option value="">Select Principal</option>
                                        </select>
                                        <span asp-validation-for="PrincipalId" class="text-danger"></span>
                                    </div>
                                </div>
                            </div>

                            <div class="form-check col-6 ps-2 my-2 text-center d-flex align-items-center justify-content-start">
                                <input class="form-check-input m-0 ms-2" type="checkbox" id="UsePrincipalCheckbox" @(Model.PrincipalId.HasValue ? "checked" : "")>
                                <label class="text-decoration-underline form-check-label ps-1 h4 m-0" for="UsePrincipalCheckbox" style="font-size: 20px;">
                                    Use Principal
                                </label>
                            </div>

                        </div>
                    </div>
                    <div class="col-3 ps-2 my-2">
                        <div class="row">
                            <div class="col">
                                <input asp-for="BilledTo" value="LOCAL" type="radio">
                                <label style="font-size: 20px;">
                                    Billed To Local
                                </label>
                            </div>
                        </div>

                        <div class="row">
                            <div class="col">
                                <input asp-for="BilledTo" value="PRINCIPAL" type="radio">
                                <label style="font-size: 20px;">
                                    Billed To Principal
                                </label>
                            </div>
                        </div>
                    </div>
                </div>

                <div class="row pt-2">
                    <div class="form-floating col-3 my-2">
                        <input class="form-control border-0 shadow" id="Address" placeholder="" readonly>
                        <label class="ms-2">Address</label>
                        <span class="text-danger"></span>
                    </div>
                    <div class="form-floating col-3 my-2">
                        <input class="form-control border-0 shadow" id="TIN" placeholder="" readonly>
                        <label class="ms-2">TIN</label>
                        <span class="text-danger"></span>
                    </div>
                    <div class="form-floating col-3 my-2">
                        <input class="form-control border-0 shadow" id="BusinessStyle" placeholder="" readonly>
                        <label class="ms-2">Business Style</label>
                        <span class="text-danger"></span>
                    </div>
                    <div class="form-floating col-3 my-2">
                        <input class="form-control border-0 shadow" id="Terms" placeholder="" readonly>
                        <label class="ms-2">Terms</label>
                        <span class="text-danger"></span>
                    </div>
                </div>
                
                <div class="row">
                    <div class="form-floating col-3 my-3">
                        <input asp-for="MMSIBillingNumber" type="text" class="form-control border-0 shadow" id="billingNumber" placeholder="" readonly>
                        <label asp-for="MMSIBillingNumber" for="billingNumber" id="status" class="ms-2">Billing Number<span class="required text-danger">*</span></label>
                        <span asp-validation-for="MMSIBillingNumber" class="text-danger"></span>
                    </div>
                    <div class="form-check col-3 ps-2 my-3 text-center d-flex align-items-center justify-content-start">
                        <input type="hidden" asp-for="IsUndocumented" value="@Model.IsUndocumented"></input>
                        <input class="form-check-input m-0 ms-2" type="checkbox" id="isUndocumentedCheckbox" checked="@Model.IsUndocumented" disabled>
                        <label class="text-decoration-underline form-check-label ps-1 h4 m-0" for="isUndocumentedCheckbox" style="font-size: 20px;">
                            Undocumented
                        </label>
                    </div>
                    <div class="col-3">

                    </div>
                    <div class="form-floating col-3 my-3">
                        <input asp-for="VoyageNumber" type="text" class="form-control border-0 shadow" id="VoyageNumber" placeholder="">
                        <label asp-for="VoyageNumber" for="VoyageNumber" class="ms-2">Voyage Number</label>
                        <span asp-validation-for="VoyageNumber" class="text-danger"></span>
                    </div>
                </div>
                <div class="row">
                    <div class="form-floating col-3 my-2">
                        <input asp-for="Date" type="date" id="Date" class="form-control border-0 shadow">
                        <label asp-for="Date" for="Date" class="ms-2">Date Created</label>
                        <span asp-validation-for="Date" class="text-danger"></span>
                    </div>
                    <div class="form-group col-3 my-2">
                        <label class="control-label ps-1 pb-1">Port<span class="required text-danger">*</span></label>
                        <select asp-for="PortId" asp-items="@Model.Ports" id="PortSelect" class="form-select js-select2 border-0 shadow ms-5 mt-4" style="width:100%" required>
                            <option value="">Select Port</option>
                        </select>
                        <span asp-validation-for="PortId" class="text-danger"></span>
                    </div>
                    <div class="form-group col-3 my-2">
                        <label class="control-label ps-1 pb-1">Terminal<span class="required text-danger">*</span></label>
                        <select asp-for="TerminalId" asp-items="@Model.Terminals" id="TerminalSelect" class="form-select js-select2 border-0 shadow ms-5 mt-4" style="width:100%" required>
                            <option value="">Select Terminal</option>
                        </select>
                        <span asp-validation-for="TerminalId" class="text-danger"></span>
                    </div>
                    <div class="form-group col-3 my-2">
                        <label class="control-label ps-1 pb-1">Vessel<span class="required text-danger">*</span></label>
                        <select asp-for="VesselId" asp-items="@Model.Vessels" class="form-select js-select2 border-0 shadow ms-5 mt-4" style="width:100%" required>
                            <option value="">Select Vessel</option>
                        </select>
                        <span asp-validation-for="VesselId" class="text-danger"></span>
                    </div>
                </div>

                <div class="row pt-2 mt-4">

                    <div class="form-group col-12">
                        <label class="control-label mb-2">Choose dispatch tickets to bill:</label>
                        <select asp-for="ToBillDispatchTickets" id="DispatchTicketSelect"  asp-items="@Model.UnbilledDispatchTickets" class="form-control js-example-basic-multiple col-12" name="ToBillDispatchTickets" multiple="multiple" required>
                        </select>
                    </div>

                </div>

                <table id="dataTable" class="table table-striped table-bordered mt-3" style="width:100%">
                    <thead>
                    <tr>
                        <th class="text-center align-content-center ps-4">DISPATCH#</th>
                        <th class="text-center align-content-center ps-4">TUGBOAT</th>
                        <th class="text-center align-content-center ps-4">SERVICE</th>
                        <th class="text-center align-content-center ps-4">TIME START</th>
                        <th class="text-center align-content-center ps-4">TIME END</th>
                        <th class="text-center align-content-center ps-4">HOUR</th>
                        <th class="text-center align-content-center ps-4">DISPATCH RATE</th>
                        <th class="text-center align-content-center ps-4">DISPATCH AMOUNT</th>
                        <th class="text-center align-content-center ps-4">BAF RATE</th>
                        <th class="text-center align-content-center ps-4">BAF AMOUNT</th>
                    </tr>
                    </thead>
                    <tbody>

                    </tbody>
                </table>

                <div class="row py-3 justify-content-end d-flex">
                    <div class="col-2">
                        <label>Total Dispatch: ₱<label id="DispatchAmountTotal"></label></label>
                    </div>
                    <div class="col-2">
                        <label>Total BAF: ₱<label id="BAFAmountTotal"></label></label>
                    </div>
                    <div class="col-2">
                        <label>Total Amount: ₱<label id="OverallTotal"></label></label>
                    </div>
                </div>

                <div class="row col-12 justify-content-end mb-2">
                    <div class="text-center" style="width: 250px">
                        <button class="btn btn-primary custom-btn col-12 align-content-center selected-options" type="submit" id="submitButton"><i class="bi bi-pencil-square"></i> Submit</button>
                    </div>
                    <div class="text-center" style="width: 250px">
                        <a class="btn btn-outline-primary border col-12 align-content-center selected-options" asp-controller="Billing" asp-action="Index">
                            <i class="bi bi-arrow-90deg-left"></i> Go Back
                        </a>
                    </div>
                </div>
            </div>
        </form>
    </div>
</div>

@section Scripts {
    <script>
        // Initialize when DOM is ready
        $(document).ready(function () {
            
            // Initialize Select2 for all elements with this class
            $('.js-example-basic-multiple').select2();

            // DataTable initialization
            let table = initializeDataTable('#dataTable');

            // Event Handlers
            setupEventListeners();

            // Initializes the dataTable
            function initializeDataTable(selector) {
                if ($.fn.DataTable.isDataTable(selector)) {
                    $(selector).DataTable().destroy();
                }
                return $(selector).DataTable({
                    paging: false,
                    info: false,
                    order: [[0, 'asc']],
                    lengthChange: false,
                    searching: false
                });
            }

            function setupEventListeners() {
                
                $("#UsePrincipalCheckbox").on("change", handleUsePrincipalChange); // Use principal? checkbox: empty val, enable requirement
                $("#PrincipalSelect").on("change.select2", handlePrincipalChange); // Principal select: replace details with principal's
                $("#CustomerId").on("change", handleCustomerChange); // Customer select: replace details, change ticket select list, empty principal val, principal select disable requirement
                $("#PortSelect").on("change", handlePortChange); // Port select: update terminal select list
                $("#submitButton").on("click", areYouSureToBill);
                $('.js-example-basic-multiple').on('change', handleDispatchTicketsChange); // Tickets select: update ticket table contents, update total amount and ewt
            }

            // Principal checkbox: checked - empty value, update select list, make it appear, enable requirement
            // Principal checkbox: if unchecked, empty value, disappear, disable requirement
            function handleUsePrincipalChange() {
                const $checkbox = $("#UsePrincipalCheckbox");
                const $selectDiv = $("#SelectDiv");
                const $principal = $("#PrincipalSelect");
                const customerId = $("#CustomerId").val();

                if ($checkbox.is(":checked")) {
                    $principal.val("");
                    fetchPrincipals(customerId);
                    $selectDiv.removeClass("d-none");
                    $principal.prop("required", true);
                } else {
                    $principal.val("");
                    fillDataOnStartup();
                    $selectDiv.addClass("d-none");
                    $principal.prop("required", false);
                }
            }

            // Principal select: get principal list
            function fetchPrincipals(customerId) {
                $.ajax({
                    url: '@Url.Action("GetPrincipalsJSON", "Billing", new { area = "MMSI" })',
                    type: "GET",
                    data: { customerId: customerId },
                    success: function (data) {
                        const $principalSelect = $("#PrincipalSelect");
                        $principalSelect.empty().append('<option value="">Select Principal</option>');
                        if (Array.isArray(data) && data.length > 0) {
                            $.each(data, function (index, item) {
                                $principalSelect.append($('<option>', {
                                    value: item.value,
                                    text: item.text
                                }));
                            });
                        }
                    }
                });
            }

            // Customer details: what do if changed
            function handlePrincipalChange() {
                const principalId = $("#PrincipalSelect").val();
                $.ajax({
                    url: '@Url.Action("GetPrincipalDetails", "Billing", new { area = "MMSI" })',
                    method: "GET",
                    data: { principalId: principalId },
                    success: function (data) {
                        updateFields(data);
                    }
                });
            }

            // 1 Customer select: what do if changed
            function handleCustomerChange() {
                const customerId = $(this).val();
                const billingId = $("#billingId").val();
                const $principalDiv = $("#PrincipalDiv");
                const $principalSelect = $("#PrincipalSelect");
                const $selectDiv = $("#SelectDiv");
                const $dispatchSelect = $("#DispatchTicketSelect");
                //const $vatableCheckBox = $("#IsVatableCheckBox");
                
                $("#UsePrincipalCheckbox").prop("checked", false); // Principal checkbox: unchecks
                $principalDiv.removeClass("d-none"); // Principal div: checkbox appears, 
                $principalSelect.prop("required", false); // Principal select: disable requirement  
                $selectDiv.addClass("d-none"); // but select is still hidden

                // If customer != null
                if (customerId) {
                    $dispatchSelect.prop("disabled", false); // Tickets select: enable
                    $dispatchSelect.prop("required", true); // Tickets select: enable
                    
                    $.ajax({
                        url: '@Url.Action("GetCustomerDetails", "Billing", new { area = "MMSI" })',
                        method: "POST",
                        data: { customerId: customerId },
                        success: function (data) {
                            updateFields(data);
                            $principalDiv.toggleClass("d-none", !data.hasPrincipal);
                            //$vatableCheckBox.prop("checked", data.vatType === "Vatable");

                            // Ticket select: update choices
                            $.ajax({
                                url: '@Url.Action("GetEditTickets", "Billing", new { area = "MMSI" })',
                                method: "POST",
                                data: { customerId: customerId,
                                    billingId: billingId },
                                success: function (data) {
                                    $dispatchSelect.empty();
                                    if (Array.isArray(data) && data.length > 0) {
                                        $.each(data, function (index, item) {
                                            $dispatchSelect.append($('<option>', {
                                                value: item.value,
                                                text: item.text
                                            }));
                                        });
                                    }
                                }
                            });
                        }
                    });
                    // Customer select val == null
                } else {
                    $dispatchSelect.val("0").trigger("change"); // Ticket select: empties
                    $dispatchSelect.prop("disabled", true); // Ticket select: disabled
                    $selectDiv.addClass("d-none"); // Principal select: disappears
                    $principalDiv.addClass("d-none"); // Principal dix: disappears
                }
            }
            
            // 2 Customer details: updates based on passed data
            function updateFields(data) {
                // Creates an array of array containing the id of the field and the value to put
                const fields = {
                    "#Terms": data?.terms || '',
                    "#Address": data?.address || '',
                    "#TIN": data?.tinNo || '',
                    "#BusinessStyle": data?.businessStyle || ''
                };
                // Loops through the array and input the values
                for (const [selector, value] of Object.entries(fields)) {
                    $(selector).val(value);
                }
            }

            // Port select: changes, updates terminal list
            function handlePortChange() {
                const portId = $("#PortSelect").val();
                $.ajax({
                    url: '@Url.Action("ChangeTerminal", "DispatchTicket", new { area = "MMSI" })',
                    type: "GET",
                    data: { portId: portId },
                    success: function (data) {
                        const $terminalSelect = $("#TerminalSelect");
                        $terminalSelect.empty().append('<option value="">Select Terminal</option>'); // Terminal select: empties
                        // Terminal select: loops the array to input the choices
                        if (Array.isArray(data) && data.length > 0) {
                            $.each(data, function (index, item) {
                                $terminalSelect.append($('<option>', {
                                    value: item.value,
                                    text: item.text
                                }));
                            });
                        }
                    }
                });
            }

            // Ticket select: changes, get the tickets
            function handleDispatchTicketsChange() {
                const selectedTickets = $('.js-example-basic-multiple').val();
                $.ajax({
                    url: '/MMSI/Billing/GetDispatchTickets',
                    type: 'POST',
                    data: { dispatchTicketIds: selectedTickets },
                    success: function (result) {
                        updateDispatchTable(result.data); // Tickets table: pass the fetched data to update the table
                    },
                    error: function (xhr, status, error) {
                        console.error('Error:', error);
                    }
                });
            }

            // Tickets table: updates, amount updates
            function updateDispatchTable(data) {
                let totalDispatchAmount = 0;
                let totalBAFAmount = 0;

                // Tickets table: reset
                table.destroy();
                const $tbody = $('#dataTable tbody').empty();

                // Loops the fetched tickets
                $.each(data, function (index, value) {
                    
                    // Dispatch and BAF totals added
                    totalDispatchAmount += value.dispatchNetRevenue;
                    totalBAFAmount += value.bafNetRevenue;
                    
                    // Tickets table: updates
                    $tbody.append(`
                        <tr>
                            <td class="text-center align-middle ps-4">${value.dispatchNumber}</td>
                            <td class="text-center align-middle ps-4">${value.tugboat.tugboatName}</td>
                            <td class="text-center align-middle ps-4">${value.service.serviceName}</td>
                            <td class="text-center align-middle ps-4">${value.dateLeft} - ${value.timeLeft}</td>
                            <td class="text-center align-middle ps-4">${value.dateArrived} - ${value.timeArrived}</td>
                            <td class="text-center align-middle ps-4">${value.totalHours.toFixed(2)}</td>
                            <td class="text-center align-middle ps-4">₱ ${formatNumber(value.dispatchRate)} ${value.dispatchChargeType}</td>
                            <td class="text-center align-middle ps-4">₱ ${formatNumber(value.dispatchNetRevenue)} </td>
                            <td class="text-center align-middle ps-4">₱ ${formatNumber(value.bafRate)} ${value.bafChargeType}</td>
                            <td class="text-center align-middle ps-4">₱ ${formatNumber(value.bafNetRevenue)}</td>
                        </tr>
                    `);
                });

                // Dispatch and BAF totals: show
                let overallAmount = totalDispatchAmount + totalBAFAmount;
                $("#DispatchAmountTotal").text(formatNumber(totalDispatchAmount));
                $("#BAFAmountTotal").text(formatNumber(totalBAFAmount));
                $("#OverallTotal").text(formatNumber(overallAmount));

                // Reinitialize new table
                table = initializeDataTable('#dataTable');
            }
            
            // Fills the customer details field based on the received customer or principal
            function fillDataOnStartup () {
                let $principalId = $("#PrincipalSelect").val();
                let $customerId = $("#CustomerId").val();

                if (!$principalId) {
                    $.ajax({
                        url: '@Url.Action("GetCustomerDetails", "Billing", new { area = "MMSI" })',
                        method: "POST",
                        data: { customerId: $customerId },
                        success: function (data) {
                            updateFields(data);
                        }
                    });
                }
                else{
                    $.ajax({
                        url: '@Url.Action("GetPrincipalDetails", "Billing", new { area = "MMSI" })',
                        method: "GET",
                        data: { principalId: $principalId },
                        success: function (data) {
                            updateFields(data);
                        }
                    });
                }
            }
            
            function areYouSureToBill (event) {

                event.preventDefault(); // stop the default form submission

                const form = document.getElementById("myForm");

                if (!form.checkValidity()) {
                    // If form is not valid, trigger built-in validation UI
                    form.reportValidity();
                    return;
                }

                Swal.fire({
                    title: "Save changes to this billing?",
                    text: "You can edit this again before posting.",
                    showCancelButton: true,
                    confirmButtonText: "Yes",
                    cancelButtonText: "No"
                }).then((result) => {
                    if (result.isConfirmed) {
                        document.getElementById('myForm').requestSubmit();
                    }
                })
            }

            // Fill the customer details
            fillDataOnStartup();
            // Fill the table with ticket details
            handleDispatchTicketsChange();
        });
    </script>
}