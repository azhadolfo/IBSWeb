@using IBS.Utility.Enums
@model IEnumerable<BienesPlacement>

@{
    ViewData["Title"] = "Placement";
}

<style>
    .container {
        max-width: 100% !important;
        width: 100% !important;
    }

    /* Custom styles for professional look */
    .table th {
        font-weight: 600;
        color: #374151;
        text-transform: uppercase;
        font-size: 0.85rem;
        letter-spacing: 0.025em;
    }

    .table tbody tr {
        transition: all 0.2s;
    }

    .table tbody tr:hover {
        background-color: rgba(59, 130, 246, 0.05);
    }

    .table-loading {
        position: relative;
        opacity: 0.6;
    }

    .badge {
        font-weight: 500;
        padding: 0.35em 0.8em;
        font-size: 0.75rem;
    }

    .actions-dropdown .dropdown-item {
        padding: 0.5rem 1rem;
        font-size: 0.8rem;
    }

    .actions-dropdown .dropdown-item:hover {
        background-color: #f3f4f6;
    }

</style>

<div class="container-fluid mt-4">
    <div class="d-flex justify-content-between align-items-center bg-secondary p-3 rounded shadow">
        <h2 class="text-white m-0">Placement</h2>
        <a asp-area="Bienes" asp-controller="Placement" asp-action="Create" class="btn btn-light">
            <i class="bi bi-plus-circle"></i> New Placement
        </a>
    </div>
    
    

    <div class="card shadow border-0 mt-3">
        <div class="card-body p-3">
            <div class="table-responsive" style="max-height: 70vh">
                <div class="btn-group mb-3" role="group" aria-label="Filter Options">
                    <button id="filterAll" class="btn btn-outline-primary active">
                        <i class="bi bi-list"></i> All
                    </button>
                    <button id="filterWithPosted" class="btn btn-outline-primary">
                        <i class="bi bi-check-circle"></i> Posted
                    </button>
                    <button id="filterWithUnposted" class="btn btn-outline-primary">
                        <i class="bi bi-hourglass"></i> Unposted
                    </button>
                    <button id="filterWithLocked" class="btn btn-outline-primary">
                        <i class="bi bi-lock"></i> Locked
                    </button>
                    <button id="filterWithTerminated" class="btn btn-outline-primary">
                        <i class="bi bi-calendar-x"></i> Terminated
                    </button>
                </div>
                
                <table class="table table-hover mb-0" id="paginatedTable">
                    <thead class="bg-light">
                    <tr>
                        <th class="text-start">Control#</th>
                        <th class="text-start">Created Date</th>
                        <th class="text-start">Company</th>
                        <th class="text-start">Bank</th>
                        <th class="text-start">TD Account#</th>
                        <th class="text-start">Principal Amount</th>
                        <th class="text-start">Status</th>
                        <th class="text-center" style="width: 100px;">Actions</th>
                    </tr>
                    </thead>
                </table>
            </div>
        </div>
    </div>
</div>

@section Scripts
{
    <script>
        $(document).ready(function (){
           var table = $('#paginatedTable').DataTable({
               "processing": true,
               "serverSide": true,
               "stateSave": true,
               "stateDuration": 86400,
               "language": {
                   "processing": `<div class="d-flex justify-content-center">
                                    <div class="spinner-border text-primary" role="status">
                                        <span class="visually-hidden">Loading...</span>
                                    </div>
                                 </div>`
               },
               "ajax": {
                   "url": "@Url.Action("GetPlacements", "Placement", new { area = "Bienes" })",
                   "type": "POST",
                   "data": function (d) {
                       return $.extend({}, d, {
                           __RequestVerificationToken: $('input[name="__RequestVerificationToken"]').val()
                       });
                   },
                   "error": function (xhr, error, thrown) {
                       console.error('DataTables error:', error);
                       alert('An error occurred while loading the data');
                   }
               },
               "preDrawCallback": function(settings) {
                   $('#paginatedTable').addClass('table-loading');
               },
               "drawCallback": function(settings) {
                   $('#paginatedTable').removeClass('table-loading');

                   // Initialize all tooltips
                   $('[data-bs-toggle="tooltip"]').tooltip();
               },
               "columns": [
                   { "data": "controlNumber" },
                   { "data": "createdDate", "render": function (data) {
                           var date = new Date(data);
                           return date.toLocaleDateString('en-US', {
                               year: 'numeric',
                               month: 'short',
                               day: '2-digit'
                           });
                       }},
                   { "data": "company.companyName" },
                   { "data": "bankAccount.bank" },
                   { "data": "tdAccountNumber" },
                   {
                       "data": "principalAmount",
                       "render": function (data, type, row) {
                           var amount = $.fn.dataTable.render.number(',', '.', 2).display(data);
                           return `<span class="d-block fw-medium">${amount}</span>`;
                       }
                   },
                   {
                       "data": "status",
                       "name": "status",
                       "render": function(data, type, row) {
                           var statusClass = row.status === "@nameof(PlacementStatus.Posted)" ? "bg-info" :
                               row.status === "@nameof(PlacementStatus.Locked)" ? "bg-warning" :
                                   row.status === "@nameof(PlacementStatus.Terminated)" ? "bg-danger" : "";

                           return `<span class="badge rounded-pill ${statusClass}">${row.status}</span>`;
                       }
                   },
                   {
                       "data": "placementId",
                       "orderable": false,
                       "render": function (data, type, row) {
                           let actions = `
                                <div class="dropdown actions-dropdown">
                                    <button class="btn btn-light btn-sm dropdown-toggle w-100" 
                                            type="button" 
                                            data-bs-toggle="dropdown" 
                                            aria-expanded="false">
                                        <i class="bi bi-three-dots"></i>
                                    </button>
                                    <ul class="dropdown-menu dropdown-menu-end shadow-sm">`;

                           if (row.status === "@nameof(PlacementStatus.Unposted)") {
                               actions += `<li><a class="dropdown-item" href="@Url.Action("Edit", "Placement", new { area = "Bienes" })/${data}">Edit</a></li>`;
                           }

                           actions += `<li><a class="dropdown-item" href="@Url.Action("Preview", "Placement", new { area = "Bienes" })/${data}">Preview</a></li>`

                           actions += `</ul></div>`;
                           return actions;
                       }
                   }
               ]
           });

            $('#filterAll').on('click', function() {
                table.columns().search('').draw();
            });

            $('#filterWithPosted').on('click', function() {
                table.columns().search(''); // Clear previous filters
                table.columns(6).search('Posted', true, true).draw();
            });

            $('#filterWithUnposted').on('click', function() {
                table.columns().search(''); // Clear previous filters
                table.columns(6).search('Unposted', true, true).draw();
            });

            $('#filterWithLocked').on('click', function() {
                table.columns().search(''); // Clear previous filters
                table.columns(6).search('Locked', true, true).draw();
            });

            $('#filterWithTerminated').on('click', function() {
                table.columns().search(''); // Clear previous filters
                console.log(table.columns(6).search('Terminated'));
                table.columns(7).search('Terminated', true, true).draw();
            });

            $('.btn-group button').on('click', function() {
                $('.btn-group button').removeClass('active');
                $(this).addClass('active');
            });
           
        });
        
    </script>
}

