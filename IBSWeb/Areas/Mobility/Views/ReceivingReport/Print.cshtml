@using IBS.Utility.Constants
@using IBS.Utility.Enums
@using IBS.Utility.Helpers
@using Microsoft.AspNetCore.Identity
@model MobilityReceivingReport
@inject SignInManager<IdentityUser> SignInManager
@inject UserManager<IdentityUser> UserManager

@{
    ViewData["Title"] = "Print Receiving Report";
}

<br />
<div class="text-end">
    <img src="~/img/usa88-logo.png" width="130px"/>
</div>
<div class="text-center">
    <h2><u><b>&nbsp;MOBILITY GROUP CORP.&nbsp;</b></u></h2>
    <p style="line-height: 1; margin-top:-7px;">
        Tower B Phoenix Sun Business Park Eulogio Rodriguez JR, ave.,<br />
        Bagumbayan Libis 1110 Quezon City NCR, Second District Philippines<br />
        VAT Reg. TIN: 776-536-510-00000
    </p>

    <h3><span style="display: inline-block;"><b>RECEIVING REPORT</b></span></h3>
    <div class="text-end" style="margin-top:-60px;">
        <h6><b>No.&nbsp;@Html.DisplayFor(model => model.ReceivingReportNo)</b></h6>
    </div>
</div>

<div class="w-100 text-end" style="margin-top:20px; padding-bottom:10px;">
    <span><b>Date:</b></span>
    <span class="underline" style="display: inline-block; width: 20%; text-align:center;">@Model.Date.ToString(SD.Date_Format)</span><br />
</div>

<div>
    <table class="table-bordered w-100">
        <tbody>
        <tr>
            <td colspan="2" style="padding-left:10px;">Supplier: &nbsp; @Html.DisplayFor(model => model.PurchaseOrder.Supplier.SupplierName)</td>
        </tr>
        </tbody>
    </table>
</div>

<div style="margin-top:20px;">
    <table class="table-bordered w-100">
        <tbody>
        <tr>
            <td colspan="7" style="padding-left:20px;">DETAILS</td>
        </tr>
        <tr>
            <td class="text-center" style="width:12.5%">PO#</td>
            <td class="text-center" style="width:12.5%">SUPPLIER INVOICE#/DATE</td>
            <td class="text-center" style="width:25%">TRUCK/VESSELS</td>
            <td class="text-center" style="width:12.5%">PRODUCT</td>
            <td class="text-center" style="width:12.5%">QTY SERVED</td>
            <td class="text-center" style="width:12.5%">QTY RECEIVED</td>
            <td class="text-center" style="width:12.5%">GAIN/LOSS</td>
        </tr>
        <tr>
            <td class="text-center p-lg-4">@Html.DisplayFor(model => model.PurchaseOrderNo)</td>
            <td class="text-center p-lg-4">@Html.DisplayFor(model => model.SupplierInvoiceNumber)</td>
            <td class="text-center p-lg-4">@Html.DisplayFor(model => model.TruckOrVessels)</td>
            <td class="text-center p-lg-4">@Html.DisplayFor(model => model.PurchaseOrder.Product.ProductName)</td>
            <td class="text-center p-lg-4">@Model.QuantityDelivered.ToString(SD.Two_Decimal_Format)</td>
            <td class="text-center p-lg-4">@Model.QuantityReceived.ToString(SD.Two_Decimal_Format)</td>
            <td class="text-center p-lg-4">@Model.GainOrLoss.ToString(SD.Two_Decimal_Format)</td>
        </tr>
        </tbody>
    </table>
</div>

<div>
    <table class="table-bordered w-100 mt-2">
        <tbody>
        <tr>
            <td colspan="2" style="padding-left:10px;">Other Reference: &nbsp; @Html.DisplayFor(model => model.AuthorityToLoadNo)</td>
        </tr>
        </tbody>
    </table>
</div>

<div style="margin-top:10px;">
    <table class="table-bordered w-100">
        <tbody>
        <tr>
            <td class="p-lg-4" colspan="6" style="padding-left:20px;">REMARKS : <pre style="margin: 0; padding: 0">@Html.DisplayFor(model => model.Remarks)</pre></td>
        </tr>
        </tbody>
    </table>
</div>

@if (Model.Type == nameof(DocumentType.Documented))
{
    <div class="text-center w-100" style="margin-top:10px;">
        <p>
            <em><strong>"THIS DOCUMENT IS NOT VALID FOR CLAIM OF INPUT TAX"</strong></em><br />
        </p>
    </div>

    @if (!Model.IsPrinted)
    {
        <div class="text-end">
            ORIGINAL COPY
        </div>
    }
    else
    {
        <div class="text-end">
            REPRINT COPY
        </div>
    }
}

<div class="row pt-2">
    @{
        if (Model.PostedBy == null)
        {
            <div class="col-6 col-md-3">
                <a id="approveButton" class="btn btn-primary form-control buttons" onclick="confirmPost(@Model.ReceivingReportId)">Post</a>
            </div>
        }
        else
        {
            <div class="col-6 col-md-3">
                <a asp-area="Mobility" asp-controller="ReceivingReport" asp-action="Printed" asp-route-id="@Model.ReceivingReportId" onclick="window.print()" class="btn btn-primary form-control buttons">Print</a>
            </div>
        }
    }

    <div class="col-6 col-md-3">
        <a asp-area="Mobility" asp-controller="ReceivingReport" asp-action="Index" class="btn btn-outline-primary border form-control buttons">Back to List</a>
    </div>
</div>

@section Scripts {
    <script>
        var originalFontSizes = [];

        function printPage() {
            var printButton = document.getElementById("printButton");
            var otherButton = document.getElementById("otherButton");

            // Hide the header and footer
            document.querySelector("header").style.display = "none";

            // Hide the buttons before printing
            if (printButton) {
                printButton.style.visibility = "hidden";
            }
            if (otherButton) {
                otherButton.style.visibility = "hidden";
            }

            // Get all paragraph elements
            var paragraphs = document.querySelectorAll("p");

            // Store the original font sizes
            for (var i = 0; i < paragraphs.length; i++) {
                originalFontSizes[i] = paragraphs[i].style.fontSize;
                // Set the font size of all paragraph elements to 12px for printing
                paragraphs[i].style.fontSize = "12px";
            }

            // Call the print function
            window.print();

            // Restore the font sizes
            for (var i = 0; i < paragraphs.length; i++) {
                paragraphs[i].style.fontSize = originalFontSizes[i];
            }

            // Restore the buttons' visibility after printing (optional)
            if (printButton) {
                printButton.style.visibility = "visible";
            }
            if (otherButton) {
                otherButton.style.visibility = "visible";
            }

            // Restore the header and footer's visibility after printing (optional)
            document.querySelector("header").style.display = "";
        }
    </script>
    <script>
        function confirmPost(id) {
            Swal.fire({
                title: 'Are you sure?',
                text: "You won't be able to revert this!",
                icon: 'warning',
                showCancelButton: true,
                confirmButtonColor: '#3085d6',
                cancelButtonColor: '#d33',
                confirmButtonText: 'Yes'
            }).then((result) => {
                if (result.isConfirmed) {
                    // Replace with the actual URL that you want to redirect to
                    var url = `@Url.Action("Post", "ReceivingReport", new { area = "Mobility" })/${id}`;
                    window.location.href = url;
                }
            })
        }
    </script>
}