@model IEnumerable<dynamic>

@{
    ViewData["Title"] = "Purchase - Fuel";
}

<style>
    .container {
        max-width: 100% !important;
        width: 100% !important;
    }

    /* Custom styles for professional look */
    .table th {
        font-weight: 600;
        color: #374151;
        text-transform: uppercase;
        font-size: 0.85rem;
        letter-spacing: 0.025em;
    }

    .table tbody tr {
        transition: all 0.2s;
    }

    .table tbody tr:hover {
        background-color: rgba(59, 130, 246, 0.05);
    }

    .table-loading {
        position: relative;
        opacity: 0.6;
    }

    .badge {
        font-weight: 500;
        padding: 0.35em 0.8em;
        font-size: 0.75rem;
    }

    .actions-dropdown .dropdown-item {
        padding: 0.5rem 1rem;
        font-size: 0.8rem;
    }

    .actions-dropdown .dropdown-item:hover {
        background-color: #f3f4f6;
    }
</style>

<div class="container-fluid mt-4">
    <div class="d-flex justify-content-between align-items-center bg-secondary p-3 rounded shadow">
        <h2 class="text-white m-0">Fuel Delivery</h2>
    </div>

    <div class="card shadow border-0 mt-3">
        <div class="card-body p-3">
            <div class="table-responsive" style="max-height: 70vh">
                <table class="table table-hover mb-0" id="paginatedTable">
                    <thead class="bg-light">
                    <tr>
                        <th>Station</th>
                        <th>Purchase No</th>
                        <th>Shift Date</th>
                        <th>Product</th>
                        <th>Received By</th>
                        <th></th>
                    </tr>
                    </thead>
                </table>
            </div>
        </div>
    </div>
</div>

@section Scripts {
    <script>
        $(document).ready(function () {
            $('#paginatedTable').DataTable({
                "processing": true,
                "serverSide": true,
                "stateSave": true,
                "language": {
                    "processing": `<div class="d-flex justify-content-center">
                                    <div class="spinner-border text-primary" role="status">
                                        <span class="visually-hidden">Loading...</span>
                                    </div>
                                 </div>`
                },
                "ajax": {
                    "url": "@Url.Action("GetFuelPurchase", "Purchase")",
                    "type": "POST",
                    "data": function (d) {
                        d.__RequestVerificationToken = $('input[name="__RequestVerificationToken"]').val();
                    },
                    "error": function (xhr, error, thrown) {
                        console.error('DataTables error:', error);
                        alert('An error occurred while loading the data');
                    }
                },
                "preDrawCallback": function(settings) {
                    $('#paginatedTable').addClass('table-loading');
                },
                "drawCallback": function(settings) {
                    $('#paginatedTable').removeClass('table-loading');

                    // Initialize all tooltips
                    $('[data-bs-toggle="tooltip"]').tooltip();
                },
                "columns": [
                    { "data": "stationCode", "name": "stationCode" },
                    { "data": "fuelPurchaseNo", "name": "fuelPurchaseNo" },
                    {
                        "data": "shiftDate",
                        "name": "shiftDate",
                        "render": function (data, type, row) {
                            var date = new Date(data);
                            return date.toLocaleDateString('en-US', { year: 'numeric', month: 'short', day: 'numeric' });
                        }
                    },
                    { "data": "productName", "name": "productName" },
                    { "data": "receivedBy", "name": "receivedBy" },
                    {
                        "data": null,
                        "orderable": false,
                        "render": function (data, type, row) {
                            let actions = `
                                <div class="dropdown actions-dropdown">
                                    <button class="btn btn-light btn-sm dropdown-toggle w-100" 
                                            type="button" 
                                            data-bs-toggle="dropdown" 
                                            aria-expanded="false">
                                        <i class="bi bi-three-dots"></i>
                                    </button>
                                    <ul class="dropdown-menu dropdown-menu-end shadow-sm">`;

                            if (row.postedBy === null) {
                                actions += `<li><a class="dropdown-item" href="@Url.Action("EditFuel", "Purchase", new { area = "Mobility" })/${row.fuelPurchaseNo}">Edit</a></li>`;
                            }

                            actions += `<li><a class="dropdown-item" href="@Url.Action("PreviewFuel", "Purchase", new { area = "Mobility" })/${row.fuelPurchaseNo}">Preview</a></li>`;

                            actions += `</ul></div>`;
                            return actions;
                        }
                        
                    }
                ],
                "order": [[0, "asc"]], // Default sort by TransactionDate
                "pageLength": 10 // Default number of rows per page
            });
        });
    </script>
}