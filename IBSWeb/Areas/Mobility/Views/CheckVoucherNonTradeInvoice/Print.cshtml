@model CheckVoucherVM
@using Microsoft.AspNetCore.Identity
@inject SignInManager<IdentityUser> SignInManager
@inject UserManager<IdentityUser> UserManager
@using Humanizer
@using IBS.Utility.Constants
@using IBS.Utility.Enums
@using IBS.Utility.Helpers

@{
    ViewData["Title"] = "Print Check Voucher";
    int supplierId = Model.Supplier?.SupplierId ?? 0;

    string? selectedCompany = string.Empty;

    if (SignInManager.IsSignedIn(User))
    {
        selectedCompany = User.Claims.FirstOrDefault(c => c.Type == "Company")?.Value;
    }

}

<br />
<div class="text-end">
    <img src="~/img/usa88-logo.png" height="" width="130px" />
</div>
<div class="text-center">
    <h2><u><b>&nbsp;MOBILITY GROUP CORP.&nbsp;</b></u></h2>
    <p style="line-height: 1; margin-top:-7px;">
        Tower B Phoenix Sun Business Park Eulogio Rodriguez JR, ave.,<br />
        Bagumbayan Libis 1110 Quezon City NCR, Second District Philippines<br />
        VAT Reg. TIN: 776-536-510-00000
    </p>
    <h3>
        <span style="display: inline-block;">
            <b>INVOICING</b>
        </span>
    </h3>
    <div class="text-end" style="margin-top:-60px;">
        <h6><b>No.&nbsp;@Html.DisplayFor(model => model.Header!.CheckVoucherHeaderNo)</b></h6>
    </div>
</div>

<div class="table-responsive" style="margin-top:50px;">
    <table class="w-100">
        <thead>
        <tr style="border: 1px solid black;">
            <th colspan="2" style="padding-left:20px;">I. PAYEE DETAILS</th>
            <td colspan="2" class="text-end"><b>Date : </b>@Model.Header!.Date.ToString(SD.Date_Format)</td>
        </tr>
        </thead>
        <tbody>
        <tr>
            <td style="width:10%; padding-left:20px;">Name :</td>
            @if (Model.Header.SupplierId != null)
            {
                <td>@Html.DisplayFor(model => model.Header!.Supplier!.SupplierName)</td>
            }
            else
            {
                <td>@Html.DisplayFor(model => model.Supplier!.SupplierName)</td>
            }
            <td style="width:50%;" colspan="2" class="text-nowrap">Other References</td>
        </tr>
        <tr>
            <td style="padding-left:20px;">Address :</td>
            <td>@Html.DisplayFor(model => model.Header!.Address)</td>
            <td style="width:5%;">PO # :</td>
            <td>
                @if (Model.Header.PONo != null)
                {
                    @for (int i = 0; i < Model.Header.PONo.Length; i++)
                    {
                        if (i != Model.Header.PONo.Length - 1)
                        {
                            <span>@Model.Header.PONo[i],</span>
                        }
                        else
                        {
                            <span>@Model.Header.PONo[i]</span>
                        }
                    }
                }
            </td>
        </tr>
        <tr>
            <td style="padding-left:20px;">TIN # :</td>
            <td>@Html.DisplayFor(model => model.Header!.Tin)</td>
            <td>SI # :</td>
            <td>
                @for (int i = 0; i < Model.Header!.SINo!.Length; i++)
                {
                    if (i != Model.Header.SINo.Length - 1)
                    {
                        <span>@Model.Header.SINo[i],</span>
                    }
                    else
                    {
                        <span>@Model.Header.SINo[i]</span>
                    }
                }
            </td>
        </tr>
        <tr>
            <td style="padding-left:20px;" class="text-nowrap"></td>
            <td></td>
            <td></td>
            <td></td>
        </tr>
        </tbody>
    </table>
</div>
<div class="table-responsive" style="margin-top:20px;">
    <table class="w-100">
        <thead>
        <tr style="border: 1px solid black;">
            <th colspan="4" style="padding-left:20px;">II. CHECK DETAILS</th>
        </tr>
        </thead>
        <tbody>
        <tr>
            <td style="width:20%; padding-left:20px;">Payee :</td>
            @if (Model.Header.SupplierId != null)
            {
                <td>@Html.DisplayFor(model => model.Header!.Payee)</td>
            }
            else
            {
                <td>@Html.DisplayFor(model => model.Supplier!.SupplierName)</td>
            }
            @if (Model.Header.Total != 0)
            {
                <td class="text-end">@Model.Header.Total.ToString(SD.Two_Decimal_Format)</td>
            }
            else
            {
                <td></td>
            }
        </tr>
        <tr>
            <td style="padding-left:20px;">Amount in Words :</td>
            @{
                decimal convertToWords = Model.Header.Total;

                int integerPart = Convert.ToInt32(Math.Floor(convertToWords));
                decimal decimalPart = Math.Round((convertToWords - integerPart), 4);

                // Convert integer part to words
                string integerWords = integerPart.ToWords();
                integerWords = System.Globalization.CultureInfo.CurrentCulture.TextInfo.ToTitleCase(integerWords.ToLower());

                // Convert and format cents value
                int cents = Convert.ToInt32(decimalPart * 100) % 100;
                string centsWords = cents.ToWords(); // Use ToWords instead of string formatting
                centsWords = System.Globalization.CultureInfo.CurrentCulture.TextInfo.ToTitleCase(centsWords.ToLower());

                string upperCaseOne = integerWords;
                string upperCaseTwo = centsWords;

                // Combine words and formatting
                string words;

                if (cents > 0)
                {
                    // If there is a decimal part, include "And" before it
                    words = $"{upperCaseOne} Pesos and {upperCaseTwo} Centavos Only";
                }
                else
                {
                    // If there is no decimal part, exclude "And"
                    words = $"{upperCaseOne} Pesos Only";
                }

                // Capitalize first letters
                // words = System.Globalization.CultureInfo.CurrentCulture.TextInfo.ToTitleCase(words.ToLower());

                words = words.Replace(" And", "");
                words = words.Replace("-", " ");
            }
            @if (Model.Header.Total != 0)
            {
                <td>*** @words ***</td>
            }
            else
            {
                <td></td>
            }
            <td></td>
        </tr>
        <tr>
            <td style="padding-left:20px;">Particulars :</td>
            <td><p style="margin: 0; padding: 0; text-align: justify">@Html.DisplayFor(model => model.Header!.Particulars)</p></td>
            <td></td>
        </tr>
        <tr>
            <td style="padding-left:20px;">Check #:</td>
            <td>@Html.DisplayFor(model => model.Header!.CheckNo)</td>
            <td></td>
        </tr>
        <tr>
            <td style="padding-left:20px;">Check Date:</td>
            <td>
                @if (Model.Header.AccruedType != "Invoicing")
                {
                    @Model.Header.CheckDate?.ToString(SD.Date_Format)
                }
            </td>
            <td></td>
        </tr>
        </tbody>
    </table>
</div>

<div class="table-responsive" style="margin-top:20px;">
    <table class="w-100">
        <thead>
        <tr style="border: 1px solid black;">
            <th colspan="4" style="padding-left:20px;">III. ACCOUNTING ENTRIES</th>
        </tr>
        </thead>
        <tbody>
        <tr>
            <td style="padding-left:20px;"></td>
            <th class="text-end">DEBIT</th>
            <th class="text-end">CREDIT</th>
        </tr>

        @foreach (var cv in Model.Details!.OrderBy(model => model.CheckVoucherDetailId))
        {
            <tr>
                <td style="width:60%; padding-left:20px;">@cv.AccountNo&nbsp;@cv.AccountName</td>
                <td class="text-end" style="width:7%;">@cv.Debit.ToString(SD.Two_Decimal_Format)</td>
                <td class="text-end" style="width:7%;">@cv.Credit.ToString(SD.Two_Decimal_Format)</td>
            </tr>
        }

        <tr style="border-bottom:double;"></tr>
        <tr>
            <td></td>
            <td class="text-end">@Model.Details!.Sum(d => d.Debit).ToString(SD.Two_Decimal_Format)</td>
            <td class="text-end">@Model.Details!.Sum(d => d.Credit).ToString(SD.Two_Decimal_Format)</td>
        </tr>
        </tbody>
    </table>
</div>

<div class="table-responsive" style="margin-top:20px;">
    <table class="w-100">
        <tbody class="text-center">
        <tr>
            <td>Prepared by :</td>
            <td>Reviewed by </td>
            <td>Approved by </td>
        </tr>
        <tr>
            <td style="width:33%;">
                <br />
                <span class="underline" style="display: inline-block; width:60%;">&nbsp;</span> <br />
            </td>
            <td style="width:33%;">
                <br />
                <span class="underline" style="display: inline-block; width:60%;">&nbsp;</span> <br />
            </td>
            <td style="width:33%;">
                <br />
                <span class="underline" style="display: inline-block; width:60%;">&nbsp;</span> <br />
            </td>
        </tr>
        </tbody>
    </table>
</div>
<br />

@if (Model.Header.Type == nameof(DocumentType.Documented))
{
    <div class="text-center w-100" style="margin-top:20px;">
        <em><strong>"THIS DOCUMENT IS NOT VALID FOR CLAIM OF INPUT TAX"</strong></em><br/><br/>
        @if (selectedCompany == "Filpride")
        {
            <p>
                <span>Acknowledgement Certificate No:</span>
                <span style="display: inline-block; width:150px;"> @CS.ACCN </span>
                <span>&nbsp;&nbsp;Date Issued:</span>
                <span style="display: inline-block; width:50px;"> @CS.DateIssued </span><br/>
                Series: CV0000000001 - CV9999999999
                Date and Time Created:&nbsp; @Model.Header.CreatedDate
            </p>
        }
    </div>
    <br />

    @if (selectedCompany == "Filpride")
    {
        <div class="text-start w-100 footer" style="margin-top:50px;">
            <p style="line-height: 1;">
                <em>
                    <strong>Software Name :</strong> @CS.AAS
                    <br/>
                    <strong>Version :</strong> @CS.Version
                    <br/>
                    <strong>Printed By :</strong> @UserManager.GetUserName(User)!.ToUpper()
                    <br/>
                    <strong>Date & Time Printed :</strong> @DateTimeHelper.GetCurrentPhilippineTime().ToString("MM/dd/yyyy hh:mm tt")
                </em>
            </p>
        </div>
    }

    @if (!Model.Header.IsPrinted)
    {
        <div class="text-end">
            ORIGINAL COPY
        </div>
    }
    else
    {
        <div class="text-end">
            REPRINT COPY
        </div>
    }
}

<div class="row pt-2">
    @{
        if (Model.Header.PostedBy == null)
        {
            <div class="col-6 col-md-3">
                <a id="approveButton" class="btn btn-primary form-control buttons" onclick="confirmPost(@Model.Header.CheckVoucherHeaderId)">Post</a>
            </div>
        }
        else
        {
            <div class="col-6 col-md-3">
                <a asp-area="Mobility" asp-controller="CheckVoucherNonTradeInvoice" asp-action="Printed" asp-route-id="@Model.Header.CheckVoucherHeaderId" asp-route-supplierId="@supplierId" onclick="window.print()" class="btn btn-primary form-control buttons">Print</a>
            </div>
        }
    }

    <div class="col-6 col-md-3">
        <a asp-area="Mobility" asp-controller="CheckVoucherNonTradeInvoice" asp-action="Index" class="btn btn-outline-primary border form-control buttons">Back to List</a>
    </div>
</div>

@section Scripts {
    <script>
        var originalFontSizes = [];
        function printPage() {
            var printButton = document.getElementById("printButton");
            var otherButton = document.getElementById("otherButton");

            // Hide the header and footer
            document.querySelector("header").style.display = "none";

            // Hide the buttons before printing
            if (printButton) {
                printButton.style.visibility = "hidden";
            }
            if (otherButton) {
                otherButton.style.visibility = "hidden";
            }

            // Get all paragraph elements
            var paragraphs = document.querySelectorAll("p");

            // Store the original font sizes
            for (var i = 0; i < paragraphs.length; i++) {
                originalFontSizes[i] = paragraphs[i].style.fontSize;
                // Set the font size of all paragraph elements to 12px for printing
                paragraphs[i].style.fontSize = "12px";
            }

            // Get all table text elements
            var mytable = document.querySelectorAll("table");

            // Store the original font sizes
            for (var i = 0; i < mytable.length; i++) {
                originalFontSizes[i] = mytable[i].style.fontSize;
                // Set the font size of all paragraph elements to 12px for printing
                mytable[i].style.fontSize = "12px";
            }

            // Call the print function
            window.print();

            // Restore the font sizes
            for (var i = 0; i < paragraphs.length; i++) {
                paragraphs[i].style.fontSize = originalFontSizes[i];
            }

            // Restore the font sizes
            for (var i = 0; i < mytable.length; i++) {
                mytable[i].style.fontSize = originalFontSizes[i];
            }

            // Restore the buttons' visibility after printing (optional)
            if (printButton) {
                printButton.style.visibility = "visible";
            }
            if (otherButton) {
                otherButton.style.visibility = "visible";
            }

            // Restore the header and footer's visibility after printing (optional)
            document.querySelector("header").style.display = "";
        }
    </script>
    <script>
        function confirmPost(id) {
            Swal.fire({
                title: 'Are you sure?',
                text: "You won't be able to revert this!",
                icon: 'warning',
                showCancelButton: true,
                confirmButtonColor: '#3085d6',
                cancelButtonColor: '#d33',
                confirmButtonText: 'Post'
            }).then((result) => {
                if (result.isConfirmed) {
                    // Properly encode the parameters to prevent any issues with special characters
                    var url = `@Url.Action("Post", "CheckVoucherNonTradeInvoice", new { area = "Mobility" })?id=${encodeURIComponent(id)}&supplierId=${encodeURIComponent(@supplierId)}`;
                    window.location.href = url;
                }
            })
        }
    </script>

}