@using IBS.Utility.Constants
@model IEnumerable<MobilityInventory>

@{
    ViewData["Title"] = "Inventory Costing";
}

<style>
    .container {
        max-width: none;
    }

    @@media print {
        /* Hide all elements except for the table */
        body * {
            visibility: hidden;
        }

        /* Make table visible */
        #inventory-table, #inventory-table * {
            visibility: visible;
        }

        /* Set table to full width for printing */
        #inventory-table {
            position: absolute;
            left: 0;
            top: 0;
            width: 100%;
            height: auto;
            overflow: visible;
        }

        /* Style adjustments for print */
        table {
            border-collapse: collapse;
            width: 100%;
        }

        th, td {
            padding: 8px;
            text-align: left;
        }

        th {
            background-color: #f2f2f2;
        }
    }

    .table-container {
        max-height: 70vh; /* Adjust the height as needed */
        overflow-y: auto;
    }

    .table thead th {
        position: sticky;
        top: 0;
        background-color: #f8f9fa; /* Adjust background color as needed */
        z-index: 10; /* Ensure the header stays above the table rows */
    }

    .table thead th, .table tbody td {
        padding: 0.75rem;
        vertical-align: middle;
    }
</style>

@if (Model.Any())
{
    <div id="inventory-table" class="table-container">
        <div class="mb-2">
            <h5>STATION: @ViewData["Station"]</h5>
            <h5>PRODUCT: @ViewData["Product"]</h5>
        </div>
        <table class="table table-bordered">
            <thead>
                <tr>
                    <th colspan="13" class="text-center table-primary">INVENTORY COSTING</th>
                </tr>
                <tr class="text-center">
                    <th>Particulars</th>
                    <th>Date</th>
                    <th>Ref</th>
                    <th>Quantity</th>
                    <th>Unit Cost</th>
                    <th>Total Cost</th>
                    <th>Running Cost</th>
                    <th>Inventory Balance</th>
                    <th>Unit Cost</th>
                    <th>Inventory Value</th>
                    <th>COGS</th>
                    <th>Status</th>
                </tr>
            </thead>
            <tbody>
                @foreach (var obj in Model.OrderBy(i => i.Date).ThenBy(i => i.InventoryId))
                {
                    <tr>
                        <td>@Html.DisplayFor(model => obj.Particulars)</td>
                        <td>@Html.DisplayFor(model => obj.Date)</td>
                        @if (obj.ValidatedBy != "N/A")
                        {
                            <td>
                                <a asp-area="Mobility" asp-controller="Inventory" asp-action="ViewDetail"
                                   asp-route-transactionNo="@obj.TransactionNo" 
                                   asp-route-productCode="@obj.ProductCode" 
                                   asp-route-typeOfTransaction="@obj.Particulars" 
                                   asp-route-stationCode="@obj.StationCode" 
                                   title="Click this link to preview." 
                                   target="_blank">@Html.DisplayFor(model => obj.Reference)
                                    </a>
                            </td>
                        }
                        else
                        {
                            <td>@Html.DisplayFor(model => obj.Reference)</td>
                        }
                        <td class="text-end">@obj.Quantity.ToString(SD.Two_Decimal_Format)</td>
                        <td class="text-end">@obj.UnitCost.ToString(SD.Four_Decimal_Format)</td>
                        <td class="text-end">@obj.TotalCost.ToString(SD.Two_Decimal_Format)</td>
                        <td class="text-end">@obj.RunningCost.ToString(SD.Two_Decimal_Format)</td>
                        <td class="text-end">@obj.InventoryBalance.ToString(SD.Two_Decimal_Format)</td>
                        <td class="text-end">@obj.UnitCostAverage.ToString(SD.Four_Decimal_Format)</td>
                        <td class="text-end">@obj.InventoryValue.ToString(SD.Two_Decimal_Format)</td>
                        <td class="text-end">@obj.CostOfGoodsSold.ToString(SD.Two_Decimal_Format)</td>
                        
                        @if (obj.ValidatedBy == "N/A")
                        {
                            <td></td>
                        }
                        else if (obj.ValidatedBy != null)
                        {
                            <td><span class="badge text-bg-primary">Validated</span></td>
                        }
                        else
                        {
                            <td><a href="#" onclick="confirmValidation(@obj.InventoryId)" class="badge text-bg-warning" title="Click this to validate.">Validate</a></td>
                        }
                    </tr>
                }
            </tbody>
        </table>
    </div>
}
else
{
    <p><i>No data available in report.</i></p>
}

<div class="row mt-5">
    <div class="col-6 col-md-3">
        <a onclick="window.print()" class="btn btn-primary form-control buttons">Print</a>
    </div>
    <div class="col-6 col-md-3">
        <a asp-area="Mobility" asp-controller="Inventory" asp-action="GenerateInventoryCosting" class="btn btn-outline-primary border form-control buttons">Back</a>
    </div>
</div>

@section Scripts {
    <script>
        function confirmValidation(id) {
            Swal.fire({
                title: 'Are you sure?',
                text: 'You are about to validate this inventory.',
                icon: 'warning',
                showCancelButton: true,
                confirmButtonColor: '#3085d6',
                cancelButtonColor: '#d33',
                confirmButtonText: 'Yes'
            }).then((result) => {
                if (result.isConfirmed) {
                    validateInventory(id);
                }
            });
        }

        function validateInventory(id) {
            $.ajax({
                url: '@Url.Action("ValidatePurchases", "Inventory")',
                type: 'POST',
                data: { id: id },
                success: function () {
                    Swal.fire({
                        icon: 'success',
                        title: 'Success',
                        text: 'The record was validated successfully.',
                        showConfirmButton: false,
                        timer: 1500 // Close the alert after 1.5 seconds
                    }).then(() => {
                        window.location.reload();
                    });
                },
                error: function () {
                    Swal.fire({
                        icon: 'error',
                        title: 'Error',
                        text: 'Failed to validate inventory.',
                        showConfirmButton: false,
                        timer: 1500 // Close the alert after 1.5 seconds
                    });
                }
            });
        }
    </script>
}
