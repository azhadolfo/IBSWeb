@model IEnumerable<MobilityCustomerOrderSlip>
@using Microsoft.AspNetCore.Identity
@inject SignInManager<IdentityUser> SignInManager
@inject UserManager<IdentityUser> UserManager
@using IBS.Utility

@{
    ViewData["Title"] = "Customer Order Slip";
    var userDepartment = ViewBag.userDepartment;
    var currentStationCode = ViewData["currentStationCode"] as string;
    var currentStationName = ViewData["currentStationName"] as string;
}

<div class="card shadow border-0 mt-4">

    <div class="card-header bg-secondary bg-gradient ml-0 py-3">
        <div class="row">
            <div class="col-12 text-center">
                <h2 class="text-white py-2">CUSTOMER ORDER SLIP: <u>@currentStationName</u></h2>
            </div>
        </div>
    </div>

    <div class="card-body p-4 table-responsive">

        <div class="row pb-3">
            <div class="col-2"></div>
            <div class="col-8 text-center">
                @if (currentStationCode == "ALL")
                {
                    <div class="text-center">
                        <label>
                            <input type="radio" name="stationRadio" value="" class="search-radio ms-2"> All Stations
                        </label>
                        <label>
                            <input type="radio" name="stationRadio" value="S08" class="search-radio ms-2"> Tarlac
                        </label>
                        <label>
                            <input type="radio" name="stationRadio" value="S21" class="search-radio ms-2"> Santiago
                        </label>
                    </div>
                }

                <div class="text-center">
                    <label>
                        <input type="radio" name="statusRadio" value="" class="search-radio ms-2"> Show All
                    </label>
                    <label>
                        <input type="radio" name="statusRadio" value="Approved" class="search-radio ms-2"> Approved
                    </label>
                    @if (userDepartment != SD.Department_StationCashier)
                    {
                        <label>
                            <input type="radio" name="statusRadio" value="Disapproved" class="search-radio ms-2"> Disapproved
                        </label>
                        <label>
                            <input type="radio" name="statusRadio" value="Pending" class="search-radio ms-2"> Pending
                        </label>
                    }
                    <label>
                        <input type="radio" name="statusRadio" value="Lifted" class="search-radio ms-2"> Lifted
                    </label>
                </div>
            </div>

            @if (userDepartment == SD.Department_Marketing || User.IsInRole("Admin"))
            {
                <div class="col-2 text-end">
                    <a asp-area="Mobility" asp-controller="CustomerOrderSlip" asp-action="Create" class="btn btn-primary">
                        <i class="bi bi-plus-circle"></i> Create COS
                    </a>
                </div>
            }

        </div>

        <table class="table table-bordered" id="dataTable">
            <thead>
                <tr>
                    <th class="text-start align-middle">@Html.DisplayNameFor(model => model.CustomerOrderSlipNo)</th>
                    @if (currentStationCode == "ALL")
                    {
                        <th class="text-start align-middle">@Html.DisplayNameFor(model => model.StationCode)</th>
                    }
                    <th class="text-start align-middle">@Html.DisplayNameFor(model => model.Date)</th>
                    <th class="text-start align-middle">@Html.DisplayNameFor(model => model.Customer)</th>
                    <th class="text-start align-middle">@Html.DisplayNameFor(model => model.Driver)</th>
                    <th class="text-start align-middle">@Html.DisplayNameFor(model => model.PlateNo)</th>
                    <th class="text-start align-middle">@Html.DisplayNameFor(model => model.Product)</th>
                    <th class="text-start align-middle">@Html.DisplayNameFor(model => model.Quantity)</th>
                    <th class="text-start align-middle">@Html.DisplayNameFor(model => model.Amount)</th>
                    <th class="text-start align-middle">@Html.DisplayNameFor(model => model.Status)</th>
                    <th class="text-center align-middle">Actions</th>
                </tr>
            </thead>

            <tbody>
                @foreach (var item in Model)
                {
                    if ((userDepartment == SD.Department_StationCashier) && (item.Status == "Pending" || item.Status == "Disapproved"))
                    {
                        // Will not show cashier the pending and disapproved
                    }
                    else
                    {
                        <tr>
                            <td class="text-start align-middle">
                                @item.CustomerOrderSlipNo
                            </td>
                            @if (currentStationCode == "ALL")
                            {
                                <td class="text-start align-middle">
                                    @Html.DisplayFor(model => item.MobilityStation.StationName)
                                </td>
                            }
                            <td class="text-start align-middle">
                                @item.Date.ToString("yyyy/MM/dd")
                            </td>
                            <td class="text-start align-middle">
                                @item.Customer.CustomerName
                            </td>
                            <td class="text-start align-middle">
                                @item.Driver
                            </td>
                            <td class="text-start align-middle">
                                @item.PlateNo
                            </td>
                            <td class="text-start align-middle">
                                @item.Product.ProductName
                            </td>
                            <td class="text-start align-middle">
                                @Html.DisplayFor(model => item.Quantity)
                            </td>
                            <td class="text-start align-middle">
                                @Html.DisplayFor(model => item.Amount)
                            </td>
                            <td class="text-center align-middle">
                                @{
                                    var status = item.Status == "Disapproved"
                                    ? "Disapproved"
                                    : item.Status == "Approved"
                                    ? "Approved"
                                    : item.Status == "Lifted"
                                    ? "Lifted"
                                    : "Pending";
                                }
                                <span class="badge rounded-pill @if(item.Status == "Approved") {
                                                            <text>bg-info</text>
                                    } else if(status == "Disapproved") {
                                                            <text>bg-danger</text>
                                    } else if(status == "Pending") {
                                                            <text>bg-warning</text>
                                    } else if(status == "Lifted") {
                                                            <text>bg-success</text>
                                    }" style="font-size: 14px">@Html.DisplayFor(model => item.Status)</span>
                            </td>
                            <td class="text-center">
                                <div class="dropdown">
                                    <button class="btn btn-light dropdown-toggle w-100" type="button" id="actionsDropdown" data-bs-toggle="dropdown" aria-expanded="false">Actions</button>
                                    <ul class="dropdown-menu" aria-labelledby="actionsDropdown">
                                        @if ((userDepartment == SD.Department_Marketing || User.IsInRole("Admin")) && (item.Status == "Pending" || item.Status == "Disapproved"))
                                        {
                                            <li><a class="dropdown-item" href="@Url.Action("Edit", "CustomerOrderSlip", new { area = "Mobility" })/@item.CustomerOrderSlipId">Edit</a></li>
                                        }
                                        <li><a class="dropdown-item" href="@Url.Action("Print", "CustomerOrderSlip", new { area = "Mobility" })/@item.CustomerOrderSlipId">Preview</a></li>
                                    </ul>
                                </div>
                            </td>
                        </tr>
                    }
                }
            </tbody>
        </table>
    </div>
</div>

@section Scripts {
    <script>
        $(document).ready(function () {
            var userDepartment = '@ViewBag.userDepartment';
            var currentStationCode = '@ViewData["currentStationCode"]';

            if (userDepartment === "Cashier" && currentStationCode === "ALL") {
                // Redirect to the logout page with the return URL
                window.location.href = '@Url.Page("/Account/Logout", new { area = "Identity", returnUrl = Url.Action("Index", "Home", new { area = "" }) })';
            }
        });
    </script>

    <script>
        $(document).ready(function () {
            var userDepartment = '@ViewBag.userDepartment';
            var currentStationCode = '@ViewData["currentStationCode"]';

            var statusFilter = "";  // Default is empty (All)
            var stationFilter = ""; // Default is empty (All)

            $('input[name="statusRadio"]').change(function () {
                statusFilter = $(this).val();  // Get the selected value of the status group
            });

            $('input[name="stationRadio"]').change(function () {
                stationFilter = $(this).val();  // Get the selected value of the station group
            });

            $('.search-radio').change(function () {
                var selectedFilter = $(this).val();

                // Query based on radio buttons
                if (stationFilter == "S08"){
                    if (statusFilter == "Approved") {
                        var filteredModel = @Html.Raw(Json.Serialize(Model.OrderBy(j => j.CustomerOrderSlipNo).Where(j => j.Status == "Approved" && j.StationCode == "S08")));
                    }
                    if (statusFilter == "Disapproved") {
                        var filteredModel = @Html.Raw(Json.Serialize(Model.OrderBy(j => j.CustomerOrderSlipNo).Where(j => j.Status == "Disapproved" && j.StationCode == "S08")));
                    }
                    if (statusFilter == "") {
                        var filteredModel = @Html.Raw(Json.Serialize(Model.OrderBy(j => j.CustomerOrderSlipNo).Where(j => j.StationCode == "S08")));
                    }
                    if (statusFilter == "Lifted") {
                        var filteredModel = @Html.Raw(Json.Serialize(Model.OrderBy(j => j.CustomerOrderSlipNo).Where(j => j.Status == "Lifted" && j.StationCode == "S08")));
                    }
                    if (statusFilter == "Pending") {
                        var filteredModel = @Html.Raw(Json.Serialize(Model.OrderBy(j => j.CustomerOrderSlipNo).Where(j => j.Status == "Pending" && j.StationCode == "S08")));
                    }
                }
                if (stationFilter == "S21"){
                    if (statusFilter == "Approved") {
                        var filteredModel = @Html.Raw(Json.Serialize(Model.OrderBy(j => j.CustomerOrderSlipNo).Where(j => j.Status == "Approved" && j.StationCode == "S21")));
                    }
                    if (statusFilter == "Disapproved") {
                        var filteredModel = @Html.Raw(Json.Serialize(Model.OrderBy(j => j.CustomerOrderSlipNo).Where(j => j.Status == "Disapproved" && j.StationCode == "S21")));
                    }
                    if (statusFilter == "") {
                        var filteredModel = @Html.Raw(Json.Serialize(Model.OrderBy(j => j.CustomerOrderSlipNo).Where(j => j.StationCode == "S21")));
                    }
                    if (statusFilter == "Lifted") {
                        var filteredModel = @Html.Raw(Json.Serialize(Model.OrderBy(j => j.CustomerOrderSlipNo).Where(j => j.Status == "Lifted" && j.StationCode == "S21")));
                    }
                    if (statusFilter == "Pending") {
                        var filteredModel = @Html.Raw(Json.Serialize(Model.OrderBy(j => j.CustomerOrderSlipNo).Where(j => j.Status == "Pending" && j.StationCode == "S21")));
                    }
                }
                if (stationFilter == ""){
                    if (statusFilter == "Approved") {
                        var filteredModel = @Html.Raw(Json.Serialize(Model.OrderBy(j => j.CustomerOrderSlipNo).Where(j => j.Status == "Approved")));
                    }
                    if (statusFilter == "Disapproved") {
                        var filteredModel = @Html.Raw(Json.Serialize(Model.OrderBy(j => j.CustomerOrderSlipNo).Where(j => j.Status == "Disapproved")));
                    }
                    if (statusFilter == "") {
                        var filteredModel = @Html.Raw(Json.Serialize(Model.OrderBy(j => j.CustomerOrderSlipNo)));
                    }
                    if (statusFilter == "Lifted") {
                        var filteredModel = @Html.Raw(Json.Serialize(Model.OrderBy(j => j.CustomerOrderSlipNo).Where(j => j.Status == "Lifted")));
                    }
                    if (statusFilter == "Pending") {
                        var filteredModel = @Html.Raw(Json.Serialize(Model.OrderBy(j => j.CustomerOrderSlipNo).Where(j => j.Status == "Pending")));
                    }
                }
                if ($.fn.DataTable.isDataTable('#dataTable')) {
                    $('#dataTable').DataTable().destroy();
                }

                // Clear the table body content
                $('#dataTable tbody').empty();
                $.each(filteredModel, function (index, value) {
                    // Skip items based on user department and status
                    console.log(userDepartment);
                    if (userDepartment === "Station Cashier" && (value.status === "Pending" || value.status === "Disapproved")) {
                        return; // continue to the next item
                    }

                    // Determine badge class for status
                    let badgeClass = "";
                    switch (value.status) {
                        case "Approved":
                            badgeClass = "bg-info";
                            break;
                        case "Disapproved":
                            badgeClass = "bg-danger";
                            break;
                        case "Pending":
                            badgeClass = "bg-warning";
                            break;
                        case "Lifted":
                            badgeClass = "bg-success";
                            break;
                        default:
                            badgeClass = "bg-secondary";
                    }

                    // Append a new row to the table body
                    $('#dataTable tbody').append(`
                    <tr>
                        <td class="text-start align-middle">${value.customerOrderSlipNo}</td>
                        ${currentStationCode === "ALL" ? `<td class="text-start align-middle">${value.mobilityStation?.stationName || ''}</td>` : ''}
                        <td class="text-start align-middle">${new Date(value.date).toLocaleDateString()}</td>
                        <td class="text-start align-middle">${value.customer?.customerName || ''}</td>
                        <td class="text-start align-middle">${value.driver || ''}</td>
                        <td class="text-start align-middle">${value.plateNo || ''}</td>
                        <td class="text-start align-middle">${value.product?.productName || ''}</td>
                        <td class="text-end align-middle">${(value.quantity || 0).toFixed(2)}</td>
                        <td class="text-end align-middle">${(value.amount || 0).toFixed(2)}</td>
                        <td class="text-center align-middle">
                            <span class="badge rounded-pill ${badgeClass}" style="font-size: 14px">
                                ${value.status}
                            </span>
                        </td>
                        <td class="text-center">
                            <div class="dropdown">
                                <button class="btn btn-light dropdown-toggle w-100" type="button" id="actionsDropdown${index}"
                                        data-bs-toggle="dropdown" aria-expanded="false">Actions</button>
                                <ul class="dropdown-menu" aria-labelledby="actionsDropdown${index}">
                                    ${(userDepartment === "Marketing" || userDepartment === "Admin") &&
                            (value.status === "Pending" || value.status === "Disapproved")
                            ? `<li><a class="dropdown-item" href="/Mobility/CustomerOrderSlip/Edit/${value.customerOrderSlipId}">Edit</a></li>`
                            : ''
                        }
                                    <li>
                                        <a class="dropdown-item" href="/Mobility/CustomerOrderSlip/Print/${value.customerOrderSlipId}">Preview</a>
                                    </li>
                                </ul>
                            </div>
                        </td>
                    </tr>
                `);
                });

                $('#dataTable').DataTable({
                    "bInfo": true // This will disable the "Showing x to y of z entries" info text
                });
            });
        });
    </script>
}